// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AzureSqlFirewallRule` allows you to manage an Azure SQL Firewall Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const sqlFirewallRule = new duplocloud.AzureSqlFirewallRule("sql_firewall_rule", {
 *     tenantId: myapp.tenantId,
 *     name: "test-rule",
 *     serverName: "test-server",
 *     startIpAddress: "10.0.17.62",
 *     endIpAddress: "10.0.17.62",
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing Azure SQL server Firewall Rule
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SERVER_NAME* is the name of the Azure Sql server
 *
 *  - *RULE_NAME* is the name of the Azure Sql server Firewall Rule
 *
 * ```sh
 * $ pulumi import duplocloud:index/azureSqlFirewallRule:AzureSqlFirewallRule sql_firewall_rule *TENANT_ID*&#47;*SERVER_NAME*&#47;*RULE_NAME*
 * ```
 */
export class AzureSqlFirewallRule extends pulumi.CustomResource {
    /**
     * Get an existing AzureSqlFirewallRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureSqlFirewallRuleState, opts?: pulumi.CustomResourceOptions): AzureSqlFirewallRule {
        return new AzureSqlFirewallRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/azureSqlFirewallRule:AzureSqlFirewallRule';

    /**
     * Returns true if the given object is an instance of AzureSqlFirewallRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureSqlFirewallRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureSqlFirewallRule.__pulumiType;
    }

    /**
     * The ID of the SQL firewall rule.
     */
    public /*out*/ readonly azureId!: pulumi.Output<string>;
    /**
     * The ending IP address to allow through the firewall for this rule.
     */
    public readonly endIpAddress!: pulumi.Output<string>;
    /**
     * The name of the firewall rule.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the SQL Server on which to create the Firewall Rule.
     */
    public readonly serverName!: pulumi.Output<string>;
    /**
     * The starting IP address to allow through the firewall for this rule.
     */
    public readonly startIpAddress!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the sql firewall rule will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AzureSqlFirewallRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureSqlFirewallRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureSqlFirewallRuleArgs | AzureSqlFirewallRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureSqlFirewallRuleState | undefined;
            resourceInputs["azureId"] = state ? state.azureId : undefined;
            resourceInputs["endIpAddress"] = state ? state.endIpAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverName"] = state ? state.serverName : undefined;
            resourceInputs["startIpAddress"] = state ? state.startIpAddress : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AzureSqlFirewallRuleArgs | undefined;
            if ((!args || args.endIpAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endIpAddress'");
            }
            if ((!args || args.serverName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverName'");
            }
            if ((!args || args.startIpAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startIpAddress'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["endIpAddress"] = args ? args.endIpAddress : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverName"] = args ? args.serverName : undefined;
            resourceInputs["startIpAddress"] = args ? args.startIpAddress : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["azureId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureSqlFirewallRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureSqlFirewallRule resources.
 */
export interface AzureSqlFirewallRuleState {
    /**
     * The ID of the SQL firewall rule.
     */
    azureId?: pulumi.Input<string>;
    /**
     * The ending IP address to allow through the firewall for this rule.
     */
    endIpAddress?: pulumi.Input<string>;
    /**
     * The name of the firewall rule.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the SQL Server on which to create the Firewall Rule.
     */
    serverName?: pulumi.Input<string>;
    /**
     * The starting IP address to allow through the firewall for this rule.
     */
    startIpAddress?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the sql firewall rule will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureSqlFirewallRule resource.
 */
export interface AzureSqlFirewallRuleArgs {
    /**
     * The ending IP address to allow through the firewall for this rule.
     */
    endIpAddress: pulumi.Input<string>;
    /**
     * The name of the firewall rule.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the SQL Server on which to create the Firewall Rule.
     */
    serverName: pulumi.Input<string>;
    /**
     * The starting IP address to allow through the firewall for this rule.
     */
    startIpAddress: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the sql firewall rule will be created in.
     */
    tenantId: pulumi.Input<string>;
}
