// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AzureLogAnalyticsWorkspace` manages an Azure Log Analytics Workspace in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const logAnalyticsWorkspace = new duplocloud.AzureLogAnalyticsWorkspace("log_analytics_workspace", {
 *     infraName: "demo",
 *     resourceGroupName: "duploinfra-demo",
 *     name: "test",
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing Azure Log Analytics Workspace
 *
 *  - *INFRA_NAME* is the name of duplo infra.
 *
 *  - *NAME* is the name of the Log Analytics Workspace
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/azureLogAnalyticsWorkspace:AzureLogAnalyticsWorkspace log_analytics_workspace *INFRA_NAME*&#47;*NAME*
 * ```
 */
export class AzureLogAnalyticsWorkspace extends pulumi.CustomResource {
    /**
     * Get an existing AzureLogAnalyticsWorkspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureLogAnalyticsWorkspaceState, opts?: pulumi.CustomResourceOptions): AzureLogAnalyticsWorkspace {
        return new AzureLogAnalyticsWorkspace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/azureLogAnalyticsWorkspace:AzureLogAnalyticsWorkspace';

    /**
     * Returns true if the given object is an instance of AzureLogAnalyticsWorkspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureLogAnalyticsWorkspace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureLogAnalyticsWorkspace.__pulumiType;
    }

    public /*out*/ readonly azureId!: pulumi.Output<string>;
    /**
     * The name of the infrastructure. Infrastructure names are globally unique and less than 13 characters.
     */
    public readonly infraName!: pulumi.Output<string>;
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name of the Log Analytics Workspace. Workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly publicNetworkAccessForIngestion!: pulumi.Output<string>;
    public /*out*/ readonly publicNetworkAccessForQuery!: pulumi.Output<string>;
    /**
     * The name of the resource group in which the Log Analytics workspace is created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    public /*out*/ readonly retentionInDays!: pulumi.Output<number>;
    public /*out*/ readonly sku!: pulumi.Output<string>;
    /**
     * Whether or not to wait until Log Analytics Workspace to be ready, after creation. Defaults to `true`.
     */
    public readonly waitUntilReady!: pulumi.Output<boolean | undefined>;

    /**
     * Create a AzureLogAnalyticsWorkspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureLogAnalyticsWorkspaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureLogAnalyticsWorkspaceArgs | AzureLogAnalyticsWorkspaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureLogAnalyticsWorkspaceState | undefined;
            resourceInputs["azureId"] = state ? state.azureId : undefined;
            resourceInputs["infraName"] = state ? state.infraName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publicNetworkAccessForIngestion"] = state ? state.publicNetworkAccessForIngestion : undefined;
            resourceInputs["publicNetworkAccessForQuery"] = state ? state.publicNetworkAccessForQuery : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["retentionInDays"] = state ? state.retentionInDays : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["waitUntilReady"] = state ? state.waitUntilReady : undefined;
        } else {
            const args = argsOrState as AzureLogAnalyticsWorkspaceArgs | undefined;
            if ((!args || args.infraName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'infraName'");
            }
            resourceInputs["infraName"] = args ? args.infraName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["waitUntilReady"] = args ? args.waitUntilReady : undefined;
            resourceInputs["azureId"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["publicNetworkAccessForIngestion"] = undefined /*out*/;
            resourceInputs["publicNetworkAccessForQuery"] = undefined /*out*/;
            resourceInputs["retentionInDays"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureLogAnalyticsWorkspace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureLogAnalyticsWorkspace resources.
 */
export interface AzureLogAnalyticsWorkspaceState {
    azureId?: pulumi.Input<string>;
    /**
     * The name of the infrastructure. Infrastructure names are globally unique and less than 13 characters.
     */
    infraName?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Log Analytics Workspace. Workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    publicNetworkAccessForIngestion?: pulumi.Input<string>;
    publicNetworkAccessForQuery?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Log Analytics workspace is created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    retentionInDays?: pulumi.Input<number>;
    sku?: pulumi.Input<string>;
    /**
     * Whether or not to wait until Log Analytics Workspace to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AzureLogAnalyticsWorkspace resource.
 */
export interface AzureLogAnalyticsWorkspaceArgs {
    /**
     * The name of the infrastructure. Infrastructure names are globally unique and less than 13 characters.
     */
    infraName: pulumi.Input<string>;
    /**
     * Specifies the name of the Log Analytics Workspace. Workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Log Analytics workspace is created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Whether or not to wait until Log Analytics Workspace to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}
