// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.OtherAgents` manages an other agents in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const agents = new duplocloud.OtherAgents("agents", {
 *     name: "duplo-agents",
 *     agents: [{
 *         agentName: "CloudWatchAgent_0",
 *         agentLinuxPackagePath: "https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb",
 *         linuxAgentInstallStatusCmd: "sudo service amazon-cloudwatch-agent status | grep -wc 'running'",
 *         linuxAgentServiceName: "amazon-cloudwatch-agent",
 *         linuxAgentUninstallStatusCmd: "OS_FAMILY=$(cat /etc/os-release | grep PRETTY_NAME); if [[ $OS_FAMILY == *'Ubuntu'* ]]; then sudo apt-get purge --yes --force-yes amazon-cloudwatch-agent; else sudo yum remove -y AwsAgent; fi",
 *         linuxInstallCmd: "OS_FAMILY=$(cat /etc/os-release | grep PRETTY_NAME); if [[ $OS_FAMILY == *'Ubuntu'* ]]; then wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb; sudo dpkg -i -E ./amazon-cloudwatch-agent.deb; sudo wget -O /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json https://cf-templates-3qf987fmmv5g-us-east-2.s3.us-east-2.amazonaws.com/amazon-cloudwatch-agent.json; sudo service amazon-cloudwatch-agent restart; else wget https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm; sudo rpm -U ./amazon-cloudwatch-agent.rpm; sudo wget -O /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json https://cf-templates-3qf987fmmv5g-us-east-2.s3.us-east-2.amazonaws.com/amazon-cloudwatch-agent.json && sudo service amazon-cloudwatch-agent restart; fi",
 *         windowsAgentServiceName: "amazon-cloudwatch-agent",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing other agents
 *
 *  - *SHORTNAME* is the short name of the other agents
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/otherAgents:OtherAgents agents *SHORTNAME*
 * ```
 */
export class OtherAgents extends pulumi.CustomResource {
    /**
     * Get an existing OtherAgents resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OtherAgentsState, opts?: pulumi.CustomResourceOptions): OtherAgents {
        return new OtherAgents(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/otherAgents:OtherAgents';

    /**
     * Returns true if the given object is an instance of OtherAgents.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OtherAgents {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OtherAgents.__pulumiType;
    }

    public readonly agents!: pulumi.Output<outputs.OtherAgentsAgent[]>;
    /**
     * Resource name to create other agents in duplo.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a OtherAgents resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OtherAgentsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OtherAgentsArgs | OtherAgentsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OtherAgentsState | undefined;
            resourceInputs["agents"] = state ? state.agents : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as OtherAgentsArgs | undefined;
            if ((!args || args.agents === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agents'");
            }
            resourceInputs["agents"] = args ? args.agents : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OtherAgents.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OtherAgents resources.
 */
export interface OtherAgentsState {
    agents?: pulumi.Input<pulumi.Input<inputs.OtherAgentsAgent>[]>;
    /**
     * Resource name to create other agents in duplo.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OtherAgents resource.
 */
export interface OtherAgentsArgs {
    agents: pulumi.Input<pulumi.Input<inputs.OtherAgentsAgent>[]>;
    /**
     * Resource name to create other agents in duplo.
     */
    name?: pulumi.Input<string>;
}
