// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsApigatewayEvent` manages an AWS API Gateway events with integration in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const apigatewayEvent = new duplocloud.AwsApigatewayEvent("apigateway_event", {
 *     tenantId: myapp.tenantId,
 *     apiGatewayId: "t84tb3skz0",
 *     method: "POST",
 *     path: "/v2/docs",
 *     cors: true,
 *     authorizationType: "COGNITO_USER_POOLS",
 *     authorizerId: "gto03x",
 *     integration: {
 *         type: "AWS_PROXY",
 *         uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:1234567890:function:duploservices-dev-valuation-test/invocations",
 *         timeout: 29000,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS API Gateway Event
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *API_GATEWAY_ID* The API Gateway ID.
 *
 *  - *METHOD* The HTTP Method.
 *
 *  - *PATH* The API endpoint path.
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsApigatewayEvent:AwsApigatewayEvent ssm_param *TENANT_ID*&#47;*API_GATEWAY_ID*&#47;*METHOD*&#47;*PATH*
 * ```
 */
export class AwsApigatewayEvent extends pulumi.CustomResource {
    /**
     * Get an existing AwsApigatewayEvent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsApigatewayEventState, opts?: pulumi.CustomResourceOptions): AwsApigatewayEvent {
        return new AwsApigatewayEvent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsApigatewayEvent:AwsApigatewayEvent';

    /**
     * Returns true if the given object is an instance of AwsApigatewayEvent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsApigatewayEvent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsApigatewayEvent.__pulumiType;
    }

    /**
     * The ID of the REST API.
     */
    public readonly apiGatewayId!: pulumi.Output<string>;
    /**
     * Specify if the method requires an API key.
     */
    public readonly apiKeyRequired!: pulumi.Output<boolean>;
    /**
     * Type of authorization used for the method. (`NONE`, `CUSTOM`, `AWS_IAM`, `COGNITO_USER_POOLS`)
     */
    public readonly authorizationType!: pulumi.Output<string>;
    /**
     * Authorizer id to be used when the authorization is `CUSTOM` or `COGNITO_USER_POOLS`.
     */
    public readonly authorizerId!: pulumi.Output<string>;
    /**
     * How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the passthroughBehaviors is configured to support payload pass-through.
     */
    public readonly contentHandling!: pulumi.Output<string>;
    /**
     * Enable handling of preflight requests.
     */
    public readonly cors!: pulumi.Output<boolean>;
    /**
     * Specify API gateway integration.
     */
    public readonly integration!: pulumi.Output<outputs.AwsApigatewayEventIntegration>;
    /**
     * HTTP Method.
     */
    public readonly method!: pulumi.Output<string>;
    /**
     * The path segment of API resource.
     */
    public readonly path!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the API gateway event will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AwsApigatewayEvent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsApigatewayEventArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsApigatewayEventArgs | AwsApigatewayEventState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsApigatewayEventState | undefined;
            resourceInputs["apiGatewayId"] = state ? state.apiGatewayId : undefined;
            resourceInputs["apiKeyRequired"] = state ? state.apiKeyRequired : undefined;
            resourceInputs["authorizationType"] = state ? state.authorizationType : undefined;
            resourceInputs["authorizerId"] = state ? state.authorizerId : undefined;
            resourceInputs["contentHandling"] = state ? state.contentHandling : undefined;
            resourceInputs["cors"] = state ? state.cors : undefined;
            resourceInputs["integration"] = state ? state.integration : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AwsApigatewayEventArgs | undefined;
            if ((!args || args.apiGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiGatewayId'");
            }
            if ((!args || args.integration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integration'");
            }
            if ((!args || args.method === undefined) && !opts.urn) {
                throw new Error("Missing required property 'method'");
            }
            if ((!args || args.path === undefined) && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["apiGatewayId"] = args ? args.apiGatewayId : undefined;
            resourceInputs["apiKeyRequired"] = args ? args.apiKeyRequired : undefined;
            resourceInputs["authorizationType"] = args ? args.authorizationType : undefined;
            resourceInputs["authorizerId"] = args ? args.authorizerId : undefined;
            resourceInputs["contentHandling"] = args ? args.contentHandling : undefined;
            resourceInputs["cors"] = args ? args.cors : undefined;
            resourceInputs["integration"] = args ? args.integration : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsApigatewayEvent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsApigatewayEvent resources.
 */
export interface AwsApigatewayEventState {
    /**
     * The ID of the REST API.
     */
    apiGatewayId?: pulumi.Input<string>;
    /**
     * Specify if the method requires an API key.
     */
    apiKeyRequired?: pulumi.Input<boolean>;
    /**
     * Type of authorization used for the method. (`NONE`, `CUSTOM`, `AWS_IAM`, `COGNITO_USER_POOLS`)
     */
    authorizationType?: pulumi.Input<string>;
    /**
     * Authorizer id to be used when the authorization is `CUSTOM` or `COGNITO_USER_POOLS`.
     */
    authorizerId?: pulumi.Input<string>;
    /**
     * How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the passthroughBehaviors is configured to support payload pass-through.
     */
    contentHandling?: pulumi.Input<string>;
    /**
     * Enable handling of preflight requests.
     */
    cors?: pulumi.Input<boolean>;
    /**
     * Specify API gateway integration.
     */
    integration?: pulumi.Input<inputs.AwsApigatewayEventIntegration>;
    /**
     * HTTP Method.
     */
    method?: pulumi.Input<string>;
    /**
     * The path segment of API resource.
     */
    path?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the API gateway event will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsApigatewayEvent resource.
 */
export interface AwsApigatewayEventArgs {
    /**
     * The ID of the REST API.
     */
    apiGatewayId: pulumi.Input<string>;
    /**
     * Specify if the method requires an API key.
     */
    apiKeyRequired?: pulumi.Input<boolean>;
    /**
     * Type of authorization used for the method. (`NONE`, `CUSTOM`, `AWS_IAM`, `COGNITO_USER_POOLS`)
     */
    authorizationType?: pulumi.Input<string>;
    /**
     * Authorizer id to be used when the authorization is `CUSTOM` or `COGNITO_USER_POOLS`.
     */
    authorizerId?: pulumi.Input<string>;
    /**
     * How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the passthroughBehaviors is configured to support payload pass-through.
     */
    contentHandling?: pulumi.Input<string>;
    /**
     * Enable handling of preflight requests.
     */
    cors?: pulumi.Input<boolean>;
    /**
     * Specify API gateway integration.
     */
    integration: pulumi.Input<inputs.AwsApigatewayEventIntegration>;
    /**
     * HTTP Method.
     */
    method: pulumi.Input<string>;
    /**
     * The path segment of API resource.
     */
    path: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the API gateway event will be created in.
     */
    tenantId: pulumi.Input<string>;
}
