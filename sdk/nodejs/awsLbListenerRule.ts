// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsLbListenerRule` manages an AWS Listener Rule in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const tenantId = "053a2efa-d03f-4e1d-b3b5-33c04cbed87e";
 * const vpcId = "vpc-0ba0667cfc200f060";
 * const certArn = "arn:aws:acm:us-west-2:957282632678:certificate/2e882320-5aa5-4b8d-881f-998050178205";
 * const alb = new duplocloud.AwsLoadBalancer("alb", {
 *     tenantId: tenantId,
 *     name: "tst-alb",
 *     isInternal: true,
 *     enableAccessLogs: true,
 *     dropInvalidHeaders: true,
 * });
 * const tg = new duplocloud.AwsLbTargetGroup("tg", {
 *     tenantId: tenantId,
 *     name: "tg1",
 *     port: 80,
 *     protocol: "HTTP",
 *     vpcId: vpcId,
 *     targetType: "instance",
 * });
 * const alb_listener = new duplocloud.AwsLoadBalancerListener("alb-listener", {
 *     tenantId: tenantId,
 *     loadBalancerName: alb.name,
 *     port: 8443,
 *     protocol: "HTTPS",
 *     targetGroupArn: tg.arn,
 *     certificateArn: certArn,
 * });
 * const static = new duplocloud.AwsLbListenerRule("static", {
 *     tenantId: tenantId,
 *     listenerArn: alb_listener.arn,
 *     priority: 100,
 *     actions: [{
 *         type: "forward",
 *         targetGroupArn: tg.arn,
 *     }],
 *     conditions: [
 *         {
 *             pathPattern: {
 *                 values: ["/static/*"],
 *             },
 *         },
 *         {
 *             hostHeader: {
 *                 values: ["example.com"],
 *             },
 *         },
 *     ],
 * });
 * // Forward action
 * const hostBasedWeightedRouting = new duplocloud.AwsLbListenerRule("host_based_weighted_routing", {
 *     tenantId: tenantId,
 *     listenerArn: alb_listener.arn,
 *     priority: 99,
 *     actions: [{
 *         type: "forward",
 *         targetGroupArn: tg.arn,
 *     }],
 *     conditions: [{
 *         hostHeader: {
 *             values: ["my-service.*.terraform.io"],
 *         },
 *     }],
 * });
 * // Redirect action
 * const redirectHttpToHttps = new duplocloud.AwsLbListenerRule("redirect_http_to_https", {
 *     tenantId: tenantId,
 *     listenerArn: alb_listener.arn,
 *     priority: 98,
 *     actions: [{
 *         type: "redirect",
 *         redirect: {
 *             port: "443",
 *             protocol: "HTTPS",
 *             statusCode: "HTTP_301",
 *         },
 *     }],
 *     conditions: [{
 *         httpHeader: {
 *             httpHeaderName: "X-Forwarded-For",
 *             values: ["192.168.1.*"],
 *         },
 *     }],
 * });
 * // Fixed-response action
 * const healthCheck = new duplocloud.AwsLbListenerRule("health_check", {
 *     tenantId: tenantId,
 *     listenerArn: alb_listener.arn,
 *     priority: 97,
 *     actions: [{
 *         type: "fixed-response",
 *         fixedResponse: {
 *             contentType: "text/plain",
 *             messageBody: "HEALTHY",
 *             statusCode: "200",
 *         },
 *     }],
 *     conditions: [{
 *         queryStrings: [
 *             {
 *                 key: "health",
 *                 value: "check",
 *             },
 *             {
 *                 key: "foo",
 *                 value: "bar",
 *             },
 *         ],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS AWS LB Listener Rule
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *RULE_ARN* is the ARN of the AWS LB Listener Rule
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsLbListenerRule:AwsLbListenerRule listener_rule *TENANT_ID*&#47;*RULE_ARN*
 * ```
 */
export class AwsLbListenerRule extends pulumi.CustomResource {
    /**
     * Get an existing AwsLbListenerRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsLbListenerRuleState, opts?: pulumi.CustomResourceOptions): AwsLbListenerRule {
        return new AwsLbListenerRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsLbListenerRule:AwsLbListenerRule';

    /**
     * Returns true if the given object is an instance of AwsLbListenerRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsLbListenerRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsLbListenerRule.__pulumiType;
    }

    public readonly actions!: pulumi.Output<outputs.AwsLbListenerRuleAction[]>;
    /**
     * The ARN of the rule.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match.
     */
    public readonly conditions!: pulumi.Output<outputs.AwsLbListenerRuleCondition[]>;
    /**
     * The ARN of the listener to which to attach the rule.
     */
    public readonly listenerArn!: pulumi.Output<string>;
    /**
     * The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
     */
    public readonly priority!: pulumi.Output<number>;
    public readonly tags!: pulumi.Output<outputs.AwsLbListenerRuleTag[]>;
    /**
     * The GUID of the tenant that the aws lb listener rule will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AwsLbListenerRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsLbListenerRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsLbListenerRuleArgs | AwsLbListenerRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsLbListenerRuleState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["conditions"] = state ? state.conditions : undefined;
            resourceInputs["listenerArn"] = state ? state.listenerArn : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AwsLbListenerRuleArgs | undefined;
            if ((!args || args.actions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actions'");
            }
            if ((!args || args.conditions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'conditions'");
            }
            if ((!args || args.listenerArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listenerArn'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["conditions"] = args ? args.conditions : undefined;
            resourceInputs["listenerArn"] = args ? args.listenerArn : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsLbListenerRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsLbListenerRule resources.
 */
export interface AwsLbListenerRuleState {
    actions?: pulumi.Input<pulumi.Input<inputs.AwsLbListenerRuleAction>[]>;
    /**
     * The ARN of the rule.
     */
    arn?: pulumi.Input<string>;
    /**
     * A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.AwsLbListenerRuleCondition>[]>;
    /**
     * The ARN of the listener to which to attach the rule.
     */
    listenerArn?: pulumi.Input<string>;
    /**
     * The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
     */
    priority?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.AwsLbListenerRuleTag>[]>;
    /**
     * The GUID of the tenant that the aws lb listener rule will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsLbListenerRule resource.
 */
export interface AwsLbListenerRuleArgs {
    actions: pulumi.Input<pulumi.Input<inputs.AwsLbListenerRuleAction>[]>;
    /**
     * A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match.
     */
    conditions: pulumi.Input<pulumi.Input<inputs.AwsLbListenerRuleCondition>[]>;
    /**
     * The ARN of the listener to which to attach the rule.
     */
    listenerArn: pulumi.Input<string>;
    /**
     * The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
     */
    priority?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.AwsLbListenerRuleTag>[]>;
    /**
     * The GUID of the tenant that the aws lb listener rule will be created in.
     */
    tenantId: pulumi.Input<string>;
}
