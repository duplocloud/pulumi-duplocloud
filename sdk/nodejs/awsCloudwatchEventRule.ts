// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsCloudwatchEventRule` manages an AWS cloudwatch event rule in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const duplo_app = new duplocloud.Tenant("duplo-app", {
 *     accountName: "duplo-app",
 *     planId: "default",
 * });
 * // With Schedule Expression
 * const cwErule = new duplocloud.AwsCloudwatchEventRule("cw_erule", {
 *     tenantId: duplo_app.tenantId,
 *     name: "cw_erule",
 *     description: "this is a test cloudwatch event rule.",
 *     scheduleExpression: "rate(10 minutes)",
 *     state: "DISABLED",
 *     tags: [
 *         {
 *             key: "CreatedBy",
 *             value: "Duplo",
 *         },
 *         {
 *             key: "CreatedFrom",
 *             value: "Duplo",
 *         },
 *     ],
 * });
 * // With Event Pattern
 * const cwErule2 = new duplocloud.AwsCloudwatchEventRule("cw_erule2", {
 *     tenantId: duplo_app.tenantId,
 *     name: "cw_erule2",
 *     description: "capture-aws-sign-in.",
 *     eventPattern: JSON.stringify({
 *         "detail-type": ["AWS Console Sign In via CloudTrail"],
 *     }),
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS Cloudwatch Event Rule
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *FRIENDLY_NAME* is the duploservices-<account_name>-<friendly_name>
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsCloudwatchEventRule:AwsCloudwatchEventRule myEventRule *TENANT_ID*&#47;*FRIENDLY_NAME*
 * ```
 */
export class AwsCloudwatchEventRule extends pulumi.CustomResource {
    /**
     * Get an existing AwsCloudwatchEventRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsCloudwatchEventRuleState, opts?: pulumi.CustomResourceOptions): AwsCloudwatchEventRule {
        return new AwsCloudwatchEventRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsCloudwatchEventRule:AwsCloudwatchEventRule';

    /**
     * Returns true if the given object is an instance of AwsCloudwatchEventRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsCloudwatchEventRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsCloudwatchEventRule.__pulumiType;
    }

    /**
     * The ARN of the event rule.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The description of the rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The event bus to associate with this rule. If you omit this, the default event bus is used.
     */
    public readonly eventBusName!: pulumi.Output<string>;
    /**
     * The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required.
     */
    public readonly eventPattern!: pulumi.Output<string | undefined>;
    /**
     * The full name of the event rule.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * The short name of the event rule.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required.
     */
    public readonly scheduleExpression!: pulumi.Output<string | undefined>;
    /**
     * Whether the rule should be enabled or disabled. Defaults to `ENABLED`.
     */
    public readonly state!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.AwsCloudwatchEventRuleTag[]>;
    /**
     * The GUID of the tenant that the cloudwatch event rule will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AwsCloudwatchEventRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsCloudwatchEventRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsCloudwatchEventRuleArgs | AwsCloudwatchEventRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsCloudwatchEventRuleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["eventBusName"] = state ? state.eventBusName : undefined;
            resourceInputs["eventPattern"] = state ? state.eventPattern : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["scheduleExpression"] = state ? state.scheduleExpression : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AwsCloudwatchEventRuleArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["eventBusName"] = args ? args.eventBusName : undefined;
            resourceInputs["eventPattern"] = args ? args.eventPattern : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["scheduleExpression"] = args ? args.scheduleExpression : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsCloudwatchEventRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsCloudwatchEventRule resources.
 */
export interface AwsCloudwatchEventRuleState {
    /**
     * The ARN of the event rule.
     */
    arn?: pulumi.Input<string>;
    /**
     * The description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The event bus to associate with this rule. If you omit this, the default event bus is used.
     */
    eventBusName?: pulumi.Input<string>;
    /**
     * The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required.
     */
    eventPattern?: pulumi.Input<string>;
    /**
     * The full name of the event rule.
     */
    fullname?: pulumi.Input<string>;
    /**
     * The short name of the event rule.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required.
     */
    scheduleExpression?: pulumi.Input<string>;
    /**
     * Whether the rule should be enabled or disabled. Defaults to `ENABLED`.
     */
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AwsCloudwatchEventRuleTag>[]>;
    /**
     * The GUID of the tenant that the cloudwatch event rule will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsCloudwatchEventRule resource.
 */
export interface AwsCloudwatchEventRuleArgs {
    /**
     * The description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The event bus to associate with this rule. If you omit this, the default event bus is used.
     */
    eventBusName?: pulumi.Input<string>;
    /**
     * The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required.
     */
    eventPattern?: pulumi.Input<string>;
    /**
     * The short name of the event rule.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required.
     */
    scheduleExpression?: pulumi.Input<string>;
    /**
     * Whether the rule should be enabled or disabled. Defaults to `ENABLED`.
     */
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AwsCloudwatchEventRuleTag>[]>;
    /**
     * The GUID of the tenant that the cloudwatch event rule will be created in.
     */
    tenantId: pulumi.Input<string>;
}
