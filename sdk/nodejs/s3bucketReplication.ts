// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Resource duplocloud.S3BucketReplication is dependent on duplocloud_s3_bucket. This resource sets replication rules for source bucket
 *
 * ## Import
 *
 * Example: Importing an existing S3 bucket replication
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SOURCEBUCKETNAME* is the full name of the S3 bucket
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/s3BucketReplication:S3BucketReplication mybucket *TENANT_ID*&#47;*SOURCEBUCKETNAME*
 * ```
 */
export class S3BucketReplication extends pulumi.CustomResource {
    /**
     * Get an existing S3BucketReplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: S3BucketReplicationState, opts?: pulumi.CustomResourceOptions): S3BucketReplication {
        return new S3BucketReplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/s3BucketReplication:S3BucketReplication';

    /**
     * Returns true if the given object is an instance of S3BucketReplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is S3BucketReplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === S3BucketReplication.__pulumiType;
    }

    /**
     * replication rules for source bucket
     */
    public readonly rules!: pulumi.Output<outputs.S3BucketReplicationRule[]>;
    /**
     * fullname of the source bucket.
     */
    public readonly sourceBucket!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the S3 bucket replication rule will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a S3BucketReplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: S3BucketReplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: S3BucketReplicationArgs | S3BucketReplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as S3BucketReplicationState | undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["sourceBucket"] = state ? state.sourceBucket : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as S3BucketReplicationArgs | undefined;
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            if ((!args || args.sourceBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceBucket'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["sourceBucket"] = args ? args.sourceBucket : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(S3BucketReplication.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering S3BucketReplication resources.
 */
export interface S3BucketReplicationState {
    /**
     * replication rules for source bucket
     */
    rules?: pulumi.Input<pulumi.Input<inputs.S3BucketReplicationRule>[]>;
    /**
     * fullname of the source bucket.
     */
    sourceBucket?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the S3 bucket replication rule will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a S3BucketReplication resource.
 */
export interface S3BucketReplicationArgs {
    /**
     * replication rules for source bucket
     */
    rules: pulumi.Input<pulumi.Input<inputs.S3BucketReplicationRule>[]>;
    /**
     * fullname of the source bucket.
     */
    sourceBucket: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the S3 bucket replication rule will be created in.
     */
    tenantId: pulumi.Input<string>;
}
