// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsRdsTag` manages an AWS RDS tag in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 * import * as random from "@pulumi/random";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * // Generate a random password.
 * const mypassword = new random.index.Password("mypassword", {
 *     length: 16,
 *     special: false,
 * });
 * // Create an RDS instance.
 * const mydb = new duplocloud.RdsInstance("mydb", {
 *     tenantId: myapp.tenantId,
 *     name: "mydb",
 *     engine: 1,
 *     engineVersion: "12.5",
 *     size: "db.t3.medium",
 *     masterUsername: "myuser",
 *     masterPassword: mypassword.result,
 *     encryptStorage: true,
 * });
 * // Create RDS Tag for type "instance".
 * const tag = new duplocloud.AwsRdsTag("tag", {
 *     tenantId: myapp.tenantId,
 *     resourceType: "instance",
 *     resourceId: mydb.identifier,
 *     key: "CreatedBy",
 *     value: "DuploCloud",
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing RDS Tag.
 *
 *  - *TENANT_ID* is the tenant GUID.
 *
 *  - *RESOURCE_TYPE* The type of the RDS resource, Valid vaues are - "cluster" and "instance".
 *
 *  - *RESOURCE_ID* The RDS identifier.
 *
 *  - *TAG_KEY* The tag name.
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsRdsTag:AwsRdsTag tag1 *TENANT_ID*&#47;*RESOURCE_TYPE*&#47;*RESOURCE_ID*&#47;*TAG_KEY*
 * ```
 */
export class AwsRdsTag extends pulumi.CustomResource {
    /**
     * Get an existing AwsRdsTag resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsRdsTagState, opts?: pulumi.CustomResourceOptions): AwsRdsTag {
        return new AwsRdsTag(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsRdsTag:AwsRdsTag';

    /**
     * Returns true if the given object is an instance of AwsRdsTag.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsRdsTag {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsRdsTag.__pulumiType;
    }

    /**
     * The tag name.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * The ID of the RDS resource to manage the tag for.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * The type of the RDS resource to manage the tag for. Valid values are `cluster` and `instance`.
     */
    public readonly resourceType!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the RDS tag will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * The value of the tag.
     */
    public readonly value!: pulumi.Output<string>;

    /**
     * Create a AwsRdsTag resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsRdsTagArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsRdsTagArgs | AwsRdsTagState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsRdsTagState | undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as AwsRdsTagArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsRdsTag.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsRdsTag resources.
 */
export interface AwsRdsTagState {
    /**
     * The tag name.
     */
    key?: pulumi.Input<string>;
    /**
     * The ID of the RDS resource to manage the tag for.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The type of the RDS resource to manage the tag for. Valid values are `cluster` and `instance`.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the RDS tag will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The value of the tag.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsRdsTag resource.
 */
export interface AwsRdsTagArgs {
    /**
     * The tag name.
     */
    key: pulumi.Input<string>;
    /**
     * The ID of the RDS resource to manage the tag for.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The type of the RDS resource to manage the tag for. Valid values are `cluster` and `instance`.
     */
    resourceType: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the RDS tag will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * The value of the tag.
     */
    value: pulumi.Input<string>;
}
