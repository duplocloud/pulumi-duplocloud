// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getK8Secret(args: GetK8SecretArgs, opts?: pulumi.InvokeOptions): Promise<GetK8SecretResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("duplocloud:index/getK8Secret:getK8Secret", {
        "secretName": args.secretName,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getK8Secret.
 */
export interface GetK8SecretArgs {
    /**
     * The name of the secret.
     */
    secretName: string;
    /**
     * The GUID of the tenant that the secret will be created in.
     */
    tenantId: string;
}

/**
 * A collection of values returned by getK8Secret.
 */
export interface GetK8SecretResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Annotations for the secret
     */
    readonly secretAnnotations: {[key: string]: string};
    /**
     * A JSON encoded string representing the secret metadata. You can use the `jsonencode()` function to convert map or object data, if needed. You can use the `jsondecode()` function to read data.
     */
    readonly secretData: string;
    /**
     * Map of string keys and values that can be used to organize and categorize (scope and select) the secret
     */
    readonly secretLabels: {[key: string]: string};
    /**
     * The name of the secret.
     */
    readonly secretName: string;
    /**
     * The type of the secret.  Usually `"Opaque"`.
     */
    readonly secretType: string;
    readonly secretVersion: string;
    /**
     * The GUID of the tenant that the secret will be created in.
     */
    readonly tenantId: string;
}
export function getK8SecretOutput(args: GetK8SecretOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetK8SecretResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("duplocloud:index/getK8Secret:getK8Secret", {
        "secretName": args.secretName,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getK8Secret.
 */
export interface GetK8SecretOutputArgs {
    /**
     * The name of the secret.
     */
    secretName: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the secret will be created in.
     */
    tenantId: pulumi.Input<string>;
}
