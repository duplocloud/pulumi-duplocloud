// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsLambdaFunction` manages an AWS lambda function in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const myfunction = new duplocloud.AwsLambdaFunction("myfunction", {
 *     tenantId: _this.tenantId,
 *     name: "myfunction",
 *     description: "A description of my function",
 *     runtime: "java11",
 *     handler: "com.example.MyFunction::handleRequest",
 *     s3Bucket: "my-bucket-name",
 *     s3Key: "my-function.zip",
 *     environment: {
 *         variables: {
 *             foo: "bar",
 *         },
 *     },
 *     timeout: 60,
 *     memorySize: 512,
 * });
 * const thisfunction = new duplocloud.AwsLambdaFunction("thisfunction", {
 *     tenantId: _this.tenantId,
 *     name: "thisfunction",
 *     description: "A description of my function",
 *     packageType: "Image",
 *     imageUri: "dkr.ecr.us-west-2.amazonaws.com/myimage:latest",
 *     imageConfig: {
 *         commands: [
 *             "echo",
 *             "hello world",
 *         ],
 *         entryPoints: ["echo hello workd"],
 *         workingDirectory: "/tmp3",
 *     },
 *     tracingConfig: {
 *         mode: "PassThrough",
 *     },
 *     timeout: 60,
 *     memorySize: 512,
 * });
 * const edgefunction = new duplocloud.AwsLambdaFunction("edgefunction", {
 *     tenantId: "c7163b39-43ca-4d44-81ce-9a323087039b",
 *     name: "edgefunction",
 *     description: "An example edge function",
 *     packageType: "Image",
 *     imageUri: "dkr.ecr.us-east-1.amazonaws.com/myimage:1.0",
 *     imageConfig: {
 *         commands: [
 *             "echo",
 *             "hello world",
 *         ],
 *         entryPoints: ["echo hello workd"],
 *         workingDirectory: "/tmp3",
 *     },
 *     tags: {
 *         IsEdgeDeploy: "true",
 *     },
 *     timeout: 5,
 *     memorySize: 128,
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS lambda function
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORT_NAME* is the short name of the AWS lambda function
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsLambdaFunction:AwsLambdaFunction myfunction *TENANT_ID*&#47;*SHORT_NAME*
 * ```
 */
export class AwsLambdaFunction extends pulumi.CustomResource {
    /**
     * Get an existing AwsLambdaFunction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsLambdaFunctionState, opts?: pulumi.CustomResourceOptions): AwsLambdaFunction {
        return new AwsLambdaFunction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsLambdaFunction:AwsLambdaFunction';

    /**
     * Returns true if the given object is an instance of AwsLambdaFunction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsLambdaFunction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsLambdaFunction.__pulumiType;
    }

    /**
     * Instruction set architecture for your Lambda function. Valid values are `[x8664]` and `[arm64]`. Default is `[x8664]`
     */
    public readonly architectures!: pulumi.Output<string | undefined>;
    /**
     * The ARN of the lambda function.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     */
    public readonly deadLetterConfigs!: pulumi.Output<outputs.AwsLambdaFunctionDeadLetterConfig[] | undefined>;
    /**
     * A description of the lambda function.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Allow customization of the lambda execution environment.
     */
    public readonly environment!: pulumi.Output<outputs.AwsLambdaFunctionEnvironment | undefined>;
    /**
     * The Ephemeral Storage size, in MB, that your lambda function is allowed to use at runtime. Defaults to `512`.
     */
    public readonly ephemeralStorage!: pulumi.Output<number | undefined>;
    /**
     * The full name of the lambda function.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * The [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) of the lambda function in your code.
     */
    public readonly handler!: pulumi.Output<string>;
    /**
     * Configuration for the Lambda function's container image
     */
    public readonly imageConfig!: pulumi.Output<outputs.AwsLambdaFunctionImageConfig | undefined>;
    /**
     * The docker image that holds the lambda function's code. Used (and required) only when `packageType` is `"Image"`. The image must be in a private ECR.
     */
    public readonly imageUri!: pulumi.Output<string | undefined>;
    /**
     * A timestamp string of lambda's last modification time.
     */
    public /*out*/ readonly lastModified!: pulumi.Output<string>;
    /**
     * List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function.
     */
    public readonly layers!: pulumi.Output<string[] | undefined>;
    /**
     * The maximum amount of memory, in MB, that your lambda function is allowed to use at runtime. Defaults to `128`.
     */
    public readonly memorySize!: pulumi.Output<number | undefined>;
    /**
     * The short name of the lambda function cluster.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The type of lambda package.  Must be `Zip` or `Image`.  Defaults to `Zip`.
     */
    public readonly packageType!: pulumi.Output<string>;
    /**
     * The IAM role for the lambda function's execution.
     */
    public /*out*/ readonly role!: pulumi.Output<string>;
    /**
     * The [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) that the lambda function needs.
     */
    public readonly runtime!: pulumi.Output<string>;
    /**
     * The S3 bucket where the lambda function package is located. Used (and required) only when `packageType` is `"Zip"`.
     */
    public readonly s3Bucket!: pulumi.Output<string | undefined>;
    /**
     * The S3 key in the S3 bucket where the lambda function package is located. Used (and required) only when `packageType` is `"Zip"`.
     */
    public readonly s3Key!: pulumi.Output<string | undefined>;
    /**
     * The SHA 256 hash of the lambda functions's source code package.
     */
    public /*out*/ readonly sourceCodeHash!: pulumi.Output<string>;
    /**
     * The size in bytes of the lambda functions's source code package.
     */
    public /*out*/ readonly sourceCodeSize!: pulumi.Output<number>;
    /**
     * Map of tags to assign to the object.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The GUID of the tenant that the lambda function will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * The execution time limit for the lambda function. Defaults to `3`.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    public readonly tracingConfig!: pulumi.Output<outputs.AwsLambdaFunctionTracingConfig>;
    /**
     * The version of the lambda function.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a AwsLambdaFunction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsLambdaFunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsLambdaFunctionArgs | AwsLambdaFunctionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsLambdaFunctionState | undefined;
            resourceInputs["architectures"] = state ? state.architectures : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["deadLetterConfigs"] = state ? state.deadLetterConfigs : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["ephemeralStorage"] = state ? state.ephemeralStorage : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["handler"] = state ? state.handler : undefined;
            resourceInputs["imageConfig"] = state ? state.imageConfig : undefined;
            resourceInputs["imageUri"] = state ? state.imageUri : undefined;
            resourceInputs["lastModified"] = state ? state.lastModified : undefined;
            resourceInputs["layers"] = state ? state.layers : undefined;
            resourceInputs["memorySize"] = state ? state.memorySize : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packageType"] = state ? state.packageType : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["runtime"] = state ? state.runtime : undefined;
            resourceInputs["s3Bucket"] = state ? state.s3Bucket : undefined;
            resourceInputs["s3Key"] = state ? state.s3Key : undefined;
            resourceInputs["sourceCodeHash"] = state ? state.sourceCodeHash : undefined;
            resourceInputs["sourceCodeSize"] = state ? state.sourceCodeSize : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["tracingConfig"] = state ? state.tracingConfig : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as AwsLambdaFunctionArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["architectures"] = args ? args.architectures : undefined;
            resourceInputs["deadLetterConfigs"] = args ? args.deadLetterConfigs : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["ephemeralStorage"] = args ? args.ephemeralStorage : undefined;
            resourceInputs["handler"] = args ? args.handler : undefined;
            resourceInputs["imageConfig"] = args ? args.imageConfig : undefined;
            resourceInputs["imageUri"] = args ? args.imageUri : undefined;
            resourceInputs["layers"] = args ? args.layers : undefined;
            resourceInputs["memorySize"] = args ? args.memorySize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packageType"] = args ? args.packageType : undefined;
            resourceInputs["runtime"] = args ? args.runtime : undefined;
            resourceInputs["s3Bucket"] = args ? args.s3Bucket : undefined;
            resourceInputs["s3Key"] = args ? args.s3Key : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["tracingConfig"] = args ? args.tracingConfig : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["lastModified"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["sourceCodeHash"] = undefined /*out*/;
            resourceInputs["sourceCodeSize"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsLambdaFunction.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsLambdaFunction resources.
 */
export interface AwsLambdaFunctionState {
    /**
     * Instruction set architecture for your Lambda function. Valid values are `[x8664]` and `[arm64]`. Default is `[x8664]`
     */
    architectures?: pulumi.Input<string>;
    /**
     * The ARN of the lambda function.
     */
    arn?: pulumi.Input<string>;
    /**
     * Dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     */
    deadLetterConfigs?: pulumi.Input<pulumi.Input<inputs.AwsLambdaFunctionDeadLetterConfig>[]>;
    /**
     * A description of the lambda function.
     */
    description?: pulumi.Input<string>;
    /**
     * Allow customization of the lambda execution environment.
     */
    environment?: pulumi.Input<inputs.AwsLambdaFunctionEnvironment>;
    /**
     * The Ephemeral Storage size, in MB, that your lambda function is allowed to use at runtime. Defaults to `512`.
     */
    ephemeralStorage?: pulumi.Input<number>;
    /**
     * The full name of the lambda function.
     */
    fullname?: pulumi.Input<string>;
    /**
     * The [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) of the lambda function in your code.
     */
    handler?: pulumi.Input<string>;
    /**
     * Configuration for the Lambda function's container image
     */
    imageConfig?: pulumi.Input<inputs.AwsLambdaFunctionImageConfig>;
    /**
     * The docker image that holds the lambda function's code. Used (and required) only when `packageType` is `"Image"`. The image must be in a private ECR.
     */
    imageUri?: pulumi.Input<string>;
    /**
     * A timestamp string of lambda's last modification time.
     */
    lastModified?: pulumi.Input<string>;
    /**
     * List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function.
     */
    layers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum amount of memory, in MB, that your lambda function is allowed to use at runtime. Defaults to `128`.
     */
    memorySize?: pulumi.Input<number>;
    /**
     * The short name of the lambda function cluster.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of lambda package.  Must be `Zip` or `Image`.  Defaults to `Zip`.
     */
    packageType?: pulumi.Input<string>;
    /**
     * The IAM role for the lambda function's execution.
     */
    role?: pulumi.Input<string>;
    /**
     * The [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) that the lambda function needs.
     */
    runtime?: pulumi.Input<string>;
    /**
     * The S3 bucket where the lambda function package is located. Used (and required) only when `packageType` is `"Zip"`.
     */
    s3Bucket?: pulumi.Input<string>;
    /**
     * The S3 key in the S3 bucket where the lambda function package is located. Used (and required) only when `packageType` is `"Zip"`.
     */
    s3Key?: pulumi.Input<string>;
    /**
     * The SHA 256 hash of the lambda functions's source code package.
     */
    sourceCodeHash?: pulumi.Input<string>;
    /**
     * The size in bytes of the lambda functions's source code package.
     */
    sourceCodeSize?: pulumi.Input<number>;
    /**
     * Map of tags to assign to the object.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the lambda function will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The execution time limit for the lambda function. Defaults to `3`.
     */
    timeout?: pulumi.Input<number>;
    tracingConfig?: pulumi.Input<inputs.AwsLambdaFunctionTracingConfig>;
    /**
     * The version of the lambda function.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsLambdaFunction resource.
 */
export interface AwsLambdaFunctionArgs {
    /**
     * Instruction set architecture for your Lambda function. Valid values are `[x8664]` and `[arm64]`. Default is `[x8664]`
     */
    architectures?: pulumi.Input<string>;
    /**
     * Dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     */
    deadLetterConfigs?: pulumi.Input<pulumi.Input<inputs.AwsLambdaFunctionDeadLetterConfig>[]>;
    /**
     * A description of the lambda function.
     */
    description?: pulumi.Input<string>;
    /**
     * Allow customization of the lambda execution environment.
     */
    environment?: pulumi.Input<inputs.AwsLambdaFunctionEnvironment>;
    /**
     * The Ephemeral Storage size, in MB, that your lambda function is allowed to use at runtime. Defaults to `512`.
     */
    ephemeralStorage?: pulumi.Input<number>;
    /**
     * The [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) of the lambda function in your code.
     */
    handler?: pulumi.Input<string>;
    /**
     * Configuration for the Lambda function's container image
     */
    imageConfig?: pulumi.Input<inputs.AwsLambdaFunctionImageConfig>;
    /**
     * The docker image that holds the lambda function's code. Used (and required) only when `packageType` is `"Image"`. The image must be in a private ECR.
     */
    imageUri?: pulumi.Input<string>;
    /**
     * List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function.
     */
    layers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum amount of memory, in MB, that your lambda function is allowed to use at runtime. Defaults to `128`.
     */
    memorySize?: pulumi.Input<number>;
    /**
     * The short name of the lambda function cluster.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of lambda package.  Must be `Zip` or `Image`.  Defaults to `Zip`.
     */
    packageType?: pulumi.Input<string>;
    /**
     * The [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) that the lambda function needs.
     */
    runtime?: pulumi.Input<string>;
    /**
     * The S3 bucket where the lambda function package is located. Used (and required) only when `packageType` is `"Zip"`.
     */
    s3Bucket?: pulumi.Input<string>;
    /**
     * The S3 key in the S3 bucket where the lambda function package is located. Used (and required) only when `packageType` is `"Zip"`.
     */
    s3Key?: pulumi.Input<string>;
    /**
     * Map of tags to assign to the object.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the lambda function will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * The execution time limit for the lambda function. Defaults to `3`.
     */
    timeout?: pulumi.Input<number>;
    tracingConfig?: pulumi.Input<inputs.AwsLambdaFunctionTracingConfig>;
}
