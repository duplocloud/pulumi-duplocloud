// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.GcpTenantSecurityRule` applies gcp security rule to  target tenantId
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const trule = new duplocloud.GcpTenantSecurityRule("trule", {
 *     tenantId: myapp.tenantId,
 *     name: "tenant-rule",
 *     description: "security rule for target tenant",
 *     portsAndProtocols: [
 *         {
 *             ports: [
 *                 "24",
 *                 "23-89",
 *             ],
 *             serviceProtocol: "tcp",
 *         },
 *         {
 *             ports: ["100"],
 *             serviceProtocol: "udp",
 *         },
 *     ],
 *     sourceRanges: ["0.0.0.0/32"],
 *     ruleType: "ALLOW",
 *     targetTenantId: "<target-tenant-id>",
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing GCP storage bucket
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *RULE_NAME* is the  name of the security rule
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/gcpTenantSecurityRule:GcpTenantSecurityRule trule *TENANT_ID*&#47;security-rule/*RULE_NAME*
 * ```
 */
export class GcpTenantSecurityRule extends pulumi.CustomResource {
    /**
     * Get an existing GcpTenantSecurityRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpTenantSecurityRuleState, opts?: pulumi.CustomResourceOptions): GcpTenantSecurityRule {
        return new GcpTenantSecurityRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/gcpTenantSecurityRule:GcpTenantSecurityRule';

    /**
     * Returns true if the given object is an instance of GcpTenantSecurityRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpTenantSecurityRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpTenantSecurityRule.__pulumiType;
    }

    /**
     * The description related to the rule
     */
    public readonly description!: pulumi.Output<string>;
    public /*out*/ readonly direction!: pulumi.Output<string>;
    /**
     * Duplocloud prefixed rule name
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    public /*out*/ readonly kind!: pulumi.Output<string>;
    /**
     * Specify rule name
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly network!: pulumi.Output<string>;
    public readonly portsAndProtocols!: pulumi.Output<outputs.GcpTenantSecurityRulePortsAndProtocol[]>;
    public /*out*/ readonly priority!: pulumi.Output<number>;
    /**
     * Specify type of access rule (ALLOW , DENY)
     */
    public readonly ruleType!: pulumi.Output<string>;
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The lists of IPv4 or IPv6 addresses in CIDR format that specify the source of traffic for a firewall rule
     */
    public readonly sourceRanges!: pulumi.Output<string[]>;
    public /*out*/ readonly sourceServiceAccounts!: pulumi.Output<string[]>;
    public /*out*/ readonly sourceTags!: pulumi.Output<string[]>;
    public /*out*/ readonly targetServiceAccounts!: pulumi.Output<string[]>;
    /**
     * The GUID of the tenant to which security rule need to be applied
     */
    public readonly targetTenantId!: pulumi.Output<string>;
    /**
     * The GUID of the tenant.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a GcpTenantSecurityRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpTenantSecurityRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpTenantSecurityRuleArgs | GcpTenantSecurityRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpTenantSecurityRuleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["portsAndProtocols"] = state ? state.portsAndProtocols : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["ruleType"] = state ? state.ruleType : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["sourceRanges"] = state ? state.sourceRanges : undefined;
            resourceInputs["sourceServiceAccounts"] = state ? state.sourceServiceAccounts : undefined;
            resourceInputs["sourceTags"] = state ? state.sourceTags : undefined;
            resourceInputs["targetServiceAccounts"] = state ? state.targetServiceAccounts : undefined;
            resourceInputs["targetTenantId"] = state ? state.targetTenantId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as GcpTenantSecurityRuleArgs | undefined;
            if ((!args || args.portsAndProtocols === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portsAndProtocols'");
            }
            if ((!args || args.ruleType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleType'");
            }
            if ((!args || args.sourceRanges === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceRanges'");
            }
            if ((!args || args.targetTenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetTenantId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["portsAndProtocols"] = args ? args.portsAndProtocols : undefined;
            resourceInputs["ruleType"] = args ? args.ruleType : undefined;
            resourceInputs["sourceRanges"] = args ? args.sourceRanges : undefined;
            resourceInputs["targetTenantId"] = args ? args.targetTenantId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["direction"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["network"] = undefined /*out*/;
            resourceInputs["priority"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["sourceServiceAccounts"] = undefined /*out*/;
            resourceInputs["sourceTags"] = undefined /*out*/;
            resourceInputs["targetServiceAccounts"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpTenantSecurityRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GcpTenantSecurityRule resources.
 */
export interface GcpTenantSecurityRuleState {
    /**
     * The description related to the rule
     */
    description?: pulumi.Input<string>;
    direction?: pulumi.Input<string>;
    /**
     * Duplocloud prefixed rule name
     */
    fullname?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    /**
     * Specify rule name
     */
    name?: pulumi.Input<string>;
    network?: pulumi.Input<string>;
    portsAndProtocols?: pulumi.Input<pulumi.Input<inputs.GcpTenantSecurityRulePortsAndProtocol>[]>;
    priority?: pulumi.Input<number>;
    /**
     * Specify type of access rule (ALLOW , DENY)
     */
    ruleType?: pulumi.Input<string>;
    selfLink?: pulumi.Input<string>;
    /**
     * The lists of IPv4 or IPv6 addresses in CIDR format that specify the source of traffic for a firewall rule
     */
    sourceRanges?: pulumi.Input<pulumi.Input<string>[]>;
    sourceServiceAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    sourceTags?: pulumi.Input<pulumi.Input<string>[]>;
    targetServiceAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The GUID of the tenant to which security rule need to be applied
     */
    targetTenantId?: pulumi.Input<string>;
    /**
     * The GUID of the tenant.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GcpTenantSecurityRule resource.
 */
export interface GcpTenantSecurityRuleArgs {
    /**
     * The description related to the rule
     */
    description?: pulumi.Input<string>;
    /**
     * Specify rule name
     */
    name?: pulumi.Input<string>;
    portsAndProtocols: pulumi.Input<pulumi.Input<inputs.GcpTenantSecurityRulePortsAndProtocol>[]>;
    /**
     * Specify type of access rule (ALLOW , DENY)
     */
    ruleType: pulumi.Input<string>;
    /**
     * The lists of IPv4 or IPv6 addresses in CIDR format that specify the source of traffic for a firewall rule
     */
    sourceRanges: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The GUID of the tenant to which security rule need to be applied
     */
    targetTenantId: pulumi.Input<string>;
    /**
     * The GUID of the tenant.
     */
    tenantId: pulumi.Input<string>;
}
