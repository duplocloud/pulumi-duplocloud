// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AzureStorageclassBlob` manages an Azure storage class blob in Duplo.
 */
export class AzureStorageclassBlob extends pulumi.CustomResource {
    /**
     * Get an existing AzureStorageclassBlob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureStorageclassBlobState, opts?: pulumi.CustomResourceOptions): AzureStorageclassBlob {
        return new AzureStorageclassBlob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/azureStorageclassBlob:AzureStorageclassBlob';

    /**
     * Returns true if the given object is an instance of AzureStorageclassBlob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureStorageclassBlob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureStorageclassBlob.__pulumiType;
    }

    /**
     * The name of the Blob. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the storage class in which to create the blob. Changing this forces a new resource to be created.
     */
    public readonly storageAccountName!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the azure storage class blob will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * The URL of the Blob.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a AzureStorageclassBlob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureStorageclassBlobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureStorageclassBlobArgs | AzureStorageclassBlobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureStorageclassBlobState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["storageAccountName"] = state ? state.storageAccountName : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as AzureStorageclassBlobArgs | undefined;
            if ((!args || args.storageAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageAccountName'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["storageAccountName"] = args ? args.storageAccountName : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureStorageclassBlob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureStorageclassBlob resources.
 */
export interface AzureStorageclassBlobState {
    /**
     * The name of the Blob. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the storage class in which to create the blob. Changing this forces a new resource to be created.
     */
    storageAccountName?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the azure storage class blob will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The URL of the Blob.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureStorageclassBlob resource.
 */
export interface AzureStorageclassBlobArgs {
    /**
     * The name of the Blob. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the storage class in which to create the blob. Changing this forces a new resource to be created.
     */
    storageAccountName: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the azure storage class blob will be created in.
     */
    tenantId: pulumi.Input<string>;
}
