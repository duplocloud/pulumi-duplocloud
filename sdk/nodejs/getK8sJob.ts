// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const job = duplocloud.getK8sJob({
 *     tenantId: tenantId,
 *     metadata: {
 *         name: "datajob",
 *     },
 * });
 * export const metadata = job.then(job => job.metadata?.namespace);
 * ```
 */
export function getK8sJob(args: GetK8sJobArgs, opts?: pulumi.InvokeOptions): Promise<GetK8sJobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("duplocloud:index/getK8sJob:getK8sJob", {
        "isAnyHostAllowed": args.isAnyHostAllowed,
        "metadata": args.metadata,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getK8sJob.
 */
export interface GetK8sJobArgs {
    /**
     * Defaults to `false`.
     */
    isAnyHostAllowed?: boolean;
    /**
     * Standard job's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    metadata: inputs.GetK8sJobMetadata;
    /**
     * The GUID of the tenant that the job will be created in.
     */
    tenantId: string;
}

/**
 * A collection of values returned by getK8sJob.
 */
export interface GetK8sJobResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Defaults to `false`.
     */
    readonly isAnyHostAllowed?: boolean;
    /**
     * Standard job's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    readonly metadata: outputs.GetK8sJobMetadata;
    /**
     * Spec of the job owned by the cluster
     */
    readonly specs: outputs.GetK8sJobSpec[];
    /**
     * The GUID of the tenant that the job will be created in.
     */
    readonly tenantId: string;
    readonly waitForCompletion: boolean;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const job = duplocloud.getK8sJob({
 *     tenantId: tenantId,
 *     metadata: {
 *         name: "datajob",
 *     },
 * });
 * export const metadata = job.then(job => job.metadata?.namespace);
 * ```
 */
export function getK8sJobOutput(args: GetK8sJobOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetK8sJobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("duplocloud:index/getK8sJob:getK8sJob", {
        "isAnyHostAllowed": args.isAnyHostAllowed,
        "metadata": args.metadata,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getK8sJob.
 */
export interface GetK8sJobOutputArgs {
    /**
     * Defaults to `false`.
     */
    isAnyHostAllowed?: pulumi.Input<boolean>;
    /**
     * Standard job's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    metadata: pulumi.Input<inputs.GetK8sJobMetadataArgs>;
    /**
     * The GUID of the tenant that the job will be created in.
     */
    tenantId: pulumi.Input<string>;
}
