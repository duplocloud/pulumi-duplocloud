// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * // For AWS
 * const aws_subnet = new duplocloud.InfrastructureSubnet("aws-subnet", {
 *     name: "mySubnet",
 *     infraName: "myinfra",
 *     cidrBlock: "10.34.1.0/24",
 *     type: "private",
 *     zone: "A",
 * });
 * // For Azure
 * const az_subnet = new duplocloud.InfrastructureSubnet("az-subnet", {
 *     name: "mySubnet",
 *     infraName: "myinfra",
 *     cidrBlock: "10.34.1.0/24",
 *     type: "appgwsubnet",
 *     serviceEndpoints: ["Microsoft.Storage"],
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing infrastructure subnet
 *
 *  - *INFRA_NAME* is the infrastructure name
 *
 *  - *NAME* is the infrastructure subnet name
 *
 *  - *ADDRESS_PREFIX* is the infrastructure subnet address prefix
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/infrastructureSubnet:InfrastructureSubnet subnet *INFRA_NAME*&#47;*NAME*&#47;*ADDRESS_PREFIX*
 * ```
 */
export class InfrastructureSubnet extends pulumi.CustomResource {
    /**
     * Get an existing InfrastructureSubnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InfrastructureSubnetState, opts?: pulumi.CustomResourceOptions): InfrastructureSubnet {
        return new InfrastructureSubnet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/infrastructureSubnet:InfrastructureSubnet';

    /**
     * Returns true if the given object is an instance of InfrastructureSubnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InfrastructureSubnet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InfrastructureSubnet.__pulumiType;
    }

    public readonly cidrBlock!: pulumi.Output<string>;
    public readonly infraName!: pulumi.Output<string>;
    /**
     * Determines whether the isolated network is enabled. This is applicable only for Azure subnets. Defaults to `false`.
     */
    public readonly isolatedNetwork!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * The list of Service endpoints to associate with the azure subnet. Possible values include: `Microsoft.AzureActiveDirectory`, `Microsoft.AzureCosmosDB`, `Microsoft.ContainerRegistry`, `Microsoft.EventHub`, `Microsoft.KeyVault`, `Microsoft.ServiceBus`,`Microsoft.Sql`, `Microsoft.Storage` and `Microsoft.Web`. This is applicable only for Azure subnets.
     */
    public readonly serviceEndpoints!: pulumi.Output<string[]>;
    public /*out*/ readonly subnetId!: pulumi.Output<string>;
    public /*out*/ readonly subnetName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    /**
     * Specify subnet type. `private` and `public` is used for AWS subnet. Will be one of `none`, `appgwsubnet`, `appgw-internal-subnet`, `azurebastionsubnet`, `managedinstance`, `databrick-workspace`, `mysql-flexiserver`, `postgres-flexiserver` is used for azure.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The Duplo zone that the subnet resides in.  Will be one of:  `"A"`, `"B"`, `"C"`, or `"D"`. This is applicable only for AWS subnets.
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a InfrastructureSubnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InfrastructureSubnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InfrastructureSubnetArgs | InfrastructureSubnetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InfrastructureSubnetState | undefined;
            resourceInputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            resourceInputs["infraName"] = state ? state.infraName : undefined;
            resourceInputs["isolatedNetwork"] = state ? state.isolatedNetwork : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serviceEndpoints"] = state ? state.serviceEndpoints : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["subnetName"] = state ? state.subnetName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as InfrastructureSubnetArgs | undefined;
            if ((!args || args.cidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidrBlock'");
            }
            if ((!args || args.infraName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'infraName'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["infraName"] = args ? args.infraName : undefined;
            resourceInputs["isolatedNetwork"] = args ? args.isolatedNetwork : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serviceEndpoints"] = args ? args.serviceEndpoints : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["subnetId"] = undefined /*out*/;
            resourceInputs["subnetName"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InfrastructureSubnet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InfrastructureSubnet resources.
 */
export interface InfrastructureSubnetState {
    cidrBlock?: pulumi.Input<string>;
    infraName?: pulumi.Input<string>;
    /**
     * Determines whether the isolated network is enabled. This is applicable only for Azure subnets. Defaults to `false`.
     */
    isolatedNetwork?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    /**
     * The list of Service endpoints to associate with the azure subnet. Possible values include: `Microsoft.AzureActiveDirectory`, `Microsoft.AzureCosmosDB`, `Microsoft.ContainerRegistry`, `Microsoft.EventHub`, `Microsoft.KeyVault`, `Microsoft.ServiceBus`,`Microsoft.Sql`, `Microsoft.Storage` and `Microsoft.Web`. This is applicable only for Azure subnets.
     */
    serviceEndpoints?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    subnetName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify subnet type. `private` and `public` is used for AWS subnet. Will be one of `none`, `appgwsubnet`, `appgw-internal-subnet`, `azurebastionsubnet`, `managedinstance`, `databrick-workspace`, `mysql-flexiserver`, `postgres-flexiserver` is used for azure.
     */
    type?: pulumi.Input<string>;
    /**
     * The Duplo zone that the subnet resides in.  Will be one of:  `"A"`, `"B"`, `"C"`, or `"D"`. This is applicable only for AWS subnets.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InfrastructureSubnet resource.
 */
export interface InfrastructureSubnetArgs {
    cidrBlock: pulumi.Input<string>;
    infraName: pulumi.Input<string>;
    /**
     * Determines whether the isolated network is enabled. This is applicable only for Azure subnets. Defaults to `false`.
     */
    isolatedNetwork?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    /**
     * The list of Service endpoints to associate with the azure subnet. Possible values include: `Microsoft.AzureActiveDirectory`, `Microsoft.AzureCosmosDB`, `Microsoft.ContainerRegistry`, `Microsoft.EventHub`, `Microsoft.KeyVault`, `Microsoft.ServiceBus`,`Microsoft.Sql`, `Microsoft.Storage` and `Microsoft.Web`. This is applicable only for Azure subnets.
     */
    serviceEndpoints?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify subnet type. `private` and `public` is used for AWS subnet. Will be one of `none`, `appgwsubnet`, `appgw-internal-subnet`, `azurebastionsubnet`, `managedinstance`, `databrick-workspace`, `mysql-flexiserver`, `postgres-flexiserver` is used for azure.
     */
    type: pulumi.Input<string>;
    /**
     * The Duplo zone that the subnet resides in.  Will be one of:  `"A"`, `"B"`, `"C"`, or `"D"`. This is applicable only for AWS subnets.
     */
    zone?: pulumi.Input<string>;
}
