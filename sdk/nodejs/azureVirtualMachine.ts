// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AzureVirtualMachine` manages an Azure virtual machine in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const azVm = new duplocloud.AzureVirtualMachine("az_vm", {
 *     tenantId: myapp.tenantId,
 *     friendlyName: "test-vm",
 *     imageId: "16.04-LTS;Canonical;UbuntuServer",
 *     capacity: "Standard_D2s_v3",
 *     agentPlatform: 0,
 *     adminUsername: "azureuser",
 *     adminPassword: "Root!12345",
 *     diskSizeGb: 50,
 *     subnetId: "duploinfra-default",
 *     minionTags: [{
 *         key: "AllocationTags",
 *         value: "test-host",
 *     }],
 *     tags: [
 *         {
 *             key: "CreatedBy",
 *             value: "duplo",
 *         },
 *         {
 *             key: "Owner",
 *             value: "duplo",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing Azure Virtual Machine
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORT_NAME* is the short name of the Azure Virtual Machine
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/azureVirtualMachine:AzureVirtualMachine myvm *TENANT_ID*&#47;*SHORT_NAME*
 * ```
 */
export class AzureVirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing AzureVirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureVirtualMachineState, opts?: pulumi.CustomResourceOptions): AzureVirtualMachine {
        return new AzureVirtualMachine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/azureVirtualMachine:AzureVirtualMachine';

    /**
     * Returns true if the given object is an instance of AzureVirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureVirtualMachine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureVirtualMachine.__pulumiType;
    }

    /**
     * Specify domain service provided by Microsoft Azure for managing identities and access in the cloud. Valid values are `aadjoin` or `addsjoin`.
     */
    public readonly adDomainType!: pulumi.Output<string>;
    /**
     * The password associated with the local administrator account.
     */
    public readonly adminPassword!: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the local administrator account.
     */
    public readonly adminUsername!: pulumi.Output<string>;
    /**
     * The numeric ID of the container agent pool that this host is added to. Defaults to `0`.
     */
    public readonly agentPlatform!: pulumi.Output<number | undefined>;
    /**
     * Whether or not to allocate a public IP. Defaults to `false`.
     */
    public readonly allocatedPublicIp!: pulumi.Output<boolean | undefined>;
    /**
     * Specify availability set id to which virtual machine should be added to
     */
    public readonly availabilitySetId!: pulumi.Output<string>;
    /**
     * Base64 encoded user data to associated with the host.
     */
    public readonly base64UserData!: pulumi.Output<string>;
    /**
     * Specifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
     */
    public readonly capacity!: pulumi.Output<string>;
    /**
     * disk control types refer to the different levels of management and performance control provided for disks attached to virtual machines (VMs)
     */
    public readonly diskControlType!: pulumi.Output<string>;
    /**
     * Specifies the size of the OS Disk in gigabytes Defaults to `128`.
     */
    public readonly diskSizeGb!: pulumi.Output<number | undefined>;
    /**
     * Defaults to `false`.
     */
    public readonly enableEncryptAtHost!: pulumi.Output<boolean | undefined>;
    /**
     * Enable log analytics on virtual machine. Defaults to `false`.
     */
    public readonly enableLogAnalytics!: pulumi.Output<boolean | undefined>;
    /**
     * Specify to enable Secure Boot for your VM. Used with security_type=TrustedLaunch Defaults to `true`.
     */
    public readonly enableSecurityBoot!: pulumi.Output<boolean | undefined>;
    /**
     * Specify to enable virtual Trusted Platform Module (vTPM) for Azure VM. Used with security_type=TrustedLaunch Defaults to `true`.
     */
    public readonly enableVtpm!: pulumi.Output<boolean | undefined>;
    /**
     * Defaults to `false`.
     */
    public readonly encryptDisk!: pulumi.Output<boolean | undefined>;
    /**
     * The short name of the host.
     */
    public readonly friendlyName!: pulumi.Output<string>;
    /**
     * The full name of the host.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * The Image ID to use to create virtual machine. Provide id as semicolon separated string with sequence of sku, publisher and offer. For example, 16.04-LTS;Canonical;UbuntuServe
     */
    public readonly imageId!: pulumi.Output<string>;
    /**
     * The Azure Virtual Machine ID of the host.
     */
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    public readonly isMinion!: pulumi.Output<boolean>;
    /**
     * Join a Windows Server virtual machine to an Azure Active Directory Domain Services. Defaults to `false`.
     */
    public readonly joinDomain!: pulumi.Output<boolean | undefined>;
    /**
     * A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
     */
    public readonly minionTags!: pulumi.Output<outputs.AzureVirtualMachineMinionTag[]>;
    /**
     * Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_ZRS` or `UltraSSD_LRS`.
     */
    public readonly osDiskType!: pulumi.Output<string>;
    /**
     * Specify "Standard" or "TrustedLaunch" security type. Defaults to "Standard".
     * 		Use TrustedLaunch for the security of "Generation 2" virtual machines (VMs).
     * 		[Supported Sizes](https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#virtual-machines-sizes)
     * 		 Defaults to `Standard`.
     */
    public readonly securityType!: pulumi.Output<string | undefined>;
    /**
     * The current status of the host.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Subnet ID which should be associated with the Virtual Machine.
     */
    public readonly subnetId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.AzureVirtualMachineTag[]>;
    /**
     * The GUID of the tenant that the host will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     */
    public readonly timezone!: pulumi.Output<string | undefined>;
    /**
     * The name of the tenant that the host will be created in.
     */
    public /*out*/ readonly userAccount!: pulumi.Output<string>;
    public readonly volumes!: pulumi.Output<outputs.AzureVirtualMachineVolume[] | undefined>;
    /**
     * Whether or not to wait until azure virtual machine to be ready, after creation. Defaults to `true`.
     */
    public readonly waitUntilReady!: pulumi.Output<boolean | undefined>;

    /**
     * Create a AzureVirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureVirtualMachineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureVirtualMachineArgs | AzureVirtualMachineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureVirtualMachineState | undefined;
            resourceInputs["adDomainType"] = state ? state.adDomainType : undefined;
            resourceInputs["adminPassword"] = state ? state.adminPassword : undefined;
            resourceInputs["adminUsername"] = state ? state.adminUsername : undefined;
            resourceInputs["agentPlatform"] = state ? state.agentPlatform : undefined;
            resourceInputs["allocatedPublicIp"] = state ? state.allocatedPublicIp : undefined;
            resourceInputs["availabilitySetId"] = state ? state.availabilitySetId : undefined;
            resourceInputs["base64UserData"] = state ? state.base64UserData : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["diskControlType"] = state ? state.diskControlType : undefined;
            resourceInputs["diskSizeGb"] = state ? state.diskSizeGb : undefined;
            resourceInputs["enableEncryptAtHost"] = state ? state.enableEncryptAtHost : undefined;
            resourceInputs["enableLogAnalytics"] = state ? state.enableLogAnalytics : undefined;
            resourceInputs["enableSecurityBoot"] = state ? state.enableSecurityBoot : undefined;
            resourceInputs["enableVtpm"] = state ? state.enableVtpm : undefined;
            resourceInputs["encryptDisk"] = state ? state.encryptDisk : undefined;
            resourceInputs["friendlyName"] = state ? state.friendlyName : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["isMinion"] = state ? state.isMinion : undefined;
            resourceInputs["joinDomain"] = state ? state.joinDomain : undefined;
            resourceInputs["minionTags"] = state ? state.minionTags : undefined;
            resourceInputs["osDiskType"] = state ? state.osDiskType : undefined;
            resourceInputs["securityType"] = state ? state.securityType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["userAccount"] = state ? state.userAccount : undefined;
            resourceInputs["volumes"] = state ? state.volumes : undefined;
            resourceInputs["waitUntilReady"] = state ? state.waitUntilReady : undefined;
        } else {
            const args = argsOrState as AzureVirtualMachineArgs | undefined;
            if ((!args || args.adminUsername === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminUsername'");
            }
            if ((!args || args.capacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capacity'");
            }
            if ((!args || args.friendlyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'friendlyName'");
            }
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["adDomainType"] = args ? args.adDomainType : undefined;
            resourceInputs["adminPassword"] = args?.adminPassword ? pulumi.secret(args.adminPassword) : undefined;
            resourceInputs["adminUsername"] = args ? args.adminUsername : undefined;
            resourceInputs["agentPlatform"] = args ? args.agentPlatform : undefined;
            resourceInputs["allocatedPublicIp"] = args ? args.allocatedPublicIp : undefined;
            resourceInputs["availabilitySetId"] = args ? args.availabilitySetId : undefined;
            resourceInputs["base64UserData"] = args ? args.base64UserData : undefined;
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["diskControlType"] = args ? args.diskControlType : undefined;
            resourceInputs["diskSizeGb"] = args ? args.diskSizeGb : undefined;
            resourceInputs["enableEncryptAtHost"] = args ? args.enableEncryptAtHost : undefined;
            resourceInputs["enableLogAnalytics"] = args ? args.enableLogAnalytics : undefined;
            resourceInputs["enableSecurityBoot"] = args ? args.enableSecurityBoot : undefined;
            resourceInputs["enableVtpm"] = args ? args.enableVtpm : undefined;
            resourceInputs["encryptDisk"] = args ? args.encryptDisk : undefined;
            resourceInputs["friendlyName"] = args ? args.friendlyName : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["isMinion"] = args ? args.isMinion : undefined;
            resourceInputs["joinDomain"] = args ? args.joinDomain : undefined;
            resourceInputs["minionTags"] = args ? args.minionTags : undefined;
            resourceInputs["osDiskType"] = args ? args.osDiskType : undefined;
            resourceInputs["securityType"] = args ? args.securityType : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["volumes"] = args ? args.volumes : undefined;
            resourceInputs["waitUntilReady"] = args ? args.waitUntilReady : undefined;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["userAccount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["adminPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AzureVirtualMachine.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureVirtualMachine resources.
 */
export interface AzureVirtualMachineState {
    /**
     * Specify domain service provided by Microsoft Azure for managing identities and access in the cloud. Valid values are `aadjoin` or `addsjoin`.
     */
    adDomainType?: pulumi.Input<string>;
    /**
     * The password associated with the local administrator account.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * Specifies the name of the local administrator account.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * The numeric ID of the container agent pool that this host is added to. Defaults to `0`.
     */
    agentPlatform?: pulumi.Input<number>;
    /**
     * Whether or not to allocate a public IP. Defaults to `false`.
     */
    allocatedPublicIp?: pulumi.Input<boolean>;
    /**
     * Specify availability set id to which virtual machine should be added to
     */
    availabilitySetId?: pulumi.Input<string>;
    /**
     * Base64 encoded user data to associated with the host.
     */
    base64UserData?: pulumi.Input<string>;
    /**
     * Specifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
     */
    capacity?: pulumi.Input<string>;
    /**
     * disk control types refer to the different levels of management and performance control provided for disks attached to virtual machines (VMs)
     */
    diskControlType?: pulumi.Input<string>;
    /**
     * Specifies the size of the OS Disk in gigabytes Defaults to `128`.
     */
    diskSizeGb?: pulumi.Input<number>;
    /**
     * Defaults to `false`.
     */
    enableEncryptAtHost?: pulumi.Input<boolean>;
    /**
     * Enable log analytics on virtual machine. Defaults to `false`.
     */
    enableLogAnalytics?: pulumi.Input<boolean>;
    /**
     * Specify to enable Secure Boot for your VM. Used with security_type=TrustedLaunch Defaults to `true`.
     */
    enableSecurityBoot?: pulumi.Input<boolean>;
    /**
     * Specify to enable virtual Trusted Platform Module (vTPM) for Azure VM. Used with security_type=TrustedLaunch Defaults to `true`.
     */
    enableVtpm?: pulumi.Input<boolean>;
    /**
     * Defaults to `false`.
     */
    encryptDisk?: pulumi.Input<boolean>;
    /**
     * The short name of the host.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * The full name of the host.
     */
    fullname?: pulumi.Input<string>;
    /**
     * The Image ID to use to create virtual machine. Provide id as semicolon separated string with sequence of sku, publisher and offer. For example, 16.04-LTS;Canonical;UbuntuServe
     */
    imageId?: pulumi.Input<string>;
    /**
     * The Azure Virtual Machine ID of the host.
     */
    instanceId?: pulumi.Input<string>;
    isMinion?: pulumi.Input<boolean>;
    /**
     * Join a Windows Server virtual machine to an Azure Active Directory Domain Services. Defaults to `false`.
     */
    joinDomain?: pulumi.Input<boolean>;
    /**
     * A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
     */
    minionTags?: pulumi.Input<pulumi.Input<inputs.AzureVirtualMachineMinionTag>[]>;
    /**
     * Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_ZRS` or `UltraSSD_LRS`.
     */
    osDiskType?: pulumi.Input<string>;
    /**
     * Specify "Standard" or "TrustedLaunch" security type. Defaults to "Standard".
     * 		Use TrustedLaunch for the security of "Generation 2" virtual machines (VMs).
     * 		[Supported Sizes](https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#virtual-machines-sizes)
     * 		 Defaults to `Standard`.
     */
    securityType?: pulumi.Input<string>;
    /**
     * The current status of the host.
     */
    status?: pulumi.Input<string>;
    /**
     * Subnet ID which should be associated with the Virtual Machine.
     */
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AzureVirtualMachineTag>[]>;
    /**
     * The GUID of the tenant that the host will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     */
    timezone?: pulumi.Input<string>;
    /**
     * The name of the tenant that the host will be created in.
     */
    userAccount?: pulumi.Input<string>;
    volumes?: pulumi.Input<pulumi.Input<inputs.AzureVirtualMachineVolume>[]>;
    /**
     * Whether or not to wait until azure virtual machine to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AzureVirtualMachine resource.
 */
export interface AzureVirtualMachineArgs {
    /**
     * Specify domain service provided by Microsoft Azure for managing identities and access in the cloud. Valid values are `aadjoin` or `addsjoin`.
     */
    adDomainType?: pulumi.Input<string>;
    /**
     * The password associated with the local administrator account.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * Specifies the name of the local administrator account.
     */
    adminUsername: pulumi.Input<string>;
    /**
     * The numeric ID of the container agent pool that this host is added to. Defaults to `0`.
     */
    agentPlatform?: pulumi.Input<number>;
    /**
     * Whether or not to allocate a public IP. Defaults to `false`.
     */
    allocatedPublicIp?: pulumi.Input<boolean>;
    /**
     * Specify availability set id to which virtual machine should be added to
     */
    availabilitySetId?: pulumi.Input<string>;
    /**
     * Base64 encoded user data to associated with the host.
     */
    base64UserData?: pulumi.Input<string>;
    /**
     * Specifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
     */
    capacity: pulumi.Input<string>;
    /**
     * disk control types refer to the different levels of management and performance control provided for disks attached to virtual machines (VMs)
     */
    diskControlType?: pulumi.Input<string>;
    /**
     * Specifies the size of the OS Disk in gigabytes Defaults to `128`.
     */
    diskSizeGb?: pulumi.Input<number>;
    /**
     * Defaults to `false`.
     */
    enableEncryptAtHost?: pulumi.Input<boolean>;
    /**
     * Enable log analytics on virtual machine. Defaults to `false`.
     */
    enableLogAnalytics?: pulumi.Input<boolean>;
    /**
     * Specify to enable Secure Boot for your VM. Used with security_type=TrustedLaunch Defaults to `true`.
     */
    enableSecurityBoot?: pulumi.Input<boolean>;
    /**
     * Specify to enable virtual Trusted Platform Module (vTPM) for Azure VM. Used with security_type=TrustedLaunch Defaults to `true`.
     */
    enableVtpm?: pulumi.Input<boolean>;
    /**
     * Defaults to `false`.
     */
    encryptDisk?: pulumi.Input<boolean>;
    /**
     * The short name of the host.
     */
    friendlyName: pulumi.Input<string>;
    /**
     * The Image ID to use to create virtual machine. Provide id as semicolon separated string with sequence of sku, publisher and offer. For example, 16.04-LTS;Canonical;UbuntuServe
     */
    imageId: pulumi.Input<string>;
    isMinion?: pulumi.Input<boolean>;
    /**
     * Join a Windows Server virtual machine to an Azure Active Directory Domain Services. Defaults to `false`.
     */
    joinDomain?: pulumi.Input<boolean>;
    /**
     * A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
     */
    minionTags?: pulumi.Input<pulumi.Input<inputs.AzureVirtualMachineMinionTag>[]>;
    /**
     * Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_ZRS` or `UltraSSD_LRS`.
     */
    osDiskType?: pulumi.Input<string>;
    /**
     * Specify "Standard" or "TrustedLaunch" security type. Defaults to "Standard".
     * 		Use TrustedLaunch for the security of "Generation 2" virtual machines (VMs).
     * 		[Supported Sizes](https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#virtual-machines-sizes)
     * 		 Defaults to `Standard`.
     */
    securityType?: pulumi.Input<string>;
    /**
     * Subnet ID which should be associated with the Virtual Machine.
     */
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AzureVirtualMachineTag>[]>;
    /**
     * The GUID of the tenant that the host will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     */
    timezone?: pulumi.Input<string>;
    volumes?: pulumi.Input<pulumi.Input<inputs.AzureVirtualMachineVolume>[]>;
    /**
     * Whether or not to wait until azure virtual machine to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}
