// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsLoadBalancer` manages an AWS application load balancer in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const myappAwsLoadBalancer = new duplocloud.AwsLoadBalancer("myapp", {
 *     tenantId: myapp.tenantId,
 *     name: "myapp",
 *     isInternal: true,
 *     enableAccessLogs: true,
 *     dropInvalidHeaders: true,
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS load balancer
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORT_NAME* is the short name of the AWS load balancer
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsLoadBalancer:AwsLoadBalancer myalb *TENANT_ID*&#47;*SHORT_NAME*
 * ```
 */
export class AwsLoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing AwsLoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsLoadBalancerState, opts?: pulumi.CustomResourceOptions): AwsLoadBalancer {
        return new AwsLoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsLoadBalancer:AwsLoadBalancer';

    /**
     * Returns true if the given object is an instance of AwsLoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsLoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsLoadBalancer.__pulumiType;
    }

    /**
     * The ARN of the load balancer.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The DNS name of the load balancer.
     */
    public /*out*/ readonly dnsName!: pulumi.Output<string>;
    /**
     * Whether or not the load balancer should drop invalid HTTP headers. Only valid for Load Balancers of type `Application`
     */
    public readonly dropInvalidHeaders!: pulumi.Output<boolean>;
    /**
     * Whether or not access logs should be enabled.
     */
    public readonly enableAccessLogs!: pulumi.Output<boolean>;
    /**
     * The full name of the load balancer.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * Whether or not the load balancer should redirect HTTP to HTTPS. Only valid for Load Balancers of type `Application`
     */
    public readonly httpToHttpsRedirect!: pulumi.Output<boolean>;
    /**
     * The time in seconds that the connection is allowed to be idle. Only valid for Load Balancers of type `application`.
     */
    public readonly idleTimeout!: pulumi.Output<number>;
    /**
     * Whether or not the load balancer is internal (non internet-facing).
     */
    public readonly isInternal!: pulumi.Output<boolean>;
    /**
     * The type of load balancer to create. Possible values are `Application` or `Network`. Defaults to `Application`.
     */
    public readonly loadBalancerType!: pulumi.Output<string | undefined>;
    /**
     * The short name of the load balancer.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The tags assigned to this load balancer.
     */
    public /*out*/ readonly tags!: pulumi.Output<outputs.AwsLoadBalancerTag[]>;
    /**
     * The GUID of the tenant that the load balancer will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * The ARN of a WAF to attach to the load balancer.
     */
    public readonly webAclId!: pulumi.Output<string>;

    /**
     * Create a AwsLoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsLoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsLoadBalancerArgs | AwsLoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsLoadBalancerState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["dnsName"] = state ? state.dnsName : undefined;
            resourceInputs["dropInvalidHeaders"] = state ? state.dropInvalidHeaders : undefined;
            resourceInputs["enableAccessLogs"] = state ? state.enableAccessLogs : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["httpToHttpsRedirect"] = state ? state.httpToHttpsRedirect : undefined;
            resourceInputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            resourceInputs["isInternal"] = state ? state.isInternal : undefined;
            resourceInputs["loadBalancerType"] = state ? state.loadBalancerType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["webAclId"] = state ? state.webAclId : undefined;
        } else {
            const args = argsOrState as AwsLoadBalancerArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["dropInvalidHeaders"] = args ? args.dropInvalidHeaders : undefined;
            resourceInputs["enableAccessLogs"] = args ? args.enableAccessLogs : undefined;
            resourceInputs["httpToHttpsRedirect"] = args ? args.httpToHttpsRedirect : undefined;
            resourceInputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            resourceInputs["isInternal"] = args ? args.isInternal : undefined;
            resourceInputs["loadBalancerType"] = args ? args.loadBalancerType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["webAclId"] = args ? args.webAclId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["dnsName"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsLoadBalancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsLoadBalancer resources.
 */
export interface AwsLoadBalancerState {
    /**
     * The ARN of the load balancer.
     */
    arn?: pulumi.Input<string>;
    /**
     * The DNS name of the load balancer.
     */
    dnsName?: pulumi.Input<string>;
    /**
     * Whether or not the load balancer should drop invalid HTTP headers. Only valid for Load Balancers of type `Application`
     */
    dropInvalidHeaders?: pulumi.Input<boolean>;
    /**
     * Whether or not access logs should be enabled.
     */
    enableAccessLogs?: pulumi.Input<boolean>;
    /**
     * The full name of the load balancer.
     */
    fullname?: pulumi.Input<string>;
    /**
     * Whether or not the load balancer should redirect HTTP to HTTPS. Only valid for Load Balancers of type `Application`
     */
    httpToHttpsRedirect?: pulumi.Input<boolean>;
    /**
     * The time in seconds that the connection is allowed to be idle. Only valid for Load Balancers of type `application`.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Whether or not the load balancer is internal (non internet-facing).
     */
    isInternal?: pulumi.Input<boolean>;
    /**
     * The type of load balancer to create. Possible values are `Application` or `Network`. Defaults to `Application`.
     */
    loadBalancerType?: pulumi.Input<string>;
    /**
     * The short name of the load balancer.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The tags assigned to this load balancer.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.AwsLoadBalancerTag>[]>;
    /**
     * The GUID of the tenant that the load balancer will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The ARN of a WAF to attach to the load balancer.
     */
    webAclId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsLoadBalancer resource.
 */
export interface AwsLoadBalancerArgs {
    /**
     * Whether or not the load balancer should drop invalid HTTP headers. Only valid for Load Balancers of type `Application`
     */
    dropInvalidHeaders?: pulumi.Input<boolean>;
    /**
     * Whether or not access logs should be enabled.
     */
    enableAccessLogs?: pulumi.Input<boolean>;
    /**
     * Whether or not the load balancer should redirect HTTP to HTTPS. Only valid for Load Balancers of type `Application`
     */
    httpToHttpsRedirect?: pulumi.Input<boolean>;
    /**
     * The time in seconds that the connection is allowed to be idle. Only valid for Load Balancers of type `application`.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Whether or not the load balancer is internal (non internet-facing).
     */
    isInternal?: pulumi.Input<boolean>;
    /**
     * The type of load balancer to create. Possible values are `Application` or `Network`. Defaults to `Application`.
     */
    loadBalancerType?: pulumi.Input<string>;
    /**
     * The short name of the load balancer.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the load balancer will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * The ARN of a WAF to attach to the load balancer.
     */
    webAclId?: pulumi.Input<string>;
}
