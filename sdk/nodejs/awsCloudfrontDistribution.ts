// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsCloudfrontDistribution` manages an aws cloudfront distribution in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const duplo_app = new duplocloud.Tenant("duplo-app", {
 *     accountName: "duplo-app",
 *     planId: "default",
 * });
 * const cfd = new duplocloud.AwsCloudfrontDistribution("cfd", {
 *     tenantId: duplo_app.tenantId,
 *     comment: "duploservices-dev01-app",
 *     defaultRootObject: "index.html",
 *     enabled: true,
 *     httpVersion: "http2",
 *     isIpv6Enabled: true,
 *     aliases: ["app-dev.abc.xyz"],
 *     priceClass: "PriceClass_All",
 *     waitForDeployment: true,
 *     origins: [
 *         {
 *             domainName: "pa-api-dev01.abc.xyz",
 *             originId: "pa-api-dev01.abc.xyz",
 *             connectionAttempts: 3,
 *             connectionTimeout: 10,
 *             customOriginConfig: {
 *                 httpPort: 80,
 *                 httpsPort: 443,
 *                 originKeepaliveTimeout: 30,
 *                 originReadTimeout: 30,
 *                 originProtocolPolicy: "https-only",
 *                 originSslProtocols: ["TLSv1.2"],
 *             },
 *         },
 *         {
 *             domainName: "duploservices-dev01-abc-app-1234567890.s3.us-west-2.amazonaws.com",
 *             originId: "duploservices-dev01-abc-app-1234567890.s3.us-west-2.amazonaws.com",
 *             connectionAttempts: 3,
 *             connectionTimeout: 10,
 *         },
 *     ],
 *     defaultCacheBehavior: {
 *         allowedMethods: [
 *             "GET",
 *             "HEAD",
 *         ],
 *         cachedMethods: [
 *             "GET",
 *             "HEAD",
 *         ],
 *         targetOriginId: "duploservices-dev01-abc-app-1234567890.s3.us-west-2.amazonaws.com",
 *         compress: false,
 *         viewerProtocolPolicy: "redirect-to-https",
 *         minTtl: 0,
 *         defaultTtl: 0,
 *         maxTtl: 0,
 *     },
 *     orderedCacheBehaviors: [{
 *         allowedMethods: [
 *             "GET",
 *             "HEAD",
 *         ],
 *         cachedMethods: [
 *             "GET",
 *             "HEAD",
 *         ],
 *         targetOriginId: "pa-api-dev01.abc.xyz",
 *         compress: false,
 *         viewerProtocolPolicy: "redirect-to-https",
 *         minTtl: 0,
 *         defaultTtl: 0,
 *         maxTtl: 0,
 *         pathPattern: "/api/*",
 *     }],
 *     viewerCertificate: {
 *         acmCertificateArn: "arn:aws:acm:us-east-1:1234567890:certificate/49c7a151-14b1-486e-801f-cf6bc9a43804",
 *         minimumProtocolVersion: "TLSv1.2_2019",
 *         sslSupportMethod: "sni-only",
 *     },
 *     restrictions: {
 *         geoRestriction: {
 *             restrictionType: "none",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS Cloudfront Distribution
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *CLOUDFRONT_ID* is the cloudfront id
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsCloudfrontDistribution:AwsCloudfrontDistribution myCFD *TENANT_ID*&#47;*CLOUDFRONT_ID*
 * ```
 */
export class AwsCloudfrontDistribution extends pulumi.CustomResource {
    /**
     * Get an existing AwsCloudfrontDistribution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsCloudfrontDistributionState, opts?: pulumi.CustomResourceOptions): AwsCloudfrontDistribution {
        return new AwsCloudfrontDistribution(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsCloudfrontDistribution:AwsCloudfrontDistribution';

    /**
     * Returns true if the given object is an instance of AwsCloudfrontDistribution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsCloudfrontDistribution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsCloudfrontDistribution.__pulumiType;
    }

    /**
     * Extra CNAMEs (alternate domain names), if any, for this distribution.
     */
    public readonly aliases!: pulumi.Output<string[]>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Any comments you want to include about the distribution. comment has been deprecated instead use name
     *
     * @deprecated comment has been deprecated instead use name
     */
    public readonly comment!: pulumi.Output<string>;
    public readonly corsAllowedHostNames!: pulumi.Output<string[]>;
    public readonly customErrorResponses!: pulumi.Output<outputs.AwsCloudfrontDistributionCustomErrorResponse[] | undefined>;
    public readonly defaultCacheBehavior!: pulumi.Output<outputs.AwsCloudfrontDistributionDefaultCacheBehavior>;
    /**
     * The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
     */
    public readonly defaultRootObject!: pulumi.Output<string>;
    public /*out*/ readonly domainName!: pulumi.Output<string>;
    /**
     * Whether the distribution is enabled to accept end user requests for content.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    public /*out*/ readonly etag!: pulumi.Output<string>;
    public /*out*/ readonly hostedZoneId!: pulumi.Output<string>;
    /**
     * The maximum HTTP version to support on the distribution. Allowed values are `http1.1` and `http2` Defaults to `http2`.
     */
    public readonly httpVersion!: pulumi.Output<string | undefined>;
    /**
     * Defaults to `false`.
     */
    public readonly isIpv6Enabled!: pulumi.Output<boolean | undefined>;
    public readonly loggingConfig!: pulumi.Output<outputs.AwsCloudfrontDistributionLoggingConfig | undefined>;
    /**
     * Name of the distribution
     */
    public readonly name!: pulumi.Output<string>;
    public readonly orderedCacheBehaviors!: pulumi.Output<outputs.AwsCloudfrontDistributionOrderedCacheBehavior[] | undefined>;
    public readonly originGroups!: pulumi.Output<outputs.AwsCloudfrontDistributionOriginGroup[] | undefined>;
    public readonly origins!: pulumi.Output<outputs.AwsCloudfrontDistributionOrigin[]>;
    /**
     * The price class for this distribution. One of `PriceClass_All`, `PriceClass_200`, `PriceClass_100` Defaults to `PriceClass_All`.
     */
    public readonly priceClass!: pulumi.Output<string | undefined>;
    public readonly restrictions!: pulumi.Output<outputs.AwsCloudfrontDistributionRestrictions>;
    /**
     * The current status of the distribution. `Deployed` if the distribution's information is fully propagated throughout the Amazon CloudFront system.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the aws cloudfront distribution will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Defaults to `true`.
     */
    public readonly useOriginAccessIdentity!: pulumi.Output<boolean | undefined>;
    public readonly viewerCertificate!: pulumi.Output<outputs.AwsCloudfrontDistributionViewerCertificate>;
    /**
     * Defaults to `true`.
     */
    public readonly waitForDeployment!: pulumi.Output<boolean | undefined>;
    /**
     * A unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution.
     */
    public readonly webAclId!: pulumi.Output<string>;

    /**
     * Create a AwsCloudfrontDistribution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsCloudfrontDistributionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsCloudfrontDistributionArgs | AwsCloudfrontDistributionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsCloudfrontDistributionState | undefined;
            resourceInputs["aliases"] = state ? state.aliases : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["corsAllowedHostNames"] = state ? state.corsAllowedHostNames : undefined;
            resourceInputs["customErrorResponses"] = state ? state.customErrorResponses : undefined;
            resourceInputs["defaultCacheBehavior"] = state ? state.defaultCacheBehavior : undefined;
            resourceInputs["defaultRootObject"] = state ? state.defaultRootObject : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["hostedZoneId"] = state ? state.hostedZoneId : undefined;
            resourceInputs["httpVersion"] = state ? state.httpVersion : undefined;
            resourceInputs["isIpv6Enabled"] = state ? state.isIpv6Enabled : undefined;
            resourceInputs["loggingConfig"] = state ? state.loggingConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orderedCacheBehaviors"] = state ? state.orderedCacheBehaviors : undefined;
            resourceInputs["originGroups"] = state ? state.originGroups : undefined;
            resourceInputs["origins"] = state ? state.origins : undefined;
            resourceInputs["priceClass"] = state ? state.priceClass : undefined;
            resourceInputs["restrictions"] = state ? state.restrictions : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["useOriginAccessIdentity"] = state ? state.useOriginAccessIdentity : undefined;
            resourceInputs["viewerCertificate"] = state ? state.viewerCertificate : undefined;
            resourceInputs["waitForDeployment"] = state ? state.waitForDeployment : undefined;
            resourceInputs["webAclId"] = state ? state.webAclId : undefined;
        } else {
            const args = argsOrState as AwsCloudfrontDistributionArgs | undefined;
            if ((!args || args.defaultCacheBehavior === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultCacheBehavior'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.origins === undefined) && !opts.urn) {
                throw new Error("Missing required property 'origins'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if ((!args || args.viewerCertificate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'viewerCertificate'");
            }
            resourceInputs["aliases"] = args ? args.aliases : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["corsAllowedHostNames"] = args ? args.corsAllowedHostNames : undefined;
            resourceInputs["customErrorResponses"] = args ? args.customErrorResponses : undefined;
            resourceInputs["defaultCacheBehavior"] = args ? args.defaultCacheBehavior : undefined;
            resourceInputs["defaultRootObject"] = args ? args.defaultRootObject : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["httpVersion"] = args ? args.httpVersion : undefined;
            resourceInputs["isIpv6Enabled"] = args ? args.isIpv6Enabled : undefined;
            resourceInputs["loggingConfig"] = args ? args.loggingConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orderedCacheBehaviors"] = args ? args.orderedCacheBehaviors : undefined;
            resourceInputs["originGroups"] = args ? args.originGroups : undefined;
            resourceInputs["origins"] = args ? args.origins : undefined;
            resourceInputs["priceClass"] = args ? args.priceClass : undefined;
            resourceInputs["restrictions"] = args ? args.restrictions : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["useOriginAccessIdentity"] = args ? args.useOriginAccessIdentity : undefined;
            resourceInputs["viewerCertificate"] = args ? args.viewerCertificate : undefined;
            resourceInputs["waitForDeployment"] = args ? args.waitForDeployment : undefined;
            resourceInputs["webAclId"] = args ? args.webAclId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["hostedZoneId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsCloudfrontDistribution.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsCloudfrontDistribution resources.
 */
export interface AwsCloudfrontDistributionState {
    /**
     * Extra CNAMEs (alternate domain names), if any, for this distribution.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    arn?: pulumi.Input<string>;
    /**
     * Any comments you want to include about the distribution. comment has been deprecated instead use name
     *
     * @deprecated comment has been deprecated instead use name
     */
    comment?: pulumi.Input<string>;
    corsAllowedHostNames?: pulumi.Input<pulumi.Input<string>[]>;
    customErrorResponses?: pulumi.Input<pulumi.Input<inputs.AwsCloudfrontDistributionCustomErrorResponse>[]>;
    defaultCacheBehavior?: pulumi.Input<inputs.AwsCloudfrontDistributionDefaultCacheBehavior>;
    /**
     * The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
     */
    defaultRootObject?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    /**
     * Whether the distribution is enabled to accept end user requests for content.
     */
    enabled?: pulumi.Input<boolean>;
    etag?: pulumi.Input<string>;
    hostedZoneId?: pulumi.Input<string>;
    /**
     * The maximum HTTP version to support on the distribution. Allowed values are `http1.1` and `http2` Defaults to `http2`.
     */
    httpVersion?: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    isIpv6Enabled?: pulumi.Input<boolean>;
    loggingConfig?: pulumi.Input<inputs.AwsCloudfrontDistributionLoggingConfig>;
    /**
     * Name of the distribution
     */
    name?: pulumi.Input<string>;
    orderedCacheBehaviors?: pulumi.Input<pulumi.Input<inputs.AwsCloudfrontDistributionOrderedCacheBehavior>[]>;
    originGroups?: pulumi.Input<pulumi.Input<inputs.AwsCloudfrontDistributionOriginGroup>[]>;
    origins?: pulumi.Input<pulumi.Input<inputs.AwsCloudfrontDistributionOrigin>[]>;
    /**
     * The price class for this distribution. One of `PriceClass_All`, `PriceClass_200`, `PriceClass_100` Defaults to `PriceClass_All`.
     */
    priceClass?: pulumi.Input<string>;
    restrictions?: pulumi.Input<inputs.AwsCloudfrontDistributionRestrictions>;
    /**
     * The current status of the distribution. `Deployed` if the distribution's information is fully propagated throughout the Amazon CloudFront system.
     */
    status?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the aws cloudfront distribution will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    useOriginAccessIdentity?: pulumi.Input<boolean>;
    viewerCertificate?: pulumi.Input<inputs.AwsCloudfrontDistributionViewerCertificate>;
    /**
     * Defaults to `true`.
     */
    waitForDeployment?: pulumi.Input<boolean>;
    /**
     * A unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution.
     */
    webAclId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsCloudfrontDistribution resource.
 */
export interface AwsCloudfrontDistributionArgs {
    /**
     * Extra CNAMEs (alternate domain names), if any, for this distribution.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Any comments you want to include about the distribution. comment has been deprecated instead use name
     *
     * @deprecated comment has been deprecated instead use name
     */
    comment?: pulumi.Input<string>;
    corsAllowedHostNames?: pulumi.Input<pulumi.Input<string>[]>;
    customErrorResponses?: pulumi.Input<pulumi.Input<inputs.AwsCloudfrontDistributionCustomErrorResponse>[]>;
    defaultCacheBehavior: pulumi.Input<inputs.AwsCloudfrontDistributionDefaultCacheBehavior>;
    /**
     * The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
     */
    defaultRootObject?: pulumi.Input<string>;
    /**
     * Whether the distribution is enabled to accept end user requests for content.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The maximum HTTP version to support on the distribution. Allowed values are `http1.1` and `http2` Defaults to `http2`.
     */
    httpVersion?: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    isIpv6Enabled?: pulumi.Input<boolean>;
    loggingConfig?: pulumi.Input<inputs.AwsCloudfrontDistributionLoggingConfig>;
    /**
     * Name of the distribution
     */
    name?: pulumi.Input<string>;
    orderedCacheBehaviors?: pulumi.Input<pulumi.Input<inputs.AwsCloudfrontDistributionOrderedCacheBehavior>[]>;
    originGroups?: pulumi.Input<pulumi.Input<inputs.AwsCloudfrontDistributionOriginGroup>[]>;
    origins: pulumi.Input<pulumi.Input<inputs.AwsCloudfrontDistributionOrigin>[]>;
    /**
     * The price class for this distribution. One of `PriceClass_All`, `PriceClass_200`, `PriceClass_100` Defaults to `PriceClass_All`.
     */
    priceClass?: pulumi.Input<string>;
    restrictions?: pulumi.Input<inputs.AwsCloudfrontDistributionRestrictions>;
    /**
     * The GUID of the tenant that the aws cloudfront distribution will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    useOriginAccessIdentity?: pulumi.Input<boolean>;
    viewerCertificate: pulumi.Input<inputs.AwsCloudfrontDistributionViewerCertificate>;
    /**
     * Defaults to `true`.
     */
    waitForDeployment?: pulumi.Input<boolean>;
    /**
     * A unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution.
     */
    webAclId?: pulumi.Input<string>;
}
