// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsLbTargetGroup` manages a target group in a Duplo tenant.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const tenantId = "053a2efa-d03f-4e1d-b3b5-33c121342adae";
 * const vpcId = "vpc-0ba0667cfc20111122233";
 * const tg = new duplocloud.AwsLbTargetGroup("tg", {
 *     tenantId: tenantId,
 *     name: "tg1",
 *     port: 80,
 *     protocol: "HTTP",
 *     vpcId: vpcId,
 *     targetType: "instance",
 *     healthCheck: {
 *         healthyThreshold: 8,
 *         interval: 300,
 *         path: "/health",
 *         port: "9000",
 *         protocol: "HTTP",
 *         timeout: 60,
 *         unhealthyThreshold: 6,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS target group
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the name of the AWS target group
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsLbTargetGroup:AwsLbTargetGroup tg *TENANT_ID*&#47;*NAME*
 * ```
 */
export class AwsLbTargetGroup extends pulumi.CustomResource {
    /**
     * Get an existing AwsLbTargetGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsLbTargetGroupState, opts?: pulumi.CustomResourceOptions): AwsLbTargetGroup {
        return new AwsLbTargetGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsLbTargetGroup:AwsLbTargetGroup';

    /**
     * Returns true if the given object is an instance of AwsLbTargetGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsLbTargetGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsLbTargetGroup.__pulumiType;
    }

    /**
     * ARN of the Target Group.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Health Check configuration block.
     */
    public readonly healthCheck!: pulumi.Output<outputs.AwsLbTargetGroupHealthCheck>;
    /**
     * The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`
     */
    public readonly ipAddressType!: pulumi.Output<string>;
    /**
     * Name of the target group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Port to use to connect with the target. Valid values are either ports 1-65535.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Protocol to use to connect with the target. Not applicable when `targetType` is `lambda`. Defaults to `HTTP`.
     */
    public readonly protocol!: pulumi.Output<string | undefined>;
    /**
     * Only applicable when protocol is `HTTP` or `HTTPS`. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
     */
    public readonly protocolVersion!: pulumi.Output<string>;
    /**
     * Type of target that you must specify when registering targets with this target group.
     */
    public readonly targetType!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the target group will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Identifier of the VPC in which to create the target group. Required when `targetType` is `instance`, `ip` or `alb`. Does not apply when `targetType` is `lambda`.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a AwsLbTargetGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsLbTargetGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsLbTargetGroupArgs | AwsLbTargetGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsLbTargetGroupState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["healthCheck"] = state ? state.healthCheck : undefined;
            resourceInputs["ipAddressType"] = state ? state.ipAddressType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["protocolVersion"] = state ? state.protocolVersion : undefined;
            resourceInputs["targetType"] = state ? state.targetType : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as AwsLbTargetGroupArgs | undefined;
            if ((!args || args.targetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetType'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["healthCheck"] = args ? args.healthCheck : undefined;
            resourceInputs["ipAddressType"] = args ? args.ipAddressType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["protocolVersion"] = args ? args.protocolVersion : undefined;
            resourceInputs["targetType"] = args ? args.targetType : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsLbTargetGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsLbTargetGroup resources.
 */
export interface AwsLbTargetGroupState {
    /**
     * ARN of the Target Group.
     */
    arn?: pulumi.Input<string>;
    /**
     * Health Check configuration block.
     */
    healthCheck?: pulumi.Input<inputs.AwsLbTargetGroupHealthCheck>;
    /**
     * The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`
     */
    ipAddressType?: pulumi.Input<string>;
    /**
     * Name of the target group.
     */
    name?: pulumi.Input<string>;
    /**
     * Port to use to connect with the target. Valid values are either ports 1-65535.
     */
    port?: pulumi.Input<number>;
    /**
     * Protocol to use to connect with the target. Not applicable when `targetType` is `lambda`. Defaults to `HTTP`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Only applicable when protocol is `HTTP` or `HTTPS`. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
     */
    protocolVersion?: pulumi.Input<string>;
    /**
     * Type of target that you must specify when registering targets with this target group.
     */
    targetType?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the target group will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Identifier of the VPC in which to create the target group. Required when `targetType` is `instance`, `ip` or `alb`. Does not apply when `targetType` is `lambda`.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsLbTargetGroup resource.
 */
export interface AwsLbTargetGroupArgs {
    /**
     * Health Check configuration block.
     */
    healthCheck?: pulumi.Input<inputs.AwsLbTargetGroupHealthCheck>;
    /**
     * The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`
     */
    ipAddressType?: pulumi.Input<string>;
    /**
     * Name of the target group.
     */
    name?: pulumi.Input<string>;
    /**
     * Port to use to connect with the target. Valid values are either ports 1-65535.
     */
    port?: pulumi.Input<number>;
    /**
     * Protocol to use to connect with the target. Not applicable when `targetType` is `lambda`. Defaults to `HTTP`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Only applicable when protocol is `HTTP` or `HTTPS`. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
     */
    protocolVersion?: pulumi.Input<string>;
    /**
     * Type of target that you must specify when registering targets with this target group.
     */
    targetType: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the target group will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Identifier of the VPC in which to create the target group. Required when `targetType` is `instance`, `ip` or `alb`. Does not apply when `targetType` is `lambda`.
     */
    vpcId?: pulumi.Input<string>;
}
