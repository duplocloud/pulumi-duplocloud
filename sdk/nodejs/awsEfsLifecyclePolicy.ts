// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsEfsLifecyclePolicy` Provides an Elastic File System (EFS) File System Lifecycle Policy resource in DuploCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const efs = new duplocloud.AwsEfsFileSystem("efs", {
 *     tenantId: myapp.tenantId,
 *     name: "efs-test",
 *     performanceMode: "generalPurpose",
 *     throughputMode: "elastic",
 *     backup: true,
 *     encrypted: true,
 * });
 * const efsPolicy = new duplocloud.AwsEfsLifecyclePolicy("efs_policy", {
 *     tenantId: myapp.tenantId,
 *     fileSystemId: efs.fileSystemId,
 *     lifecyclePolicies: [
 *         {
 *             transitionToIa: "AFTER_7_DAYS",
 *         },
 *         {
 *             transitionToArchive: "AFTER_14_DAYS",
 *         },
 *         {
 *             transitionToPrimaryStorageClass: "AFTER_1_ACCESS",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS Elastic File System
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *FILE_SYSTEM_ID* is the ID of the AWS Elastic File System
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsEfsLifecyclePolicy:AwsEfsLifecyclePolicy efslifecycle *TENANT_ID*&#47;*FILE_SYSTEM_ID*
 * ```
 */
export class AwsEfsLifecyclePolicy extends pulumi.CustomResource {
    /**
     * Get an existing AwsEfsLifecyclePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsEfsLifecyclePolicyState, opts?: pulumi.CustomResourceOptions): AwsEfsLifecyclePolicy {
        return new AwsEfsLifecyclePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsEfsLifecyclePolicy:AwsEfsLifecyclePolicy';

    /**
     * Returns true if the given object is an instance of AwsEfsLifecyclePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsEfsLifecyclePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsEfsLifecyclePolicy.__pulumiType;
    }

    public readonly fileSystemId!: pulumi.Output<string>;
    public readonly lifecyclePolicies!: pulumi.Output<outputs.AwsEfsLifecyclePolicyLifecyclePolicy[]>;
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AwsEfsLifecyclePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsEfsLifecyclePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsEfsLifecyclePolicyArgs | AwsEfsLifecyclePolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsEfsLifecyclePolicyState | undefined;
            resourceInputs["fileSystemId"] = state ? state.fileSystemId : undefined;
            resourceInputs["lifecyclePolicies"] = state ? state.lifecyclePolicies : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AwsEfsLifecyclePolicyArgs | undefined;
            if ((!args || args.fileSystemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemId'");
            }
            if ((!args || args.lifecyclePolicies === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lifecyclePolicies'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["fileSystemId"] = args ? args.fileSystemId : undefined;
            resourceInputs["lifecyclePolicies"] = args ? args.lifecyclePolicies : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsEfsLifecyclePolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsEfsLifecyclePolicy resources.
 */
export interface AwsEfsLifecyclePolicyState {
    fileSystemId?: pulumi.Input<string>;
    lifecyclePolicies?: pulumi.Input<pulumi.Input<inputs.AwsEfsLifecyclePolicyLifecyclePolicy>[]>;
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsEfsLifecyclePolicy resource.
 */
export interface AwsEfsLifecyclePolicyArgs {
    fileSystemId: pulumi.Input<string>;
    lifecyclePolicies: pulumi.Input<pulumi.Input<inputs.AwsEfsLifecyclePolicyLifecyclePolicy>[]>;
    tenantId: pulumi.Input<string>;
}
