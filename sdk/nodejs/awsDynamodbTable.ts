// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsDynamodbTable` manages an AWS dynamodb table in Duplo.
 */
export class AwsDynamodbTable extends pulumi.CustomResource {
    /**
     * Get an existing AwsDynamodbTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsDynamodbTableState, opts?: pulumi.CustomResourceOptions): AwsDynamodbTable {
        return new AwsDynamodbTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsDynamodbTable:AwsDynamodbTable';

    /**
     * Returns true if the given object is an instance of AwsDynamodbTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsDynamodbTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsDynamodbTable.__pulumiType;
    }

    /**
     * The ARN of the dynamodb table.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The attribute type of the primary key attribute.
     */
    public readonly attributeType!: pulumi.Output<string>;
    /**
     * The full name of the dynamodb table.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * The key type of the primary key.
     */
    public readonly keyType!: pulumi.Output<string>;
    /**
     * The short name of the dynamodb table.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The attribute name of the primary key attribute.
     */
    public readonly primaryKeyName!: pulumi.Output<string>;
    /**
     * The status of the dynamodb table.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the dynamodb table will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AwsDynamodbTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsDynamodbTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsDynamodbTableArgs | AwsDynamodbTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsDynamodbTableState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["attributeType"] = state ? state.attributeType : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["keyType"] = state ? state.keyType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primaryKeyName"] = state ? state.primaryKeyName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AwsDynamodbTableArgs | undefined;
            if ((!args || args.attributeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'attributeType'");
            }
            if ((!args || args.keyType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyType'");
            }
            if ((!args || args.primaryKeyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryKeyName'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["attributeType"] = args ? args.attributeType : undefined;
            resourceInputs["keyType"] = args ? args.keyType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primaryKeyName"] = args ? args.primaryKeyName : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsDynamodbTable.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsDynamodbTable resources.
 */
export interface AwsDynamodbTableState {
    /**
     * The ARN of the dynamodb table.
     */
    arn?: pulumi.Input<string>;
    /**
     * The attribute type of the primary key attribute.
     */
    attributeType?: pulumi.Input<string>;
    /**
     * The full name of the dynamodb table.
     */
    fullname?: pulumi.Input<string>;
    /**
     * The key type of the primary key.
     */
    keyType?: pulumi.Input<string>;
    /**
     * The short name of the dynamodb table.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The attribute name of the primary key attribute.
     */
    primaryKeyName?: pulumi.Input<string>;
    /**
     * The status of the dynamodb table.
     */
    status?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the dynamodb table will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsDynamodbTable resource.
 */
export interface AwsDynamodbTableArgs {
    /**
     * The attribute type of the primary key attribute.
     */
    attributeType: pulumi.Input<string>;
    /**
     * The key type of the primary key.
     */
    keyType: pulumi.Input<string>;
    /**
     * The short name of the dynamodb table.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The attribute name of the primary key attribute.
     */
    primaryKeyName: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the dynamodb table will be created in.
     */
    tenantId: pulumi.Input<string>;
}
