// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsBatchSchedulingPolicy` manages an aws batch scheduling policy in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const bsp = new duplocloud.AwsBatchSchedulingPolicy("bsp", {
 *     tenantId: myapp.tenantId,
 *     name: "test",
 *     fairSharePolicy: {
 *         computeReservation: 1,
 *         shareDecaySeconds: 3600,
 *         shareDistributions: [
 *             {
 *                 shareIdentifier: "A1*",
 *                 weightFactor: 0.1,
 *             },
 *             {
 *                 shareIdentifier: "A2",
 *                 weightFactor: 0.2,
 *             },
 *         ],
 *     },
 *     tags: {
 *         Name: "Example Batch Scheduling Policy",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS Batch Scheduling Policy
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the short name of Scheduling Policy
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsBatchSchedulingPolicy:AwsBatchSchedulingPolicy bsp *TENANT_ID*&#47;*NAME*
 * ```
 */
export class AwsBatchSchedulingPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AwsBatchSchedulingPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsBatchSchedulingPolicyState, opts?: pulumi.CustomResourceOptions): AwsBatchSchedulingPolicy {
        return new AwsBatchSchedulingPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsBatchSchedulingPolicy:AwsBatchSchedulingPolicy';

    /**
     * Returns true if the given object is an instance of AwsBatchSchedulingPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsBatchSchedulingPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsBatchSchedulingPolicy.__pulumiType;
    }

    /**
     * The Amazon Resource Name of the scheduling policy.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * A fairshare policy block specifies the `computeReservation`, `shareDelaySeconds`, and `shareDistribution` of the scheduling policy. The `fairsharePolicy block` is documented below.
     */
    public readonly fairSharePolicy!: pulumi.Output<outputs.AwsBatchSchedulingPolicyFairSharePolicy>;
    /**
     * The full name of the scheduling policy.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * Specifies the name of the scheduling policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Key-value map of resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The GUID of the tenant that the aws batch scheduling policy will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AwsBatchSchedulingPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsBatchSchedulingPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsBatchSchedulingPolicyArgs | AwsBatchSchedulingPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsBatchSchedulingPolicyState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["fairSharePolicy"] = state ? state.fairSharePolicy : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AwsBatchSchedulingPolicyArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["fairSharePolicy"] = args ? args.fairSharePolicy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsBatchSchedulingPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsBatchSchedulingPolicy resources.
 */
export interface AwsBatchSchedulingPolicyState {
    /**
     * The Amazon Resource Name of the scheduling policy.
     */
    arn?: pulumi.Input<string>;
    /**
     * A fairshare policy block specifies the `computeReservation`, `shareDelaySeconds`, and `shareDistribution` of the scheduling policy. The `fairsharePolicy block` is documented below.
     */
    fairSharePolicy?: pulumi.Input<inputs.AwsBatchSchedulingPolicyFairSharePolicy>;
    /**
     * The full name of the scheduling policy.
     */
    fullname?: pulumi.Input<string>;
    /**
     * Specifies the name of the scheduling policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the aws batch scheduling policy will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsBatchSchedulingPolicy resource.
 */
export interface AwsBatchSchedulingPolicyArgs {
    /**
     * A fairshare policy block specifies the `computeReservation`, `shareDelaySeconds`, and `shareDistribution` of the scheduling policy. The `fairsharePolicy block` is documented below.
     */
    fairSharePolicy?: pulumi.Input<inputs.AwsBatchSchedulingPolicyFairSharePolicy>;
    /**
     * Specifies the name of the scheduling policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the aws batch scheduling policy will be created in.
     */
    tenantId: pulumi.Input<string>;
}
