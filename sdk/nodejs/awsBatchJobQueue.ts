// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsBatchJobQueue` manages an aws batch Job queue in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const tenantId = "d186700c-ad18-4525-9593-aad467c843ff";
 * const bsp = new duplocloud.AwsBatchSchedulingPolicy("bsp", {
 *     tenantId: tenantId,
 *     name: "rtt",
 *     fairSharePolicy: {
 *         computeReservation: 2,
 *         shareDecaySeconds: 3600,
 *         shareDistributions: [
 *             {
 *                 shareIdentifier: "A1*",
 *                 weightFactor: 0.1,
 *             },
 *             {
 *                 shareIdentifier: "A2",
 *                 weightFactor: 0.2,
 *             },
 *         ],
 *     },
 *     tags: {
 *         Name: "Example Batch Scheduling Policy",
 *     },
 * });
 * const bce = new duplocloud.AwsBatchComputeEnvironment("bce", {
 *     tenantId: tenantId,
 *     name: "sample",
 *     computeResources: {
 *         ec2Configuration: {
 *             imageType: "ECS_AL2",
 *         },
 *         instanceTypes: ["optimal"],
 *         allocationStrategy: "BEST_FIT",
 *         maxVcpus: 8,
 *         minVcpus: 1,
 *         desiredVcpus: 2,
 *         bidPercentage: 100,
 *         type: "EC2",
 *     },
 *     type: "MANAGED",
 * });
 * const jq = new duplocloud.AwsBatchJobQueue("jq", {
 *     tenantId: tenantId,
 *     name: "tf_job_queue",
 *     schedulingPolicyArn: bsp.arn,
 *     state: "ENABLED",
 *     priority: 1,
 *     computeEnvironments: [bce.arn],
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS Batch Job Queue
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the short name of Job Queue
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsBatchJobQueue:AwsBatchJobQueue jq *TENANT_ID*&#47;*NAME*
 * ```
 */
export class AwsBatchJobQueue extends pulumi.CustomResource {
    /**
     * Get an existing AwsBatchJobQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsBatchJobQueueState, opts?: pulumi.CustomResourceOptions): AwsBatchJobQueue {
        return new AwsBatchJobQueue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsBatchJobQueue:AwsBatchJobQueue';

    /**
     * Returns true if the given object is an instance of AwsBatchJobQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsBatchJobQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsBatchJobQueue.__pulumiType;
    }

    /**
     * The Amazon Resource Name of the Job queue.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Specifies the set of compute environments mapped to a job queue and their order. The position of the compute environments in the list will dictate the order.
     */
    public readonly computeEnvironments!: pulumi.Output<string[]>;
    /**
     * The full name of the Job queue.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * Specifies the name of the Job queue.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The priority of the job queue. Job queues with a higher priority are evaluated first when associated with the same compute environment.
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
     */
    public readonly schedulingPolicyArn!: pulumi.Output<string>;
    /**
     * The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * Key-value map of resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The GUID of the tenant that the aws batch Job queue will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Defaults to `true`.
     */
    public readonly waitForDeployment!: pulumi.Output<boolean | undefined>;

    /**
     * Create a AwsBatchJobQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsBatchJobQueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsBatchJobQueueArgs | AwsBatchJobQueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsBatchJobQueueState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["computeEnvironments"] = state ? state.computeEnvironments : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["schedulingPolicyArn"] = state ? state.schedulingPolicyArn : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["waitForDeployment"] = state ? state.waitForDeployment : undefined;
        } else {
            const args = argsOrState as AwsBatchJobQueueArgs | undefined;
            if ((!args || args.computeEnvironments === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeEnvironments'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.state === undefined) && !opts.urn) {
                throw new Error("Missing required property 'state'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["computeEnvironments"] = args ? args.computeEnvironments : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["schedulingPolicyArn"] = args ? args.schedulingPolicyArn : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["waitForDeployment"] = args ? args.waitForDeployment : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsBatchJobQueue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsBatchJobQueue resources.
 */
export interface AwsBatchJobQueueState {
    /**
     * The Amazon Resource Name of the Job queue.
     */
    arn?: pulumi.Input<string>;
    /**
     * Specifies the set of compute environments mapped to a job queue and their order. The position of the compute environments in the list will dictate the order.
     */
    computeEnvironments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The full name of the Job queue.
     */
    fullname?: pulumi.Input<string>;
    /**
     * Specifies the name of the Job queue.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of the job queue. Job queues with a higher priority are evaluated first when associated with the same compute environment.
     */
    priority?: pulumi.Input<number>;
    /**
     * The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
     */
    schedulingPolicyArn?: pulumi.Input<string>;
    /**
     * The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
     */
    state?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the aws batch Job queue will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    waitForDeployment?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AwsBatchJobQueue resource.
 */
export interface AwsBatchJobQueueArgs {
    /**
     * Specifies the set of compute environments mapped to a job queue and their order. The position of the compute environments in the list will dictate the order.
     */
    computeEnvironments: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the Job queue.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of the job queue. Job queues with a higher priority are evaluated first when associated with the same compute environment.
     */
    priority: pulumi.Input<number>;
    /**
     * The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
     */
    schedulingPolicyArn?: pulumi.Input<string>;
    /**
     * The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
     */
    state: pulumi.Input<string>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the aws batch Job queue will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    waitForDeployment?: pulumi.Input<boolean>;
}
