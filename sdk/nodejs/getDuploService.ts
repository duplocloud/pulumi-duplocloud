// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

export function getDuploService(args: GetDuploServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetDuploServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("duplocloud:index/getDuploService:getDuploService", {
        "name": args.name,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDuploService.
 */
export interface GetDuploServiceArgs {
    name: string;
    tenantId: string;
}

/**
 * A collection of values returned by getDuploService.
 */
export interface GetDuploServiceResult {
    readonly agentPlatform: number;
    readonly allocationTags: string;
    readonly anyHostAllowed: boolean;
    readonly cloud: number;
    readonly cloudCredsFromK8sServiceAccount: boolean;
    readonly commands: string[];
    readonly dockerImage: string;
    /**
     * The service domain (whichever fqdnEx or fqdn which is non empty)
     */
    readonly domain: string;
    readonly extraConfig: string;
    readonly forceStatefulSet: boolean;
    /**
     * The fully qualified domain associated with the service
     */
    readonly fqdn: string;
    /**
     * External fully qualified domain associated with the service
     */
    readonly fqdnEx: string;
    readonly hpaSpecs: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isDaemonset: boolean;
    /**
     * Whether or not the replicas must be scheduled on separate Kubernetes nodes.  Only supported on Kubernetes.
     */
    readonly isUniqueK8sNodeRequired: boolean;
    readonly lbSyncedDeployment: boolean;
    readonly name: string;
    readonly otherDockerConfig: string;
    readonly otherDockerHostConfig: string;
    /**
     * The service's parent domain
     */
    readonly parentDomain: string;
    readonly replicaCollocationAllowed: boolean;
    readonly replicas: number;
    readonly replicasMatchingAsgName: string;
    /**
     * Whether or not the replicas must be spread across availability zones.  Only supported on Kubernetes.
     */
    readonly shouldSpreadAcrossZones: boolean;
    readonly tags: outputs.GetDuploServiceTag[];
    readonly tenantId: string;
    readonly volumes: string;
}
export function getDuploServiceOutput(args: GetDuploServiceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDuploServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("duplocloud:index/getDuploService:getDuploService", {
        "name": args.name,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDuploService.
 */
export interface GetDuploServiceOutputArgs {
    name: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}
