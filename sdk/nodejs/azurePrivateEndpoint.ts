// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AzurePrivateEndpoint` manages an azure private endpoint in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const mssqlServerPrivateEndpoint = new duplocloud.AzurePrivateEndpoint("mssql_server_private_endpoint", {
 *     tenantId: myapp.tenantId,
 *     name: "pe-duplo-tf",
 *     subnetId: "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.Network/virtualNetworks/tmerge/subnets/duploinfra-default",
 *     privateLinkServiceConnections: [{
 *         name: "pe-mssql",
 *         privateConnectionResourceId: "/subscriptions/<subscription-id>/resourceGroups/duploservices-jee556/providers/Microsoft.Sql/servers/thisistotestprivateendpoint",
 *         groupIds: ["sqlServer"],
 *     }],
 * });
 * const storageServerPrivateEndpoint = new duplocloud.AzurePrivateEndpoint("storage_server_private_endpoint", {
 *     tenantId: myapp.tenantId,
 *     name: "pe-duplo-tf-storage",
 *     subnetId: "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.Network/virtualNetworks/tmerge/subnets/duploinfra-default",
 *     privateLinkServiceConnections: [{
 *         name: "pe-storage",
 *         privateConnectionResourceId: "/subscriptions/<subscription-id>/resourceGroups/duploservices-jee556/providers/Microsoft.Storage/storageAccounts/letsfixprivateendpoint",
 *         groupIds: ["Blob"],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing Azure Private Endpoint
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the name of the Azure  Private Endpoint
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/azurePrivateEndpoint:AzurePrivateEndpoint private_endpoint *TENANT_ID*&#47;*NAME*
 * ```
 */
export class AzurePrivateEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing AzurePrivateEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzurePrivateEndpointState, opts?: pulumi.CustomResourceOptions): AzurePrivateEndpoint {
        return new AzurePrivateEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/azurePrivateEndpoint:AzurePrivateEndpoint';

    /**
     * Returns true if the given object is an instance of AzurePrivateEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzurePrivateEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzurePrivateEndpoint.__pulumiType;
    }

    /**
     * Specifies the Name of the Private Endpoint.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies private link service connections.
     */
    public readonly privateLinkServiceConnections!: pulumi.Output<outputs.AzurePrivateEndpointPrivateLinkServiceConnection[]>;
    /**
     * The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the azure private endpoint will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AzurePrivateEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzurePrivateEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzurePrivateEndpointArgs | AzurePrivateEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzurePrivateEndpointState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateLinkServiceConnections"] = state ? state.privateLinkServiceConnections : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AzurePrivateEndpointArgs | undefined;
            if ((!args || args.privateLinkServiceConnections === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateLinkServiceConnections'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateLinkServiceConnections"] = args ? args.privateLinkServiceConnections : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzurePrivateEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzurePrivateEndpoint resources.
 */
export interface AzurePrivateEndpointState {
    /**
     * Specifies the Name of the Private Endpoint.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies private link service connections.
     */
    privateLinkServiceConnections?: pulumi.Input<pulumi.Input<inputs.AzurePrivateEndpointPrivateLinkServiceConnection>[]>;
    /**
     * The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the azure private endpoint will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzurePrivateEndpoint resource.
 */
export interface AzurePrivateEndpointArgs {
    /**
     * Specifies the Name of the Private Endpoint.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies private link service connections.
     */
    privateLinkServiceConnections: pulumi.Input<pulumi.Input<inputs.AzurePrivateEndpointPrivateLinkServiceConnection>[]>;
    /**
     * The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint.
     */
    subnetId: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the azure private endpoint will be created in.
     */
    tenantId: pulumi.Input<string>;
}
