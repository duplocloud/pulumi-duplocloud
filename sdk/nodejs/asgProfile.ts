// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AsgProfile` manages a ASG Profile in Duplo.
 *
 * ## Import
 *
 * Example: Importing an existing AWS ASG
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *FRIENDLY_NAME* is the duploservices-<account_name>-<friendly_name>
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/asgProfile:AsgProfile myAsgProfile *TENANT_ID*&#47;*FRIENDLY_NAME*
 * ```
 */
export class AsgProfile extends pulumi.CustomResource {
    /**
     * Get an existing AsgProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AsgProfileState, opts?: pulumi.CustomResourceOptions): AsgProfile {
        return new AsgProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/asgProfile:AsgProfile';

    /**
     * Returns true if the given object is an instance of AsgProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AsgProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AsgProfile.__pulumiType;
    }

    /**
     * The numeric ID of the container agent pool that this host is added to.
     */
    public readonly agentPlatform!: pulumi.Output<number | undefined>;
    /**
     * Whether or not to allocate a public IP.
     */
    public readonly allocatedPublicIp!: pulumi.Output<boolean | undefined>;
    /**
     * Base64 encoded EC2 user data to associated with the host.
     */
    public readonly base64UserData!: pulumi.Output<string>;
    /**
     * Whether or not ASG should leverage duplocloud's scale from 0 feature
     */
    public readonly canScaleFromZero!: pulumi.Output<boolean>;
    /**
     * The AWS EC2 instance type.
     */
    public readonly capacity!: pulumi.Output<string>;
    /**
     * The numeric ID of the cloud provider to launch the host in.
     */
    public readonly cloud!: pulumi.Output<number | undefined>;
    /**
     * Specify the labels to attach to the nodes.
     */
    public readonly customNodeLabels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of metrics to collect for the ASG Specify one or more of the following
     * metrics.`GroupMinSize`,`GroupMaxSize`,`GroupDesiredCapacity`,`GroupInServiceInstances`,`GroupPendingInstances`,`GroupStandbyInstances`,`GroupTerminatingInstances`,`GroupTotalInstances`,`GroupInServiceCapacity`,`GroupPendingCapacity`,`GroupStandbyCapacity`,`GroupTerminatingCapacity`,`GroupTotalCapacity`,`WarmPoolDesiredCapacity`,`WarmPoolWarmedCapacity`,`WarmPoolPendingCapacity`,`WarmPoolTerminatingCapacity`,`WarmPoolTotalCapacity`,`GroupAndWarmPoolDesiredCapacity`,`GroupAndWarmPoolTotalCapacity`.
     */
    public readonly enabledMetrics!: pulumi.Output<string[] | undefined>;
    public readonly encryptDisk!: pulumi.Output<boolean | undefined>;
    /**
     * The short name of the host.
     */
    public readonly friendlyName!: pulumi.Output<string>;
    /**
     * The full name of the ASG profile.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * The AMI ID to use.
     */
    public readonly imageId!: pulumi.Output<string>;
    public /*out*/ readonly initialBase64UserData!: pulumi.Output<string>;
    /**
     * The number of instances that should be running in the group.
     */
    public readonly instanceCount!: pulumi.Output<number>;
    /**
     * Whether or not to enable cluster autoscaler.
     */
    public readonly isClusterAutoscaled!: pulumi.Output<boolean>;
    public readonly isEbsOptimized!: pulumi.Output<boolean | undefined>;
    public readonly isMinion!: pulumi.Output<boolean | undefined>;
    /**
     * The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
     * - some operating systems no longer support it)
     */
    public readonly keypairType!: pulumi.Output<number>;
    /**
     * The maximum size of the Auto Scaling Group.
     */
    public readonly maxInstanceCount!: pulumi.Output<number>;
    /**
     * Maximum price to pay for a spot instance in dollars per unit hour.
     */
    public readonly maxSpotPrice!: pulumi.Output<string | undefined>;
    /**
     * Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
     * Key and its size as value, size value should be atleast 10*
     */
    public readonly metadatas!: pulumi.Output<outputs.AsgProfileMetadata[]>;
    /**
     * The minimum size of the Auto Scaling Group.
     */
    public readonly minInstanceCount!: pulumi.Output<number>;
    /**
     * A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
     */
    public readonly minionTags!: pulumi.Output<outputs.AsgProfileMinionTag[]>;
    /**
     * An optional list of custom network interface configurations to use when creating the host.
     */
    public readonly networkInterfaces!: pulumi.Output<outputs.AsgProfileNetworkInterface[]>;
    /**
     * Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
     */
    public readonly prependUserData!: pulumi.Output<boolean | undefined>;
    /**
     * The primary public IP address assigned to the host.
     */
    public /*out*/ readonly publicIpAddress!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.AsgProfileTag[]>;
    /**
     * Specify taints to attach to the nodes, to repel other nodes with different toleration
     */
    public readonly taints!: pulumi.Output<outputs.AsgProfileTaint[] | undefined>;
    /**
     * The GUID of the tenant that the host will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Whether or not to use spot instances.
     */
    public readonly useSpotInstances!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the tenant that the host will be created in.
     */
    public readonly userAccount!: pulumi.Output<string>;
    /**
     * Block to specify additional or secondary volume beyond the root device
     */
    public readonly volumes!: pulumi.Output<outputs.AsgProfileVolume[]>;
    /**
     * Whether or not to wait until ASG instances to be healthy, after creation.
     */
    public readonly waitForCapacity!: pulumi.Output<boolean | undefined>;
    /**
     * The availability zone to launch the host in, expressed as a number and starting at 0.
     *
     * @deprecated zone has been deprecated instead use zones
     */
    public readonly zone!: pulumi.Output<number | undefined>;
    /**
     * The multi availability zone to launch the asg in, expressed as a number and starting at 0 - Automatic 1 - Zone A 2 -
     * Zone B
     */
    public readonly zones!: pulumi.Output<number[] | undefined>;

    /**
     * Create a AsgProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AsgProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AsgProfileArgs | AsgProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AsgProfileState | undefined;
            resourceInputs["agentPlatform"] = state ? state.agentPlatform : undefined;
            resourceInputs["allocatedPublicIp"] = state ? state.allocatedPublicIp : undefined;
            resourceInputs["base64UserData"] = state ? state.base64UserData : undefined;
            resourceInputs["canScaleFromZero"] = state ? state.canScaleFromZero : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["cloud"] = state ? state.cloud : undefined;
            resourceInputs["customNodeLabels"] = state ? state.customNodeLabels : undefined;
            resourceInputs["enabledMetrics"] = state ? state.enabledMetrics : undefined;
            resourceInputs["encryptDisk"] = state ? state.encryptDisk : undefined;
            resourceInputs["friendlyName"] = state ? state.friendlyName : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["initialBase64UserData"] = state ? state.initialBase64UserData : undefined;
            resourceInputs["instanceCount"] = state ? state.instanceCount : undefined;
            resourceInputs["isClusterAutoscaled"] = state ? state.isClusterAutoscaled : undefined;
            resourceInputs["isEbsOptimized"] = state ? state.isEbsOptimized : undefined;
            resourceInputs["isMinion"] = state ? state.isMinion : undefined;
            resourceInputs["keypairType"] = state ? state.keypairType : undefined;
            resourceInputs["maxInstanceCount"] = state ? state.maxInstanceCount : undefined;
            resourceInputs["maxSpotPrice"] = state ? state.maxSpotPrice : undefined;
            resourceInputs["metadatas"] = state ? state.metadatas : undefined;
            resourceInputs["minInstanceCount"] = state ? state.minInstanceCount : undefined;
            resourceInputs["minionTags"] = state ? state.minionTags : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["prependUserData"] = state ? state.prependUserData : undefined;
            resourceInputs["publicIpAddress"] = state ? state.publicIpAddress : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taints"] = state ? state.taints : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["useSpotInstances"] = state ? state.useSpotInstances : undefined;
            resourceInputs["userAccount"] = state ? state.userAccount : undefined;
            resourceInputs["volumes"] = state ? state.volumes : undefined;
            resourceInputs["waitForCapacity"] = state ? state.waitForCapacity : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as AsgProfileArgs | undefined;
            if ((!args || args.capacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capacity'");
            }
            if ((!args || args.friendlyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'friendlyName'");
            }
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["agentPlatform"] = args ? args.agentPlatform : undefined;
            resourceInputs["allocatedPublicIp"] = args ? args.allocatedPublicIp : undefined;
            resourceInputs["base64UserData"] = args ? args.base64UserData : undefined;
            resourceInputs["canScaleFromZero"] = args ? args.canScaleFromZero : undefined;
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["cloud"] = args ? args.cloud : undefined;
            resourceInputs["customNodeLabels"] = args ? args.customNodeLabels : undefined;
            resourceInputs["enabledMetrics"] = args ? args.enabledMetrics : undefined;
            resourceInputs["encryptDisk"] = args ? args.encryptDisk : undefined;
            resourceInputs["friendlyName"] = args ? args.friendlyName : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["instanceCount"] = args ? args.instanceCount : undefined;
            resourceInputs["isClusterAutoscaled"] = args ? args.isClusterAutoscaled : undefined;
            resourceInputs["isEbsOptimized"] = args ? args.isEbsOptimized : undefined;
            resourceInputs["isMinion"] = args ? args.isMinion : undefined;
            resourceInputs["keypairType"] = args ? args.keypairType : undefined;
            resourceInputs["maxInstanceCount"] = args ? args.maxInstanceCount : undefined;
            resourceInputs["maxSpotPrice"] = args ? args.maxSpotPrice : undefined;
            resourceInputs["metadatas"] = args ? args.metadatas : undefined;
            resourceInputs["minInstanceCount"] = args ? args.minInstanceCount : undefined;
            resourceInputs["minionTags"] = args ? args.minionTags : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["prependUserData"] = args ? args.prependUserData : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["taints"] = args ? args.taints : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["useSpotInstances"] = args ? args.useSpotInstances : undefined;
            resourceInputs["userAccount"] = args ? args.userAccount : undefined;
            resourceInputs["volumes"] = args ? args.volumes : undefined;
            resourceInputs["waitForCapacity"] = args ? args.waitForCapacity : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["initialBase64UserData"] = undefined /*out*/;
            resourceInputs["publicIpAddress"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AsgProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AsgProfile resources.
 */
export interface AsgProfileState {
    /**
     * The numeric ID of the container agent pool that this host is added to.
     */
    agentPlatform?: pulumi.Input<number>;
    /**
     * Whether or not to allocate a public IP.
     */
    allocatedPublicIp?: pulumi.Input<boolean>;
    /**
     * Base64 encoded EC2 user data to associated with the host.
     */
    base64UserData?: pulumi.Input<string>;
    /**
     * Whether or not ASG should leverage duplocloud's scale from 0 feature
     */
    canScaleFromZero?: pulumi.Input<boolean>;
    /**
     * The AWS EC2 instance type.
     */
    capacity?: pulumi.Input<string>;
    /**
     * The numeric ID of the cloud provider to launch the host in.
     */
    cloud?: pulumi.Input<number>;
    /**
     * Specify the labels to attach to the nodes.
     */
    customNodeLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of metrics to collect for the ASG Specify one or more of the following
     * metrics.`GroupMinSize`,`GroupMaxSize`,`GroupDesiredCapacity`,`GroupInServiceInstances`,`GroupPendingInstances`,`GroupStandbyInstances`,`GroupTerminatingInstances`,`GroupTotalInstances`,`GroupInServiceCapacity`,`GroupPendingCapacity`,`GroupStandbyCapacity`,`GroupTerminatingCapacity`,`GroupTotalCapacity`,`WarmPoolDesiredCapacity`,`WarmPoolWarmedCapacity`,`WarmPoolPendingCapacity`,`WarmPoolTerminatingCapacity`,`WarmPoolTotalCapacity`,`GroupAndWarmPoolDesiredCapacity`,`GroupAndWarmPoolTotalCapacity`.
     */
    enabledMetrics?: pulumi.Input<pulumi.Input<string>[]>;
    encryptDisk?: pulumi.Input<boolean>;
    /**
     * The short name of the host.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * The full name of the ASG profile.
     */
    fullname?: pulumi.Input<string>;
    /**
     * The AMI ID to use.
     */
    imageId?: pulumi.Input<string>;
    initialBase64UserData?: pulumi.Input<string>;
    /**
     * The number of instances that should be running in the group.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * Whether or not to enable cluster autoscaler.
     */
    isClusterAutoscaled?: pulumi.Input<boolean>;
    isEbsOptimized?: pulumi.Input<boolean>;
    isMinion?: pulumi.Input<boolean>;
    /**
     * The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
     * - some operating systems no longer support it)
     */
    keypairType?: pulumi.Input<number>;
    /**
     * The maximum size of the Auto Scaling Group.
     */
    maxInstanceCount?: pulumi.Input<number>;
    /**
     * Maximum price to pay for a spot instance in dollars per unit hour.
     */
    maxSpotPrice?: pulumi.Input<string>;
    /**
     * Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
     * Key and its size as value, size value should be atleast 10*
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.AsgProfileMetadata>[]>;
    /**
     * The minimum size of the Auto Scaling Group.
     */
    minInstanceCount?: pulumi.Input<number>;
    /**
     * A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
     */
    minionTags?: pulumi.Input<pulumi.Input<inputs.AsgProfileMinionTag>[]>;
    /**
     * An optional list of custom network interface configurations to use when creating the host.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.AsgProfileNetworkInterface>[]>;
    /**
     * Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
     */
    prependUserData?: pulumi.Input<boolean>;
    /**
     * The primary public IP address assigned to the host.
     */
    publicIpAddress?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AsgProfileTag>[]>;
    /**
     * Specify taints to attach to the nodes, to repel other nodes with different toleration
     */
    taints?: pulumi.Input<pulumi.Input<inputs.AsgProfileTaint>[]>;
    /**
     * The GUID of the tenant that the host will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Whether or not to use spot instances.
     */
    useSpotInstances?: pulumi.Input<boolean>;
    /**
     * The name of the tenant that the host will be created in.
     */
    userAccount?: pulumi.Input<string>;
    /**
     * Block to specify additional or secondary volume beyond the root device
     */
    volumes?: pulumi.Input<pulumi.Input<inputs.AsgProfileVolume>[]>;
    /**
     * Whether or not to wait until ASG instances to be healthy, after creation.
     */
    waitForCapacity?: pulumi.Input<boolean>;
    /**
     * The availability zone to launch the host in, expressed as a number and starting at 0.
     *
     * @deprecated zone has been deprecated instead use zones
     */
    zone?: pulumi.Input<number>;
    /**
     * The multi availability zone to launch the asg in, expressed as a number and starting at 0 - Automatic 1 - Zone A 2 -
     * Zone B
     */
    zones?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * The set of arguments for constructing a AsgProfile resource.
 */
export interface AsgProfileArgs {
    /**
     * The numeric ID of the container agent pool that this host is added to.
     */
    agentPlatform?: pulumi.Input<number>;
    /**
     * Whether or not to allocate a public IP.
     */
    allocatedPublicIp?: pulumi.Input<boolean>;
    /**
     * Base64 encoded EC2 user data to associated with the host.
     */
    base64UserData?: pulumi.Input<string>;
    /**
     * Whether or not ASG should leverage duplocloud's scale from 0 feature
     */
    canScaleFromZero?: pulumi.Input<boolean>;
    /**
     * The AWS EC2 instance type.
     */
    capacity: pulumi.Input<string>;
    /**
     * The numeric ID of the cloud provider to launch the host in.
     */
    cloud?: pulumi.Input<number>;
    /**
     * Specify the labels to attach to the nodes.
     */
    customNodeLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of metrics to collect for the ASG Specify one or more of the following
     * metrics.`GroupMinSize`,`GroupMaxSize`,`GroupDesiredCapacity`,`GroupInServiceInstances`,`GroupPendingInstances`,`GroupStandbyInstances`,`GroupTerminatingInstances`,`GroupTotalInstances`,`GroupInServiceCapacity`,`GroupPendingCapacity`,`GroupStandbyCapacity`,`GroupTerminatingCapacity`,`GroupTotalCapacity`,`WarmPoolDesiredCapacity`,`WarmPoolWarmedCapacity`,`WarmPoolPendingCapacity`,`WarmPoolTerminatingCapacity`,`WarmPoolTotalCapacity`,`GroupAndWarmPoolDesiredCapacity`,`GroupAndWarmPoolTotalCapacity`.
     */
    enabledMetrics?: pulumi.Input<pulumi.Input<string>[]>;
    encryptDisk?: pulumi.Input<boolean>;
    /**
     * The short name of the host.
     */
    friendlyName: pulumi.Input<string>;
    /**
     * The AMI ID to use.
     */
    imageId: pulumi.Input<string>;
    /**
     * The number of instances that should be running in the group.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * Whether or not to enable cluster autoscaler.
     */
    isClusterAutoscaled?: pulumi.Input<boolean>;
    isEbsOptimized?: pulumi.Input<boolean>;
    isMinion?: pulumi.Input<boolean>;
    /**
     * The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
     * - some operating systems no longer support it)
     */
    keypairType?: pulumi.Input<number>;
    /**
     * The maximum size of the Auto Scaling Group.
     */
    maxInstanceCount?: pulumi.Input<number>;
    /**
     * Maximum price to pay for a spot instance in dollars per unit hour.
     */
    maxSpotPrice?: pulumi.Input<string>;
    /**
     * Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
     * Key and its size as value, size value should be atleast 10*
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.AsgProfileMetadata>[]>;
    /**
     * The minimum size of the Auto Scaling Group.
     */
    minInstanceCount?: pulumi.Input<number>;
    /**
     * A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
     */
    minionTags?: pulumi.Input<pulumi.Input<inputs.AsgProfileMinionTag>[]>;
    /**
     * An optional list of custom network interface configurations to use when creating the host.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.AsgProfileNetworkInterface>[]>;
    /**
     * Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
     */
    prependUserData?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.AsgProfileTag>[]>;
    /**
     * Specify taints to attach to the nodes, to repel other nodes with different toleration
     */
    taints?: pulumi.Input<pulumi.Input<inputs.AsgProfileTaint>[]>;
    /**
     * The GUID of the tenant that the host will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Whether or not to use spot instances.
     */
    useSpotInstances?: pulumi.Input<boolean>;
    /**
     * The name of the tenant that the host will be created in.
     */
    userAccount?: pulumi.Input<string>;
    /**
     * Block to specify additional or secondary volume beyond the root device
     */
    volumes?: pulumi.Input<pulumi.Input<inputs.AsgProfileVolume>[]>;
    /**
     * Whether or not to wait until ASG instances to be healthy, after creation.
     */
    waitForCapacity?: pulumi.Input<boolean>;
    /**
     * The availability zone to launch the host in, expressed as a number and starting at 0.
     *
     * @deprecated zone has been deprecated instead use zones
     */
    zone?: pulumi.Input<number>;
    /**
     * The multi availability zone to launch the asg in, expressed as a number and starting at 0 - Automatic 1 - Zone A 2 -
     * Zone B
     */
    zones?: pulumi.Input<pulumi.Input<number>[]>;
}
