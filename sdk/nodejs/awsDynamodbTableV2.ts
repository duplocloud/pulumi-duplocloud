// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsDynamodbTableV2` manages an AWS dynamodb table in Duplo.
 *
 * ## Import
 *
 * Example: Importing an existing AWS DynamoDb Table
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the name of dynamodb table
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsDynamodbTableV2:AwsDynamodbTableV2 myDynamodbTable *TENANT_ID*&#47;*NAME*
 * ```
 */
export class AwsDynamodbTableV2 extends pulumi.CustomResource {
    /**
     * Get an existing AwsDynamodbTableV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsDynamodbTableV2State, opts?: pulumi.CustomResourceOptions): AwsDynamodbTableV2 {
        return new AwsDynamodbTableV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsDynamodbTableV2:AwsDynamodbTableV2';

    /**
     * Returns true if the given object is an instance of AwsDynamodbTableV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsDynamodbTableV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsDynamodbTableV2.__pulumiType;
    }

    /**
     * The ARN of the dynamodb table.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly attributes!: pulumi.Output<outputs.AwsDynamodbTableV2Attribute[]>;
    /**
     * Controls how you are charged for read and write throughput and how you manage capacity. The valid values are `PROVISIONED` and `PAY_PER_REQUEST`. Defaults to `PROVISIONED`.
     */
    public readonly billingMode!: pulumi.Output<string | undefined>;
    /**
     * Deletion protection keeps the tables from being deleted unintentionally. While this setting is on, you can't delete the table.
     */
    public readonly deletionProtectionEnabled!: pulumi.Output<boolean>;
    /**
     * The name of the table, this needs to be unique within a region.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc.
     */
    public readonly globalSecondaryIndices!: pulumi.Output<outputs.AwsDynamodbTableV2GlobalSecondaryIndex[] | undefined>;
    /**
     * The point in time recovery status of the dynamodb table. Enabled if true.
     */
    public readonly isPointInTimeRecovery!: pulumi.Output<boolean>;
    public readonly keySchemas!: pulumi.Output<outputs.AwsDynamodbTableV2KeySchema[]>;
    public readonly localSecondaryIndices!: pulumi.Output<outputs.AwsDynamodbTableV2LocalSecondaryIndex[] | undefined>;
    /**
     * The name of the table, this needs to be unique within a region.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The number of read units for this table. If the `billingMode` is `PROVISIONED`, this field is required.
     */
    public readonly readCapacity!: pulumi.Output<number | undefined>;
    /**
     * Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS owned Customer Master Key if this argument isn't specified.
     */
    public readonly serverSideEncryption!: pulumi.Output<outputs.AwsDynamodbTableV2ServerSideEncryption>;
    /**
     * The status of the dynamodb table.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly streamArn!: pulumi.Output<string>;
    /**
     * Indicates whether Streams are to be enabled (true) or disabled (false).
     */
    public readonly streamEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly streamLabel!: pulumi.Output<string>;
    /**
     * When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are `KEYS_ONLY`, `NEW_IMAGE`, `OLD_IMAGE`, `NEW_AND_OLD_IMAGES`.
     */
    public readonly streamViewType!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.AwsDynamodbTableV2Tag[]>;
    /**
     * The GUID of the tenant that the dynamodb table will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Setup ttl for dynamodb table. Defaults to `false or empty`, To disable ttl, enabled field should be set to false
     */
    public readonly ttl!: pulumi.Output<outputs.AwsDynamodbTableV2Ttl | undefined>;
    /**
     * Whether or not to wait until dynamodb instance to be ready, after creation. Defaults to `true`.
     */
    public readonly waitUntilReady!: pulumi.Output<boolean | undefined>;
    /**
     * The number of write units for this table. If the `billingMode` is `PROVISIONED`, this field is required.
     */
    public readonly writeCapacity!: pulumi.Output<number | undefined>;

    /**
     * Create a AwsDynamodbTableV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsDynamodbTableV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsDynamodbTableV2Args | AwsDynamodbTableV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsDynamodbTableV2State | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["billingMode"] = state ? state.billingMode : undefined;
            resourceInputs["deletionProtectionEnabled"] = state ? state.deletionProtectionEnabled : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["globalSecondaryIndices"] = state ? state.globalSecondaryIndices : undefined;
            resourceInputs["isPointInTimeRecovery"] = state ? state.isPointInTimeRecovery : undefined;
            resourceInputs["keySchemas"] = state ? state.keySchemas : undefined;
            resourceInputs["localSecondaryIndices"] = state ? state.localSecondaryIndices : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["readCapacity"] = state ? state.readCapacity : undefined;
            resourceInputs["serverSideEncryption"] = state ? state.serverSideEncryption : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["streamArn"] = state ? state.streamArn : undefined;
            resourceInputs["streamEnabled"] = state ? state.streamEnabled : undefined;
            resourceInputs["streamLabel"] = state ? state.streamLabel : undefined;
            resourceInputs["streamViewType"] = state ? state.streamViewType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["waitUntilReady"] = state ? state.waitUntilReady : undefined;
            resourceInputs["writeCapacity"] = state ? state.writeCapacity : undefined;
        } else {
            const args = argsOrState as AwsDynamodbTableV2Args | undefined;
            if ((!args || args.attributes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'attributes'");
            }
            if ((!args || args.keySchemas === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keySchemas'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["billingMode"] = args ? args.billingMode : undefined;
            resourceInputs["deletionProtectionEnabled"] = args ? args.deletionProtectionEnabled : undefined;
            resourceInputs["globalSecondaryIndices"] = args ? args.globalSecondaryIndices : undefined;
            resourceInputs["isPointInTimeRecovery"] = args ? args.isPointInTimeRecovery : undefined;
            resourceInputs["keySchemas"] = args ? args.keySchemas : undefined;
            resourceInputs["localSecondaryIndices"] = args ? args.localSecondaryIndices : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["readCapacity"] = args ? args.readCapacity : undefined;
            resourceInputs["serverSideEncryption"] = args ? args.serverSideEncryption : undefined;
            resourceInputs["streamEnabled"] = args ? args.streamEnabled : undefined;
            resourceInputs["streamViewType"] = args ? args.streamViewType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["waitUntilReady"] = args ? args.waitUntilReady : undefined;
            resourceInputs["writeCapacity"] = args ? args.writeCapacity : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["streamArn"] = undefined /*out*/;
            resourceInputs["streamLabel"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsDynamodbTableV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsDynamodbTableV2 resources.
 */
export interface AwsDynamodbTableV2State {
    /**
     * The ARN of the dynamodb table.
     */
    arn?: pulumi.Input<string>;
    attributes?: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2Attribute>[]>;
    /**
     * Controls how you are charged for read and write throughput and how you manage capacity. The valid values are `PROVISIONED` and `PAY_PER_REQUEST`. Defaults to `PROVISIONED`.
     */
    billingMode?: pulumi.Input<string>;
    /**
     * Deletion protection keeps the tables from being deleted unintentionally. While this setting is on, you can't delete the table.
     */
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the table, this needs to be unique within a region.
     */
    fullname?: pulumi.Input<string>;
    /**
     * Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc.
     */
    globalSecondaryIndices?: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2GlobalSecondaryIndex>[]>;
    /**
     * The point in time recovery status of the dynamodb table. Enabled if true.
     */
    isPointInTimeRecovery?: pulumi.Input<boolean>;
    keySchemas?: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2KeySchema>[]>;
    localSecondaryIndices?: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2LocalSecondaryIndex>[]>;
    /**
     * The name of the table, this needs to be unique within a region.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of read units for this table. If the `billingMode` is `PROVISIONED`, this field is required.
     */
    readCapacity?: pulumi.Input<number>;
    /**
     * Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS owned Customer Master Key if this argument isn't specified.
     */
    serverSideEncryption?: pulumi.Input<inputs.AwsDynamodbTableV2ServerSideEncryption>;
    /**
     * The status of the dynamodb table.
     */
    status?: pulumi.Input<string>;
    streamArn?: pulumi.Input<string>;
    /**
     * Indicates whether Streams are to be enabled (true) or disabled (false).
     */
    streamEnabled?: pulumi.Input<boolean>;
    streamLabel?: pulumi.Input<string>;
    /**
     * When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are `KEYS_ONLY`, `NEW_IMAGE`, `OLD_IMAGE`, `NEW_AND_OLD_IMAGES`.
     */
    streamViewType?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2Tag>[]>;
    /**
     * The GUID of the tenant that the dynamodb table will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Setup ttl for dynamodb table. Defaults to `false or empty`, To disable ttl, enabled field should be set to false
     */
    ttl?: pulumi.Input<inputs.AwsDynamodbTableV2Ttl>;
    /**
     * Whether or not to wait until dynamodb instance to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
    /**
     * The number of write units for this table. If the `billingMode` is `PROVISIONED`, this field is required.
     */
    writeCapacity?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AwsDynamodbTableV2 resource.
 */
export interface AwsDynamodbTableV2Args {
    attributes: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2Attribute>[]>;
    /**
     * Controls how you are charged for read and write throughput and how you manage capacity. The valid values are `PROVISIONED` and `PAY_PER_REQUEST`. Defaults to `PROVISIONED`.
     */
    billingMode?: pulumi.Input<string>;
    /**
     * Deletion protection keeps the tables from being deleted unintentionally. While this setting is on, you can't delete the table.
     */
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc.
     */
    globalSecondaryIndices?: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2GlobalSecondaryIndex>[]>;
    /**
     * The point in time recovery status of the dynamodb table. Enabled if true.
     */
    isPointInTimeRecovery?: pulumi.Input<boolean>;
    keySchemas: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2KeySchema>[]>;
    localSecondaryIndices?: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2LocalSecondaryIndex>[]>;
    /**
     * The name of the table, this needs to be unique within a region.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of read units for this table. If the `billingMode` is `PROVISIONED`, this field is required.
     */
    readCapacity?: pulumi.Input<number>;
    /**
     * Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS owned Customer Master Key if this argument isn't specified.
     */
    serverSideEncryption?: pulumi.Input<inputs.AwsDynamodbTableV2ServerSideEncryption>;
    /**
     * Indicates whether Streams are to be enabled (true) or disabled (false).
     */
    streamEnabled?: pulumi.Input<boolean>;
    /**
     * When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are `KEYS_ONLY`, `NEW_IMAGE`, `OLD_IMAGE`, `NEW_AND_OLD_IMAGES`.
     */
    streamViewType?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AwsDynamodbTableV2Tag>[]>;
    /**
     * The GUID of the tenant that the dynamodb table will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Setup ttl for dynamodb table. Defaults to `false or empty`, To disable ttl, enabled field should be set to false
     */
    ttl?: pulumi.Input<inputs.AwsDynamodbTableV2Ttl>;
    /**
     * Whether or not to wait until dynamodb instance to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
    /**
     * The number of write units for this table. If the `billingMode` is `PROVISIONED`, this field is required.
     */
    writeCapacity?: pulumi.Input<number>;
}
