// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsElasticsearch` manages an AWS ElasticSearch instance in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * // Minimal example
 * const sample = new duplocloud.AwsElasticsearch("sample", {
 *     tenantId: myapp.tenantId,
 *     name: "sample",
 * });
 * // Example with hardened settings
 * const es_doc = new duplocloud.AwsElasticsearch("es-doc", {
 *     tenantId: myapp.tenantId,
 *     name: "es-doc",
 *     enableNodeToNodeEncryption: true,
 *     requireSsl: true,
 *     useLatestTlsCipher: true,
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS ElasticSearch cluster
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORT_NAME* is the short name of the AWS ElasticSearch cluster
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsElasticsearch:AwsElasticsearch mycluster *TENANT_ID*&#47;*SHORT_NAME*
 * ```
 */
export class AwsElasticsearch extends pulumi.CustomResource {
    /**
     * Get an existing AwsElasticsearch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsElasticsearchState, opts?: pulumi.CustomResourceOptions): AwsElasticsearch {
        return new AwsElasticsearch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsElasticsearch:AwsElasticsearch';

    /**
     * Returns true if the given object is an instance of AwsElasticsearch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsElasticsearch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsElasticsearch.__pulumiType;
    }

    public /*out*/ readonly accessPolicies!: pulumi.Output<string>;
    public /*out*/ readonly advancedOptions!: pulumi.Output<{[key: string]: string}>;
    /**
     * The ARN of the ElasticSearch instance.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly clusterConfig!: pulumi.Output<outputs.AwsElasticsearchClusterConfig>;
    /**
     * The domain ID of the ElasticSearch instance.
     */
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    /**
     * The full name of the ElasticSearch instance.
     */
    public /*out*/ readonly domainName!: pulumi.Output<string>;
    public /*out*/ readonly ebsOptions!: pulumi.Output<outputs.AwsElasticsearchEbsOption[]>;
    /**
     * The version of the ElasticSearch instance. Defaults to `7.9`.
     */
    public readonly elasticsearchVersion!: pulumi.Output<string | undefined>;
    /**
     * Whether or not to use the enable node-to-node encryption for this ElasticSearch instance.
     */
    public readonly enableNodeToNodeEncryption!: pulumi.Output<boolean>;
    /**
     * The storage encryption settings for the ElasticSearch instance.
     */
    public readonly encryptAtRest!: pulumi.Output<outputs.AwsElasticsearchEncryptAtRest>;
    /**
     * The endpoints to use when connecting to the ElasticSearch instance.
     */
    public /*out*/ readonly endpoints!: pulumi.Output<{[key: string]: string}>;
    /**
     * The short name of the ElasticSearch instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `domainName` attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Whether or not to require SSL for accessing this ElasticSearch instance.
     */
    public readonly requireSsl!: pulumi.Output<boolean>;
    /**
     * The numerical index of the zone to launch this ElasticSearch instance in.
     */
    public readonly selectedZone!: pulumi.Output<number>;
    public /*out*/ readonly snapshotOptions!: pulumi.Output<outputs.AwsElasticsearchSnapshotOption[]>;
    /**
     * The storage volume size, in GB, for the ElasticSearch instance.
     */
    public readonly storageSize!: pulumi.Output<number | undefined>;
    /**
     * The GUID of the tenant that the ElasticSearch instance will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Whether or not to use the latest TLS cipher for this ElasticSearch instance. For govcloud environments this should be set to true
     */
    public readonly useLatestTlsCipher!: pulumi.Output<boolean>;
    public readonly vpcOptions!: pulumi.Output<outputs.AwsElasticsearchVpcOption[]>;

    /**
     * Create a AwsElasticsearch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsElasticsearchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsElasticsearchArgs | AwsElasticsearchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsElasticsearchState | undefined;
            resourceInputs["accessPolicies"] = state ? state.accessPolicies : undefined;
            resourceInputs["advancedOptions"] = state ? state.advancedOptions : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["clusterConfig"] = state ? state.clusterConfig : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["ebsOptions"] = state ? state.ebsOptions : undefined;
            resourceInputs["elasticsearchVersion"] = state ? state.elasticsearchVersion : undefined;
            resourceInputs["enableNodeToNodeEncryption"] = state ? state.enableNodeToNodeEncryption : undefined;
            resourceInputs["encryptAtRest"] = state ? state.encryptAtRest : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["requireSsl"] = state ? state.requireSsl : undefined;
            resourceInputs["selectedZone"] = state ? state.selectedZone : undefined;
            resourceInputs["snapshotOptions"] = state ? state.snapshotOptions : undefined;
            resourceInputs["storageSize"] = state ? state.storageSize : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["useLatestTlsCipher"] = state ? state.useLatestTlsCipher : undefined;
            resourceInputs["vpcOptions"] = state ? state.vpcOptions : undefined;
        } else {
            const args = argsOrState as AwsElasticsearchArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["clusterConfig"] = args ? args.clusterConfig : undefined;
            resourceInputs["elasticsearchVersion"] = args ? args.elasticsearchVersion : undefined;
            resourceInputs["enableNodeToNodeEncryption"] = args ? args.enableNodeToNodeEncryption : undefined;
            resourceInputs["encryptAtRest"] = args ? args.encryptAtRest : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["requireSsl"] = args ? args.requireSsl : undefined;
            resourceInputs["selectedZone"] = args ? args.selectedZone : undefined;
            resourceInputs["storageSize"] = args ? args.storageSize : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["useLatestTlsCipher"] = args ? args.useLatestTlsCipher : undefined;
            resourceInputs["vpcOptions"] = args ? args.vpcOptions : undefined;
            resourceInputs["accessPolicies"] = undefined /*out*/;
            resourceInputs["advancedOptions"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["ebsOptions"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["snapshotOptions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsElasticsearch.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsElasticsearch resources.
 */
export interface AwsElasticsearchState {
    accessPolicies?: pulumi.Input<string>;
    advancedOptions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ARN of the ElasticSearch instance.
     */
    arn?: pulumi.Input<string>;
    clusterConfig?: pulumi.Input<inputs.AwsElasticsearchClusterConfig>;
    /**
     * The domain ID of the ElasticSearch instance.
     */
    domainId?: pulumi.Input<string>;
    /**
     * The full name of the ElasticSearch instance.
     */
    domainName?: pulumi.Input<string>;
    ebsOptions?: pulumi.Input<pulumi.Input<inputs.AwsElasticsearchEbsOption>[]>;
    /**
     * The version of the ElasticSearch instance. Defaults to `7.9`.
     */
    elasticsearchVersion?: pulumi.Input<string>;
    /**
     * Whether or not to use the enable node-to-node encryption for this ElasticSearch instance.
     */
    enableNodeToNodeEncryption?: pulumi.Input<boolean>;
    /**
     * The storage encryption settings for the ElasticSearch instance.
     */
    encryptAtRest?: pulumi.Input<inputs.AwsElasticsearchEncryptAtRest>;
    /**
     * The endpoints to use when connecting to the ElasticSearch instance.
     */
    endpoints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The short name of the ElasticSearch instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `domainName` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether or not to require SSL for accessing this ElasticSearch instance.
     */
    requireSsl?: pulumi.Input<boolean>;
    /**
     * The numerical index of the zone to launch this ElasticSearch instance in.
     */
    selectedZone?: pulumi.Input<number>;
    snapshotOptions?: pulumi.Input<pulumi.Input<inputs.AwsElasticsearchSnapshotOption>[]>;
    /**
     * The storage volume size, in GB, for the ElasticSearch instance.
     */
    storageSize?: pulumi.Input<number>;
    /**
     * The GUID of the tenant that the ElasticSearch instance will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Whether or not to use the latest TLS cipher for this ElasticSearch instance. For govcloud environments this should be set to true
     */
    useLatestTlsCipher?: pulumi.Input<boolean>;
    vpcOptions?: pulumi.Input<pulumi.Input<inputs.AwsElasticsearchVpcOption>[]>;
}

/**
 * The set of arguments for constructing a AwsElasticsearch resource.
 */
export interface AwsElasticsearchArgs {
    clusterConfig?: pulumi.Input<inputs.AwsElasticsearchClusterConfig>;
    /**
     * The version of the ElasticSearch instance. Defaults to `7.9`.
     */
    elasticsearchVersion?: pulumi.Input<string>;
    /**
     * Whether or not to use the enable node-to-node encryption for this ElasticSearch instance.
     */
    enableNodeToNodeEncryption?: pulumi.Input<boolean>;
    /**
     * The storage encryption settings for the ElasticSearch instance.
     */
    encryptAtRest?: pulumi.Input<inputs.AwsElasticsearchEncryptAtRest>;
    /**
     * The short name of the ElasticSearch instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `domainName` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether or not to require SSL for accessing this ElasticSearch instance.
     */
    requireSsl?: pulumi.Input<boolean>;
    /**
     * The numerical index of the zone to launch this ElasticSearch instance in.
     */
    selectedZone?: pulumi.Input<number>;
    /**
     * The storage volume size, in GB, for the ElasticSearch instance.
     */
    storageSize?: pulumi.Input<number>;
    /**
     * The GUID of the tenant that the ElasticSearch instance will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Whether or not to use the latest TLS cipher for this ElasticSearch instance. For govcloud environments this should be set to true
     */
    useLatestTlsCipher?: pulumi.Input<boolean>;
    vpcOptions?: pulumi.Input<pulumi.Input<inputs.AwsElasticsearchVpcOption>[]>;
}
