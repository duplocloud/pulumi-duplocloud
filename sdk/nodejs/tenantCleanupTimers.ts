// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manage tenant expiry in DuploCloud
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import duplocloud:index/tenantCleanupTimers:TenantCleanupTimers mytimers *TENANT_ID*
 * ```
 */
export class TenantCleanupTimers extends pulumi.CustomResource {
    /**
     * Get an existing TenantCleanupTimers resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TenantCleanupTimersState, opts?: pulumi.CustomResourceOptions): TenantCleanupTimers {
        return new TenantCleanupTimers(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/tenantCleanupTimers:TenantCleanupTimers';

    /**
     * Returns true if the given object is an instance of TenantCleanupTimers.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TenantCleanupTimers {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TenantCleanupTimers.__pulumiType;
    }

    /**
     * The expiry time of the tenant, in UTC with the format YYYY-MM-DDTHH:MM:SSZ (e.g. `2021-06-01T00:00:00Z`)
     */
    public readonly expiryTime!: pulumi.Output<string | undefined>;
    /**
     * The time to pause the tenant, in UTC with the format YYYY-MM-DDTHH:MM:SSZ (e.g. `2021-06-01T00:00:00Z`)
     */
    public readonly pauseTime!: pulumi.Output<string | undefined>;
    /**
     * Whether to remove the expiry time.
     */
    public readonly removeExpiryTime!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to remove the pause time.
     */
    public readonly removePauseTime!: pulumi.Output<boolean | undefined>;
    /**
     * The GUID of the tenant that the expiry will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a TenantCleanupTimers resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TenantCleanupTimersArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TenantCleanupTimersArgs | TenantCleanupTimersState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TenantCleanupTimersState | undefined;
            resourceInputs["expiryTime"] = state ? state.expiryTime : undefined;
            resourceInputs["pauseTime"] = state ? state.pauseTime : undefined;
            resourceInputs["removeExpiryTime"] = state ? state.removeExpiryTime : undefined;
            resourceInputs["removePauseTime"] = state ? state.removePauseTime : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as TenantCleanupTimersArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["expiryTime"] = args ? args.expiryTime : undefined;
            resourceInputs["pauseTime"] = args ? args.pauseTime : undefined;
            resourceInputs["removeExpiryTime"] = args ? args.removeExpiryTime : undefined;
            resourceInputs["removePauseTime"] = args ? args.removePauseTime : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TenantCleanupTimers.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TenantCleanupTimers resources.
 */
export interface TenantCleanupTimersState {
    /**
     * The expiry time of the tenant, in UTC with the format YYYY-MM-DDTHH:MM:SSZ (e.g. `2021-06-01T00:00:00Z`)
     */
    expiryTime?: pulumi.Input<string>;
    /**
     * The time to pause the tenant, in UTC with the format YYYY-MM-DDTHH:MM:SSZ (e.g. `2021-06-01T00:00:00Z`)
     */
    pauseTime?: pulumi.Input<string>;
    /**
     * Whether to remove the expiry time.
     */
    removeExpiryTime?: pulumi.Input<boolean>;
    /**
     * Whether to remove the pause time.
     */
    removePauseTime?: pulumi.Input<boolean>;
    /**
     * The GUID of the tenant that the expiry will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TenantCleanupTimers resource.
 */
export interface TenantCleanupTimersArgs {
    /**
     * The expiry time of the tenant, in UTC with the format YYYY-MM-DDTHH:MM:SSZ (e.g. `2021-06-01T00:00:00Z`)
     */
    expiryTime?: pulumi.Input<string>;
    /**
     * The time to pause the tenant, in UTC with the format YYYY-MM-DDTHH:MM:SSZ (e.g. `2021-06-01T00:00:00Z`)
     */
    pauseTime?: pulumi.Input<string>;
    /**
     * Whether to remove the expiry time.
     */
    removeExpiryTime?: pulumi.Input<boolean>;
    /**
     * Whether to remove the pause time.
     */
    removePauseTime?: pulumi.Input<boolean>;
    /**
     * The GUID of the tenant that the expiry will be created in.
     */
    tenantId: pulumi.Input<string>;
}
