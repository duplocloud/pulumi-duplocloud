// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * duplocloud_aws_launch_template creates the new version over current launch template version
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const lt = new duplocloud.AwsLaunchTemplate("lt", {
 *     tenantId: myapp.tenantId,
 *     name: "launch-template-name",
 *     instanceType: "t3a.medium",
 *     version: "1",
 *     versionDescription: "launch template description",
 *     ami: "ami-123test",
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS launch template
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the name of the AWS launch template
 *
 *  - *VERSION* available version of launch template
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsLaunchTemplate:AwsLaunchTemplate lt *TENANT_ID*&#47;launch-template/*NAME*&#47;*VERSION*
 * ```
 */
export class AwsLaunchTemplate extends pulumi.CustomResource {
    /**
     * Get an existing AwsLaunchTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsLaunchTemplateState, opts?: pulumi.CustomResourceOptions): AwsLaunchTemplate {
        return new AwsLaunchTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsLaunchTemplate:AwsLaunchTemplate';

    /**
     * Returns true if the given object is an instance of AwsLaunchTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsLaunchTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsLaunchTemplate.__pulumiType;
    }

    /**
     * Asg ami to be used to update the version from the current version
     */
    public readonly ami!: pulumi.Output<string | undefined>;
    /**
     * The current default version of the launch template.
     */
    public /*out*/ readonly defaultVersion!: pulumi.Output<string>;
    /**
     * Asg instance type to be used to update the version from the current version
     */
    public readonly instanceType!: pulumi.Output<string | undefined>;
    /**
     * The latest launch template version
     */
    public /*out*/ readonly latestVersion!: pulumi.Output<string>;
    /**
     * The fullname of the asg group
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the launch template will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Any of the existing version of the launch template
     */
    public readonly version!: pulumi.Output<string>;
    /**
     * The version of the launch template
     */
    public readonly versionDescription!: pulumi.Output<string>;
    public /*out*/ readonly versionMetadata!: pulumi.Output<string>;

    /**
     * Create a AwsLaunchTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsLaunchTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsLaunchTemplateArgs | AwsLaunchTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsLaunchTemplateState | undefined;
            resourceInputs["ami"] = state ? state.ami : undefined;
            resourceInputs["defaultVersion"] = state ? state.defaultVersion : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["latestVersion"] = state ? state.latestVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["versionDescription"] = state ? state.versionDescription : undefined;
            resourceInputs["versionMetadata"] = state ? state.versionMetadata : undefined;
        } else {
            const args = argsOrState as AwsLaunchTemplateArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            if ((!args || args.versionDescription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versionDescription'");
            }
            resourceInputs["ami"] = args ? args.ami : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["versionDescription"] = args ? args.versionDescription : undefined;
            resourceInputs["defaultVersion"] = undefined /*out*/;
            resourceInputs["latestVersion"] = undefined /*out*/;
            resourceInputs["versionMetadata"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsLaunchTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsLaunchTemplate resources.
 */
export interface AwsLaunchTemplateState {
    /**
     * Asg ami to be used to update the version from the current version
     */
    ami?: pulumi.Input<string>;
    /**
     * The current default version of the launch template.
     */
    defaultVersion?: pulumi.Input<string>;
    /**
     * Asg instance type to be used to update the version from the current version
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The latest launch template version
     */
    latestVersion?: pulumi.Input<string>;
    /**
     * The fullname of the asg group
     */
    name?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the launch template will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Any of the existing version of the launch template
     */
    version?: pulumi.Input<string>;
    /**
     * The version of the launch template
     */
    versionDescription?: pulumi.Input<string>;
    versionMetadata?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsLaunchTemplate resource.
 */
export interface AwsLaunchTemplateArgs {
    /**
     * Asg ami to be used to update the version from the current version
     */
    ami?: pulumi.Input<string>;
    /**
     * Asg instance type to be used to update the version from the current version
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The fullname of the asg group
     */
    name?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the launch template will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Any of the existing version of the launch template
     */
    version: pulumi.Input<string>;
    /**
     * The version of the launch template
     */
    versionDescription: pulumi.Input<string>;
}
