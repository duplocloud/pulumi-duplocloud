// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsCloudwatchMetricAlarm` manages an AWS cloudwatch metric alarm in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const duplo_app = new duplocloud.Tenant("duplo-app", {
 *     accountName: "duplo-app",
 *     planId: "default",
 * });
 * const mAlarm = new duplocloud.AwsCloudwatchMetricAlarm("mAlarm", {
 *     tenantId: duplo_app.tenantId,
 *     metricName: "CPUUtilization",
 *     comparisonOperator: "GreaterThanOrEqualToThreshold",
 *     evaluationPeriods: 1,
 *     namespace: "AWS/EC2",
 *     period: 300,
 *     threshold: 80,
 *     statistic: "Average",
 *     dimensions: [{
 *         key: "InstanceId",
 *         value: "i-1234567abcdefghj",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing cloudwatch metric alarm
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *FRIENDLY_NAME* is the hypen separated alarm dimension values and metric name
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsCloudwatchMetricAlarm:AwsCloudwatchMetricAlarm myMetricAlarm *TENANT_ID*&#47;*FRIENDLY_NAME*
 * ```
 */
export class AwsCloudwatchMetricAlarm extends pulumi.CustomResource {
    /**
     * Get an existing AwsCloudwatchMetricAlarm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsCloudwatchMetricAlarmState, opts?: pulumi.CustomResourceOptions): AwsCloudwatchMetricAlarm {
        return new AwsCloudwatchMetricAlarm(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsCloudwatchMetricAlarm:AwsCloudwatchMetricAlarm';

    /**
     * Returns true if the given object is an instance of AwsCloudwatchMetricAlarm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsCloudwatchMetricAlarm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsCloudwatchMetricAlarm.__pulumiType;
    }

    /**
     * The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanThreshold`, `LessThanOrEqualToThreshold`
     */
    public readonly comparisonOperator!: pulumi.Output<string>;
    /**
     * The dimensions for the alarm's associated metric. For the list of available dimensions see the AWS documentation.
     */
    public readonly dimensions!: pulumi.Output<outputs.AwsCloudwatchMetricAlarmDimension[] | undefined>;
    /**
     * The number of periods over which data is compared to the specified threshold.
     */
    public readonly evaluationPeriods!: pulumi.Output<number>;
    /**
     * Duplo will generate name of the metric alarm.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * The name for the alarm's associated metric.
     */
    public readonly metricName!: pulumi.Output<string>;
    /**
     * The namespace for the alarm's associated metric.
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * The period in seconds over which the specified `statistic` is applied.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * The statistic to apply to the alarm's associated metric. Either of the following is supported: `SampleCount`, `Average`, `Sum`, `Minimum`, `Maximum`
     */
    public readonly statistic!: pulumi.Output<string | undefined>;
    /**
     * The GUID of the tenant that the cloudwatch metric alarm will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * The value against which the specified statistic is compared. This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.
     */
    public readonly threshold!: pulumi.Output<number | undefined>;

    /**
     * Create a AwsCloudwatchMetricAlarm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsCloudwatchMetricAlarmArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsCloudwatchMetricAlarmArgs | AwsCloudwatchMetricAlarmState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsCloudwatchMetricAlarmState | undefined;
            resourceInputs["comparisonOperator"] = state ? state.comparisonOperator : undefined;
            resourceInputs["dimensions"] = state ? state.dimensions : undefined;
            resourceInputs["evaluationPeriods"] = state ? state.evaluationPeriods : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["metricName"] = state ? state.metricName : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["statistic"] = state ? state.statistic : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["threshold"] = state ? state.threshold : undefined;
        } else {
            const args = argsOrState as AwsCloudwatchMetricAlarmArgs | undefined;
            if ((!args || args.comparisonOperator === undefined) && !opts.urn) {
                throw new Error("Missing required property 'comparisonOperator'");
            }
            if ((!args || args.evaluationPeriods === undefined) && !opts.urn) {
                throw new Error("Missing required property 'evaluationPeriods'");
            }
            if ((!args || args.metricName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metricName'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["comparisonOperator"] = args ? args.comparisonOperator : undefined;
            resourceInputs["dimensions"] = args ? args.dimensions : undefined;
            resourceInputs["evaluationPeriods"] = args ? args.evaluationPeriods : undefined;
            resourceInputs["metricName"] = args ? args.metricName : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["statistic"] = args ? args.statistic : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["fullname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsCloudwatchMetricAlarm.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsCloudwatchMetricAlarm resources.
 */
export interface AwsCloudwatchMetricAlarmState {
    /**
     * The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanThreshold`, `LessThanOrEqualToThreshold`
     */
    comparisonOperator?: pulumi.Input<string>;
    /**
     * The dimensions for the alarm's associated metric. For the list of available dimensions see the AWS documentation.
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.AwsCloudwatchMetricAlarmDimension>[]>;
    /**
     * The number of periods over which data is compared to the specified threshold.
     */
    evaluationPeriods?: pulumi.Input<number>;
    /**
     * Duplo will generate name of the metric alarm.
     */
    fullname?: pulumi.Input<string>;
    /**
     * The name for the alarm's associated metric.
     */
    metricName?: pulumi.Input<string>;
    /**
     * The namespace for the alarm's associated metric.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The period in seconds over which the specified `statistic` is applied.
     */
    period?: pulumi.Input<number>;
    /**
     * The statistic to apply to the alarm's associated metric. Either of the following is supported: `SampleCount`, `Average`, `Sum`, `Minimum`, `Maximum`
     */
    statistic?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the cloudwatch metric alarm will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The value against which the specified statistic is compared. This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.
     */
    threshold?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AwsCloudwatchMetricAlarm resource.
 */
export interface AwsCloudwatchMetricAlarmArgs {
    /**
     * The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanThreshold`, `LessThanOrEqualToThreshold`
     */
    comparisonOperator: pulumi.Input<string>;
    /**
     * The dimensions for the alarm's associated metric. For the list of available dimensions see the AWS documentation.
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.AwsCloudwatchMetricAlarmDimension>[]>;
    /**
     * The number of periods over which data is compared to the specified threshold.
     */
    evaluationPeriods: pulumi.Input<number>;
    /**
     * The name for the alarm's associated metric.
     */
    metricName: pulumi.Input<string>;
    /**
     * The namespace for the alarm's associated metric.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The period in seconds over which the specified `statistic` is applied.
     */
    period?: pulumi.Input<number>;
    /**
     * The statistic to apply to the alarm's associated metric. Either of the following is supported: `SampleCount`, `Average`, `Sum`, `Minimum`, `Maximum`
     */
    statistic?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the cloudwatch metric alarm will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * The value against which the specified statistic is compared. This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.
     */
    threshold?: pulumi.Input<number>;
}
