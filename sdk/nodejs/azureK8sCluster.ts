// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AzureK8sCluster` manages an azure kubernetes cluster in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const infra = new duplocloud.Infrastructure("infra", {
 *     infraName: "tst-0206",
 *     accountId: "143ffc59-9394-4ec6-8f5a-c408a238be62",
 *     cloud: 2,
 *     azcount: 2,
 *     region: "West US 2",
 *     enableK8Cluster: false,
 *     addressPrefix: "10.50.0.0/16",
 *     subnetCidr: 0,
 *     subnetName: "sub01",
 *     subnetAddressPrefix: "10.50.1.0/24",
 * });
 * const cluster = new duplocloud.AzureK8sCluster("cluster", {infraName: infra.infraName});
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing Azure K8S Cluster
 *
 *  - *INFRA_NAME* is the infrastructure name
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/azureK8sCluster:AzureK8sCluster cluster v2/admin/InfrastructureV2/*INFRA_NAME*
 * ```
 */
export class AzureK8sCluster extends pulumi.CustomResource {
    /**
     * Get an existing AzureK8sCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureK8sClusterState, opts?: pulumi.CustomResourceOptions): AzureK8sCluster {
        return new AzureK8sCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/azureK8sCluster:AzureK8sCluster';

    /**
     * Returns true if the given object is an instance of AzureK8sCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureK8sCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureK8sCluster.__pulumiType;
    }

    /**
     * The name of the infrastructure.
     */
    public readonly infraName!: pulumi.Output<string>;
    /**
     * Version of Kubernetes specified when creating the AKS managed cluster.
     */
    public readonly kubernetesVersion!: pulumi.Output<string>;
    /**
     * The name of the aks. If not specified default name would be infra name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network plugin to use for networking. Valid values are: `azure` and `kubenet`.
     */
    public readonly networkPlugin!: pulumi.Output<string>;
    /**
     * The outbound (egress) routing method which should be used for this Kubernetes Cluster. Valid values are: `loadBalancer` and `userDefinedRouting`.
     */
    public readonly outboundType!: pulumi.Output<string>;
    /**
     * Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`.
     */
    public readonly privateClusterEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the aks resource group.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The size of the Virtual Machine.
     */
    public readonly vmSize!: pulumi.Output<string>;

    /**
     * Create a AzureK8sCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureK8sClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureK8sClusterArgs | AzureK8sClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureK8sClusterState | undefined;
            resourceInputs["infraName"] = state ? state.infraName : undefined;
            resourceInputs["kubernetesVersion"] = state ? state.kubernetesVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkPlugin"] = state ? state.networkPlugin : undefined;
            resourceInputs["outboundType"] = state ? state.outboundType : undefined;
            resourceInputs["privateClusterEnabled"] = state ? state.privateClusterEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["vmSize"] = state ? state.vmSize : undefined;
        } else {
            const args = argsOrState as AzureK8sClusterArgs | undefined;
            if ((!args || args.infraName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'infraName'");
            }
            resourceInputs["infraName"] = args ? args.infraName : undefined;
            resourceInputs["kubernetesVersion"] = args ? args.kubernetesVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkPlugin"] = args ? args.networkPlugin : undefined;
            resourceInputs["outboundType"] = args ? args.outboundType : undefined;
            resourceInputs["privateClusterEnabled"] = args ? args.privateClusterEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["vmSize"] = args ? args.vmSize : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureK8sCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureK8sCluster resources.
 */
export interface AzureK8sClusterState {
    /**
     * The name of the infrastructure.
     */
    infraName?: pulumi.Input<string>;
    /**
     * Version of Kubernetes specified when creating the AKS managed cluster.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * The name of the aks. If not specified default name would be infra name
     */
    name?: pulumi.Input<string>;
    /**
     * Network plugin to use for networking. Valid values are: `azure` and `kubenet`.
     */
    networkPlugin?: pulumi.Input<string>;
    /**
     * The outbound (egress) routing method which should be used for this Kubernetes Cluster. Valid values are: `loadBalancer` and `userDefinedRouting`.
     */
    outboundType?: pulumi.Input<string>;
    /**
     * Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`.
     */
    privateClusterEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the aks resource group.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The size of the Virtual Machine.
     */
    vmSize?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureK8sCluster resource.
 */
export interface AzureK8sClusterArgs {
    /**
     * The name of the infrastructure.
     */
    infraName: pulumi.Input<string>;
    /**
     * Version of Kubernetes specified when creating the AKS managed cluster.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * The name of the aks. If not specified default name would be infra name
     */
    name?: pulumi.Input<string>;
    /**
     * Network plugin to use for networking. Valid values are: `azure` and `kubenet`.
     */
    networkPlugin?: pulumi.Input<string>;
    /**
     * The outbound (egress) routing method which should be used for this Kubernetes Cluster. Valid values are: `loadBalancer` and `userDefinedRouting`.
     */
    outboundType?: pulumi.Input<string>;
    /**
     * Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`.
     */
    privateClusterEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the aks resource group.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The size of the Virtual Machine.
     */
    vmSize?: pulumi.Input<string>;
}
