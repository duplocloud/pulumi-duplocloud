// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsBatchJobDefinition` manages an aws batch Job Definition in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const tenantId = "d186700c-ad18-4525-9593-aad467c843ff";
 * const jd = new duplocloud.AwsBatchJobDefinition("jd", {
 *     tenantId: tenantId,
 *     name: "tf_test_batch_job_definition",
 *     type: "container",
 *     platformCapabilities: ["EC2"],
 *     retryStrategy: {
 *         attempts: 2,
 *         evaluateOnExits: [{
 *             action: "EXIT",
 *             onExitCode: "1*",
 *             onReason: "reason*",
 *             onStatusReason: "status",
 *         }],
 *     },
 *     timeout: {
 *         attemptDurationSeconds: 60,
 *     },
 *     containerProperties: `  {
 *         "Command": [
 *             "sleep",
 *             "5"
 *         ],
 *         "Image": "amazonlinux",
 *         "ResourceRequirements": [
 *             {
 *                 "Type": { "Value": "MEMORY" },
 *                 "Value": "2048"
 *             },
 *             {
 *                 "Type":  { "Value": "VCPU" },
 *                 "Value": "1"
 *             },
 *             {
 *                 "Type":  { "Value": "GPU" },
 *                 "Value": "2"
 *             }
 *         ]
 *   }
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS Batch Job Definition
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the short name of Job Definition
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsBatchJobDefinition:AwsBatchJobDefinition jd *TENANT_ID*&#47;*NAME*
 * ```
 */
export class AwsBatchJobDefinition extends pulumi.CustomResource {
    /**
     * Get an existing AwsBatchJobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsBatchJobDefinitionState, opts?: pulumi.CustomResourceOptions): AwsBatchJobDefinition {
        return new AwsBatchJobDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsBatchJobDefinition:AwsBatchJobDefinition';

    /**
     * Returns true if the given object is an instance of AwsBatchJobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsBatchJobDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsBatchJobDefinition.__pulumiType;
    }

    /**
     * The Amazon Resource Name of the Job Definition.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * A valid container properties provided as a single valid JSON document. This parameter is required if the type parameter is `container`.
     */
    public readonly containerProperties!: pulumi.Output<string>;
    /**
     * The full name of the Job Definition.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * Specifies the name of the Job Definition.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the parameter substitution placeholders to set in the job definition.
     */
    public readonly parameters!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The platform capabilities required by the job definition. If no value is specified, it defaults to `EC2`. To run the job on Fargate resources, specify `FARGATE`.
     */
    public readonly platformCapabilities!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of `retryStrategy` is `1`.
     */
    public readonly retryStrategy!: pulumi.Output<outputs.AwsBatchJobDefinitionRetryStrategy | undefined>;
    /**
     * The revision of the job definition.
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * The status of the Job Definition.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Key-value map of resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The GUID of the tenant that the aws batch Job Definition will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`.
     */
    public readonly timeout!: pulumi.Output<outputs.AwsBatchJobDefinitionTimeout | undefined>;
    /**
     * The `type` of job definition. Must be `container`.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a AwsBatchJobDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsBatchJobDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsBatchJobDefinitionArgs | AwsBatchJobDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsBatchJobDefinitionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["containerProperties"] = state ? state.containerProperties : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["platformCapabilities"] = state ? state.platformCapabilities : undefined;
            resourceInputs["retryStrategy"] = state ? state.retryStrategy : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as AwsBatchJobDefinitionArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["containerProperties"] = args ? args.containerProperties : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["platformCapabilities"] = args ? args.platformCapabilities : undefined;
            resourceInputs["retryStrategy"] = args ? args.retryStrategy : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsBatchJobDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsBatchJobDefinition resources.
 */
export interface AwsBatchJobDefinitionState {
    /**
     * The Amazon Resource Name of the Job Definition.
     */
    arn?: pulumi.Input<string>;
    /**
     * A valid container properties provided as a single valid JSON document. This parameter is required if the type parameter is `container`.
     */
    containerProperties?: pulumi.Input<string>;
    /**
     * The full name of the Job Definition.
     */
    fullname?: pulumi.Input<string>;
    /**
     * Specifies the name of the Job Definition.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the parameter substitution placeholders to set in the job definition.
     */
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The platform capabilities required by the job definition. If no value is specified, it defaults to `EC2`. To run the job on Fargate resources, specify `FARGATE`.
     */
    platformCapabilities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of `retryStrategy` is `1`.
     */
    retryStrategy?: pulumi.Input<inputs.AwsBatchJobDefinitionRetryStrategy>;
    /**
     * The revision of the job definition.
     */
    revision?: pulumi.Input<number>;
    /**
     * The status of the Job Definition.
     */
    status?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the aws batch Job Definition will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`.
     */
    timeout?: pulumi.Input<inputs.AwsBatchJobDefinitionTimeout>;
    /**
     * The `type` of job definition. Must be `container`.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsBatchJobDefinition resource.
 */
export interface AwsBatchJobDefinitionArgs {
    /**
     * A valid container properties provided as a single valid JSON document. This parameter is required if the type parameter is `container`.
     */
    containerProperties?: pulumi.Input<string>;
    /**
     * Specifies the name of the Job Definition.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the parameter substitution placeholders to set in the job definition.
     */
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The platform capabilities required by the job definition. If no value is specified, it defaults to `EC2`. To run the job on Fargate resources, specify `FARGATE`.
     */
    platformCapabilities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of `retryStrategy` is `1`.
     */
    retryStrategy?: pulumi.Input<inputs.AwsBatchJobDefinitionRetryStrategy>;
    /**
     * Key-value map of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the aws batch Job Definition will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`.
     */
    timeout?: pulumi.Input<inputs.AwsBatchJobDefinitionTimeout>;
    /**
     * The `type` of job definition. Must be `container`.
     */
    type: pulumi.Input<string>;
}
