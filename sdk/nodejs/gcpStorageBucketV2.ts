// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * Example: Importing an existing S3 bucket
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORTNAME* is the short name of the S3 bucket (without the duploservices prefix)
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/gcpStorageBucketV2:GcpStorageBucketV2 mybucket *TENANT_ID*&#47;*SHORTNAME*
 * ```
 */
export class GcpStorageBucketV2 extends pulumi.CustomResource {
    /**
     * Get an existing GcpStorageBucketV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpStorageBucketV2State, opts?: pulumi.CustomResourceOptions): GcpStorageBucketV2 {
        return new GcpStorageBucketV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/gcpStorageBucketV2:GcpStorageBucketV2';

    /**
     * Returns true if the given object is an instance of GcpStorageBucketV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpStorageBucketV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpStorageBucketV2.__pulumiType;
    }

    /**
     * Whether or not to remove the public access block from the bucket.
     */
    public readonly allowPublicAccess!: pulumi.Output<boolean>;
    /**
     * Default encryption settings for objects uploaded to the bucket.
     */
    public readonly defaultEncryption!: pulumi.Output<outputs.GcpStorageBucketV2DefaultEncryption>;
    /**
     * Bucket self link.
     */
    public /*out*/ readonly domainName!: pulumi.Output<string>;
    /**
     * Whether or not to enable versioning.
     */
    public readonly enableVersioning!: pulumi.Output<boolean>;
    /**
     * The full name of the storage bucket.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * The labels assigned to this storage bucket.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The location is to set region/multi region, applicable for gcp cloud.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The short name of the storage bucket.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the storage bucket will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a GcpStorageBucketV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpStorageBucketV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpStorageBucketV2Args | GcpStorageBucketV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpStorageBucketV2State | undefined;
            resourceInputs["allowPublicAccess"] = state ? state.allowPublicAccess : undefined;
            resourceInputs["defaultEncryption"] = state ? state.defaultEncryption : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["enableVersioning"] = state ? state.enableVersioning : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as GcpStorageBucketV2Args | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["allowPublicAccess"] = args ? args.allowPublicAccess : undefined;
            resourceInputs["defaultEncryption"] = args ? args.defaultEncryption : undefined;
            resourceInputs["enableVersioning"] = args ? args.enableVersioning : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpStorageBucketV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GcpStorageBucketV2 resources.
 */
export interface GcpStorageBucketV2State {
    /**
     * Whether or not to remove the public access block from the bucket.
     */
    allowPublicAccess?: pulumi.Input<boolean>;
    /**
     * Default encryption settings for objects uploaded to the bucket.
     */
    defaultEncryption?: pulumi.Input<inputs.GcpStorageBucketV2DefaultEncryption>;
    /**
     * Bucket self link.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Whether or not to enable versioning.
     */
    enableVersioning?: pulumi.Input<boolean>;
    /**
     * The full name of the storage bucket.
     */
    fullname?: pulumi.Input<string>;
    /**
     * The labels assigned to this storage bucket.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location is to set region/multi region, applicable for gcp cloud.
     */
    location?: pulumi.Input<string>;
    /**
     * The short name of the storage bucket.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the storage bucket will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GcpStorageBucketV2 resource.
 */
export interface GcpStorageBucketV2Args {
    /**
     * Whether or not to remove the public access block from the bucket.
     */
    allowPublicAccess?: pulumi.Input<boolean>;
    /**
     * Default encryption settings for objects uploaded to the bucket.
     */
    defaultEncryption?: pulumi.Input<inputs.GcpStorageBucketV2DefaultEncryption>;
    /**
     * Whether or not to enable versioning.
     */
    enableVersioning?: pulumi.Input<boolean>;
    /**
     * The labels assigned to this storage bucket.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location is to set region/multi region, applicable for gcp cloud.
     */
    location?: pulumi.Input<string>;
    /**
     * The short name of the storage bucket.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the storage bucket will be created in.
     */
    tenantId: pulumi.Input<string>;
}
