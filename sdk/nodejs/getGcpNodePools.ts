// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.getGcpNodePools` retrieves list of node pools in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const app = duplocloud.getGcpNodePools({
 *     tenantId: "tenantid",
 * });
 * export const nodepoolOutput = {
 *     nodePools: app.then(app => app.nodePools),
 * };
 * ```
 */
export function getGcpNodePools(args: GetGcpNodePoolsArgs, opts?: pulumi.InvokeOptions): Promise<GetGcpNodePoolsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("duplocloud:index/getGcpNodePools:getGcpNodePools", {
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGcpNodePools.
 */
export interface GetGcpNodePoolsArgs {
    /**
     * The GUID of the tenant that the node pool will be associated with.
     */
    tenantId: string;
}

/**
 * A collection of values returned by getGcpNodePools.
 */
export interface GetGcpNodePoolsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nodePools: outputs.GetGcpNodePoolsNodePool[];
    /**
     * The GUID of the tenant that the node pool will be associated with.
     */
    readonly tenantId: string;
}
/**
 * `duplocloud.getGcpNodePools` retrieves list of node pools in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const app = duplocloud.getGcpNodePools({
 *     tenantId: "tenantid",
 * });
 * export const nodepoolOutput = {
 *     nodePools: app.then(app => app.nodePools),
 * };
 * ```
 */
export function getGcpNodePoolsOutput(args: GetGcpNodePoolsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGcpNodePoolsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("duplocloud:index/getGcpNodePools:getGcpNodePools", {
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGcpNodePools.
 */
export interface GetGcpNodePoolsOutputArgs {
    /**
     * The GUID of the tenant that the node pool will be associated with.
     */
    tenantId: pulumi.Input<string>;
}
