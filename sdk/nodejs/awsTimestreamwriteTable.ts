// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsTimestreamwriteTable` manages an aws Timestream Table resource in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const tenantId = "2a80c75d-9f58-4572-83b7-157b05bce259";
 * const kmsKey = duplocloud.getTenantAwsKmsKey({
 *     tenantId: tenantId,
 * });
 * const timestreamwriteDatabase = new duplocloud.AwsTimestreamwriteDatabase("timestreamwrite_database", {
 *     tenantId: tenantId,
 *     name: "test",
 *     kmsKeyId: kmsKey.then(kmsKey => kmsKey.keyArn),
 * });
 * const timestreamwriteDatabaseTbl = new duplocloud.AwsTimestreamwriteTable("timestreamwrite_database_tbl", {
 *     tenantId: tenantId,
 *     databaseName: timestreamwriteDatabase.fullname,
 *     name: "example",
 *     retentionProperties: {
 *         magneticStoreRetentionPeriodInDays: 30,
 *         memoryStoreRetentionPeriodInHours: 8,
 *     },
 *     magneticStoreWriteProperties: {
 *         enableMagneticStoreWrites: true,
 *         magneticStoreRejectedDataLocation: {
 *             s3Configuration: {
 *                 bucketName: "test",
 *                 encryptionOption: "SSE_KMS",
 *                 kmsKeyId: kmsKey.then(kmsKey => kmsKey.keyArn),
 *             },
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS Timestream Table
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the short name of Timestream Table
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsTimestreamwriteTable:AwsTimestreamwriteTable timestreamwrite_table *TENANT_ID*&#47;*NAME*
 * ```
 */
export class AwsTimestreamwriteTable extends pulumi.CustomResource {
    /**
     * Get an existing AwsTimestreamwriteTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsTimestreamwriteTableState, opts?: pulumi.CustomResourceOptions): AwsTimestreamwriteTable {
        return new AwsTimestreamwriteTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsTimestreamwriteTable:AwsTimestreamwriteTable';

    /**
     * Returns true if the given object is an instance of AwsTimestreamwriteTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsTimestreamwriteTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsTimestreamwriteTable.__pulumiType;
    }

    /**
     * A complete list of tags for this time stream database, even ones not being managed by this resource.
     */
    public /*out*/ readonly allTags!: pulumi.Output<outputs.AwsTimestreamwriteTableAllTag[]>;
    /**
     * The ARN that uniquely identifies this Table.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The full name of the Timestream database.
     */
    public readonly databaseName!: pulumi.Output<string>;
    /**
     * Contains properties to set on the table when enabling magnetic store writes.
     */
    public readonly magneticStoreWriteProperties!: pulumi.Output<outputs.AwsTimestreamwriteTableMagneticStoreWriteProperties>;
    /**
     * The short name of the Timestream Table.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The retention duration for the memory store and magnetic store.
     */
    public readonly retentionProperties!: pulumi.Output<outputs.AwsTimestreamwriteTableRetentionProperties>;
    /**
     * A list of tags being managed by this resource.
     */
    public /*out*/ readonly specifiedTags!: pulumi.Output<string[]>;
    /**
     * Tags in key-value format.
     */
    public readonly tags!: pulumi.Output<outputs.AwsTimestreamwriteTableTag[] | undefined>;
    /**
     * The GUID of the tenant that the Timestream Table will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Defaults to `true`.
     */
    public readonly waitForDeployment!: pulumi.Output<boolean | undefined>;

    /**
     * Create a AwsTimestreamwriteTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsTimestreamwriteTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsTimestreamwriteTableArgs | AwsTimestreamwriteTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsTimestreamwriteTableState | undefined;
            resourceInputs["allTags"] = state ? state.allTags : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["magneticStoreWriteProperties"] = state ? state.magneticStoreWriteProperties : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["retentionProperties"] = state ? state.retentionProperties : undefined;
            resourceInputs["specifiedTags"] = state ? state.specifiedTags : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["waitForDeployment"] = state ? state.waitForDeployment : undefined;
        } else {
            const args = argsOrState as AwsTimestreamwriteTableArgs | undefined;
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["magneticStoreWriteProperties"] = args ? args.magneticStoreWriteProperties : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["retentionProperties"] = args ? args.retentionProperties : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["waitForDeployment"] = args ? args.waitForDeployment : undefined;
            resourceInputs["allTags"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["specifiedTags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsTimestreamwriteTable.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsTimestreamwriteTable resources.
 */
export interface AwsTimestreamwriteTableState {
    /**
     * A complete list of tags for this time stream database, even ones not being managed by this resource.
     */
    allTags?: pulumi.Input<pulumi.Input<inputs.AwsTimestreamwriteTableAllTag>[]>;
    /**
     * The ARN that uniquely identifies this Table.
     */
    arn?: pulumi.Input<string>;
    /**
     * The full name of the Timestream database.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Contains properties to set on the table when enabling magnetic store writes.
     */
    magneticStoreWriteProperties?: pulumi.Input<inputs.AwsTimestreamwriteTableMagneticStoreWriteProperties>;
    /**
     * The short name of the Timestream Table.
     */
    name?: pulumi.Input<string>;
    /**
     * The retention duration for the memory store and magnetic store.
     */
    retentionProperties?: pulumi.Input<inputs.AwsTimestreamwriteTableRetentionProperties>;
    /**
     * A list of tags being managed by this resource.
     */
    specifiedTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags in key-value format.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.AwsTimestreamwriteTableTag>[]>;
    /**
     * The GUID of the tenant that the Timestream Table will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    waitForDeployment?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AwsTimestreamwriteTable resource.
 */
export interface AwsTimestreamwriteTableArgs {
    /**
     * The full name of the Timestream database.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Contains properties to set on the table when enabling magnetic store writes.
     */
    magneticStoreWriteProperties?: pulumi.Input<inputs.AwsTimestreamwriteTableMagneticStoreWriteProperties>;
    /**
     * The short name of the Timestream Table.
     */
    name?: pulumi.Input<string>;
    /**
     * The retention duration for the memory store and magnetic store.
     */
    retentionProperties?: pulumi.Input<inputs.AwsTimestreamwriteTableRetentionProperties>;
    /**
     * Tags in key-value format.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.AwsTimestreamwriteTableTag>[]>;
    /**
     * The GUID of the tenant that the Timestream Table will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    waitForDeployment?: pulumi.Input<boolean>;
}
