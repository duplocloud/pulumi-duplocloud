// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsTimestreamwriteDatabase` manages an aws Timestream database resource in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const tenantId = "d186700c-ad18-4525-9593-aad467c843ff";
 * const kmsKey = duplocloud.getTenantAwsKmsKey({
 *     tenantId: tenantId,
 * });
 * const timestreamwriteDatabase = new duplocloud.AwsTimestreamwriteDatabase("timestreamwrite_database", {
 *     tenantId: tenantId,
 *     name: "test",
 *     kmsKeyId: kmsKey.then(kmsKey => kmsKey.keyArn),
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS Timestream Database
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the short name of AWS Timestream Database
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsTimestreamwriteDatabase:AwsTimestreamwriteDatabase timestreamwrite_database *TENANT_ID*&#47;*NAME*
 * ```
 */
export class AwsTimestreamwriteDatabase extends pulumi.CustomResource {
    /**
     * Get an existing AwsTimestreamwriteDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsTimestreamwriteDatabaseState, opts?: pulumi.CustomResourceOptions): AwsTimestreamwriteDatabase {
        return new AwsTimestreamwriteDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsTimestreamwriteDatabase:AwsTimestreamwriteDatabase';

    /**
     * Returns true if the given object is an instance of AwsTimestreamwriteDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsTimestreamwriteDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsTimestreamwriteDatabase.__pulumiType;
    }

    /**
     * A complete list of tags for this time stream database, even ones not being managed by this resource.
     */
    public /*out*/ readonly allTags!: pulumi.Output<outputs.AwsTimestreamwriteDatabaseAllTag[]>;
    /**
     * The ARN that uniquely identifies this database.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The full name of the Timestream Database.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database.
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * The short name of the Timestream Database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of tags being managed by this resource.
     */
    public /*out*/ readonly specifiedTags!: pulumi.Output<string[]>;
    /**
     * The total number of tables found within the Timestream database.
     */
    public /*out*/ readonly tableCount!: pulumi.Output<number>;
    /**
     * Tags in key-value format.
     */
    public readonly tags!: pulumi.Output<outputs.AwsTimestreamwriteDatabaseTag[] | undefined>;
    /**
     * The GUID of the tenant that the Timestream Database will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AwsTimestreamwriteDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsTimestreamwriteDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsTimestreamwriteDatabaseArgs | AwsTimestreamwriteDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsTimestreamwriteDatabaseState | undefined;
            resourceInputs["allTags"] = state ? state.allTags : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["specifiedTags"] = state ? state.specifiedTags : undefined;
            resourceInputs["tableCount"] = state ? state.tableCount : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AwsTimestreamwriteDatabaseArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["allTags"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["specifiedTags"] = undefined /*out*/;
            resourceInputs["tableCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsTimestreamwriteDatabase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsTimestreamwriteDatabase resources.
 */
export interface AwsTimestreamwriteDatabaseState {
    /**
     * A complete list of tags for this time stream database, even ones not being managed by this resource.
     */
    allTags?: pulumi.Input<pulumi.Input<inputs.AwsTimestreamwriteDatabaseAllTag>[]>;
    /**
     * The ARN that uniquely identifies this database.
     */
    arn?: pulumi.Input<string>;
    /**
     * The full name of the Timestream Database.
     */
    fullname?: pulumi.Input<string>;
    /**
     * The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The short name of the Timestream Database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of tags being managed by this resource.
     */
    specifiedTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The total number of tables found within the Timestream database.
     */
    tableCount?: pulumi.Input<number>;
    /**
     * Tags in key-value format.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.AwsTimestreamwriteDatabaseTag>[]>;
    /**
     * The GUID of the tenant that the Timestream Database will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsTimestreamwriteDatabase resource.
 */
export interface AwsTimestreamwriteDatabaseArgs {
    /**
     * The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The short name of the Timestream Database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * Tags in key-value format.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.AwsTimestreamwriteDatabaseTag>[]>;
    /**
     * The GUID of the tenant that the Timestream Database will be created in.
     */
    tenantId: pulumi.Input<string>;
}
