// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const app = duplocloud.getGcpFirestores({
 *     tenantId: "tenant_id",
 * });
 * export const out = {
 *     firestores: app.then(app => app.firestores),
 * };
 * ```
 */
export function getGcpFirestores(args: GetGcpFirestoresArgs, opts?: pulumi.InvokeOptions): Promise<GetGcpFirestoresResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("duplocloud:index/getGcpFirestores:getGcpFirestores", {
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGcpFirestores.
 */
export interface GetGcpFirestoresArgs {
    /**
     * The GUID of the tenant that the firestore will be created in.
     */
    tenantId: string;
}

/**
 * A collection of values returned by getGcpFirestores.
 */
export interface GetGcpFirestoresResult {
    readonly firestores: outputs.GetGcpFirestoresFirestore[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The GUID of the tenant that the firestore will be created in.
     */
    readonly tenantId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const app = duplocloud.getGcpFirestores({
 *     tenantId: "tenant_id",
 * });
 * export const out = {
 *     firestores: app.then(app => app.firestores),
 * };
 * ```
 */
export function getGcpFirestoresOutput(args: GetGcpFirestoresOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGcpFirestoresResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("duplocloud:index/getGcpFirestores:getGcpFirestores", {
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGcpFirestores.
 */
export interface GetGcpFirestoresOutputArgs {
    /**
     * The GUID of the tenant that the firestore will be created in.
     */
    tenantId: pulumi.Input<string>;
}
