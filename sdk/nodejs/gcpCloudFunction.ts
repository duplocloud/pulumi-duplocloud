// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.GcpCloudFunction` manages a GCP cloud function in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * // A simple cloud function with an HTTPS trigger
 * const myfunc = new duplocloud.GcpCloudFunction("myfunc", {
 *     tenantId: myapp.tenantId,
 *     name: "myfunc",
 *     sourceArchiveUrl: "gs://my-function-code-bucket/myfunc.zip",
 *     entrypoint: "my_entrypoint",
 *     runtime: "nodejs10",
 *     availableMemoryMb: 256,
 *     ingressType: 1,
 *     timeout: 60,
 *     environmentVariables: {
 *         foo: "bar",
 *     },
 *     httpsTrigger: {},
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing GCP cloud function
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORT_NAME* is the short name of the GCP cloud function
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/gcpCloudFunction:GcpCloudFunction myfunc *TENANT_ID*&#47;*SHORT_NAME*
 * ```
 */
export class GcpCloudFunction extends pulumi.CustomResource {
    /**
     * Get an existing GcpCloudFunction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpCloudFunctionState, opts?: pulumi.CustomResourceOptions): GcpCloudFunction {
        return new GcpCloudFunction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/gcpCloudFunction:GcpCloudFunction';

    /**
     * Returns true if the given object is an instance of GcpCloudFunction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpCloudFunction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpCloudFunction.__pulumiType;
    }

    /**
     * Whether or not to allow unauthenticated invocations.
     */
    public readonly allowUnauthenticated!: pulumi.Output<boolean | undefined>;
    /**
     * The amount of memory available to the cloud function.
     */
    public readonly availableMemoryMb!: pulumi.Output<number | undefined>;
    /**
     * The build environment variables for this cloud function.
     */
    public readonly buildEnvironmentVariables!: pulumi.Output<{[key: string]: string}>;
    /**
     * The ID of the cloud build that built the cloud function.
     */
    public /*out*/ readonly buildId!: pulumi.Output<string>;
    /**
     * The description of the cloud function.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The entry point of the cloud function.
     */
    public readonly entrypoint!: pulumi.Output<string>;
    /**
     * The environment variables for this cloud function.
     */
    public readonly environmentVariables!: pulumi.Output<{[key: string]: string}>;
    /**
     * Specifies an event trigger for the cloud function.
     */
    public readonly eventTrigger!: pulumi.Output<outputs.GcpCloudFunctionEventTrigger | undefined>;
    /**
     * The full name of the cloud function.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * Specifies an HTTPS trigger for the cloud function.
     */
    public readonly httpsTrigger!: pulumi.Output<outputs.GcpCloudFunctionHttpsTrigger | undefined>;
    /**
     * The numerical index of ingress type to use for this cloud function. Should be one of: - `1` : Allow all - `2` : Allow
     * internal traffic - `3` : Allow internal traffic and GCP load balancing
     */
    public readonly ingressType!: pulumi.Output<number | undefined>;
    /**
     * The labels assigned to this cloud function.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The short name of the cloud function. Duplo will add a prefix to the name. You can retrieve the full name from the
     * `fullname` attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Whether or not to require HTTPS.
     */
    public readonly requireHttps!: pulumi.Output<boolean | undefined>;
    /**
     * The runtime of the cloud function. Should be one of: - `nodejs10` : Node.js 10 - `nodejs12` : Node.js 12 - `nodejs14` :
     * Node.js 14 - `python37` : Python 3.7 - `python38` : Python 3.8 - `python39` : Python 3.9 - `go111` : Go 1.11 - `go113` :
     * Go 1.13 - `java11` : Java 11 - `dotnet3` : .NET Framework 3 - `ruby26` : Ruby 2.6 - `ruby27` : Ruby 2.7 - `nodejs6` :
     * Node.js 6 (deprecated) - `nodejs8` : Node.js 8 (deprecated)
     */
    public readonly runtime!: pulumi.Output<string>;
    /**
     * The SelfLink of the cloud function.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The cloud storage URL where the cloud function package is located.
     */
    public readonly sourceArchiveUrl!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the cloud function will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * The execution time limit for the cloud function.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * The current version of the cloud function.
     */
    public /*out*/ readonly versionId!: pulumi.Output<number>;
    /**
     * The numerical index of the VPC networking type to use for this cloud function. Should be one of: - `0` : All traffic
     * through the VPC - `1` : Only private traffic through the VPC - `2` : No VPC networking
     */
    public readonly vpcNetworkingType!: pulumi.Output<number | undefined>;

    /**
     * Create a GcpCloudFunction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpCloudFunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpCloudFunctionArgs | GcpCloudFunctionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpCloudFunctionState | undefined;
            resourceInputs["allowUnauthenticated"] = state ? state.allowUnauthenticated : undefined;
            resourceInputs["availableMemoryMb"] = state ? state.availableMemoryMb : undefined;
            resourceInputs["buildEnvironmentVariables"] = state ? state.buildEnvironmentVariables : undefined;
            resourceInputs["buildId"] = state ? state.buildId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["entrypoint"] = state ? state.entrypoint : undefined;
            resourceInputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            resourceInputs["eventTrigger"] = state ? state.eventTrigger : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["httpsTrigger"] = state ? state.httpsTrigger : undefined;
            resourceInputs["ingressType"] = state ? state.ingressType : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["requireHttps"] = state ? state.requireHttps : undefined;
            resourceInputs["runtime"] = state ? state.runtime : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["sourceArchiveUrl"] = state ? state.sourceArchiveUrl : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["vpcNetworkingType"] = state ? state.vpcNetworkingType : undefined;
        } else {
            const args = argsOrState as GcpCloudFunctionArgs | undefined;
            if ((!args || args.entrypoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entrypoint'");
            }
            if ((!args || args.runtime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runtime'");
            }
            if ((!args || args.sourceArchiveUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceArchiveUrl'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["allowUnauthenticated"] = args ? args.allowUnauthenticated : undefined;
            resourceInputs["availableMemoryMb"] = args ? args.availableMemoryMb : undefined;
            resourceInputs["buildEnvironmentVariables"] = args ? args.buildEnvironmentVariables : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["entrypoint"] = args ? args.entrypoint : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["eventTrigger"] = args ? args.eventTrigger : undefined;
            resourceInputs["httpsTrigger"] = args ? args.httpsTrigger : undefined;
            resourceInputs["ingressType"] = args ? args.ingressType : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["requireHttps"] = args ? args.requireHttps : undefined;
            resourceInputs["runtime"] = args ? args.runtime : undefined;
            resourceInputs["sourceArchiveUrl"] = args ? args.sourceArchiveUrl : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["vpcNetworkingType"] = args ? args.vpcNetworkingType : undefined;
            resourceInputs["buildId"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpCloudFunction.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GcpCloudFunction resources.
 */
export interface GcpCloudFunctionState {
    /**
     * Whether or not to allow unauthenticated invocations.
     */
    allowUnauthenticated?: pulumi.Input<boolean>;
    /**
     * The amount of memory available to the cloud function.
     */
    availableMemoryMb?: pulumi.Input<number>;
    /**
     * The build environment variables for this cloud function.
     */
    buildEnvironmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the cloud build that built the cloud function.
     */
    buildId?: pulumi.Input<string>;
    /**
     * The description of the cloud function.
     */
    description?: pulumi.Input<string>;
    /**
     * The entry point of the cloud function.
     */
    entrypoint?: pulumi.Input<string>;
    /**
     * The environment variables for this cloud function.
     */
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies an event trigger for the cloud function.
     */
    eventTrigger?: pulumi.Input<inputs.GcpCloudFunctionEventTrigger>;
    /**
     * The full name of the cloud function.
     */
    fullname?: pulumi.Input<string>;
    /**
     * Specifies an HTTPS trigger for the cloud function.
     */
    httpsTrigger?: pulumi.Input<inputs.GcpCloudFunctionHttpsTrigger>;
    /**
     * The numerical index of ingress type to use for this cloud function. Should be one of: - `1` : Allow all - `2` : Allow
     * internal traffic - `3` : Allow internal traffic and GCP load balancing
     */
    ingressType?: pulumi.Input<number>;
    /**
     * The labels assigned to this cloud function.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The short name of the cloud function. Duplo will add a prefix to the name. You can retrieve the full name from the
     * `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether or not to require HTTPS.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The runtime of the cloud function. Should be one of: - `nodejs10` : Node.js 10 - `nodejs12` : Node.js 12 - `nodejs14` :
     * Node.js 14 - `python37` : Python 3.7 - `python38` : Python 3.8 - `python39` : Python 3.9 - `go111` : Go 1.11 - `go113` :
     * Go 1.13 - `java11` : Java 11 - `dotnet3` : .NET Framework 3 - `ruby26` : Ruby 2.6 - `ruby27` : Ruby 2.7 - `nodejs6` :
     * Node.js 6 (deprecated) - `nodejs8` : Node.js 8 (deprecated)
     */
    runtime?: pulumi.Input<string>;
    /**
     * The SelfLink of the cloud function.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The cloud storage URL where the cloud function package is located.
     */
    sourceArchiveUrl?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the cloud function will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The execution time limit for the cloud function.
     */
    timeout?: pulumi.Input<number>;
    /**
     * The current version of the cloud function.
     */
    versionId?: pulumi.Input<number>;
    /**
     * The numerical index of the VPC networking type to use for this cloud function. Should be one of: - `0` : All traffic
     * through the VPC - `1` : Only private traffic through the VPC - `2` : No VPC networking
     */
    vpcNetworkingType?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a GcpCloudFunction resource.
 */
export interface GcpCloudFunctionArgs {
    /**
     * Whether or not to allow unauthenticated invocations.
     */
    allowUnauthenticated?: pulumi.Input<boolean>;
    /**
     * The amount of memory available to the cloud function.
     */
    availableMemoryMb?: pulumi.Input<number>;
    /**
     * The build environment variables for this cloud function.
     */
    buildEnvironmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The description of the cloud function.
     */
    description?: pulumi.Input<string>;
    /**
     * The entry point of the cloud function.
     */
    entrypoint: pulumi.Input<string>;
    /**
     * The environment variables for this cloud function.
     */
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies an event trigger for the cloud function.
     */
    eventTrigger?: pulumi.Input<inputs.GcpCloudFunctionEventTrigger>;
    /**
     * Specifies an HTTPS trigger for the cloud function.
     */
    httpsTrigger?: pulumi.Input<inputs.GcpCloudFunctionHttpsTrigger>;
    /**
     * The numerical index of ingress type to use for this cloud function. Should be one of: - `1` : Allow all - `2` : Allow
     * internal traffic - `3` : Allow internal traffic and GCP load balancing
     */
    ingressType?: pulumi.Input<number>;
    /**
     * The labels assigned to this cloud function.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The short name of the cloud function. Duplo will add a prefix to the name. You can retrieve the full name from the
     * `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether or not to require HTTPS.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The runtime of the cloud function. Should be one of: - `nodejs10` : Node.js 10 - `nodejs12` : Node.js 12 - `nodejs14` :
     * Node.js 14 - `python37` : Python 3.7 - `python38` : Python 3.8 - `python39` : Python 3.9 - `go111` : Go 1.11 - `go113` :
     * Go 1.13 - `java11` : Java 11 - `dotnet3` : .NET Framework 3 - `ruby26` : Ruby 2.6 - `ruby27` : Ruby 2.7 - `nodejs6` :
     * Node.js 6 (deprecated) - `nodejs8` : Node.js 8 (deprecated)
     */
    runtime: pulumi.Input<string>;
    /**
     * The cloud storage URL where the cloud function package is located.
     */
    sourceArchiveUrl: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the cloud function will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * The execution time limit for the cloud function.
     */
    timeout?: pulumi.Input<number>;
    /**
     * The numerical index of the VPC networking type to use for this cloud function. Should be one of: - `0` : All traffic
     * through the VPC - `1` : Only private traffic through the VPC - `2` : No VPC networking
     */
    vpcNetworkingType?: pulumi.Input<number>;
}
