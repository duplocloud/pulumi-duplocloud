// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

export function getEcsService(args: GetEcsServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetEcsServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("duplocloud:index/getEcsService:getEcsService", {
        "name": args.name,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEcsService.
 */
export interface GetEcsServiceArgs {
    /**
     * The name of the service to create.
     */
    name: string;
    /**
     * The GUID of the tenant that the service will be created in.
     */
    tenantId: string;
}

/**
 * A collection of values returned by getEcsService.
 */
export interface GetEcsServiceResult {
    readonly capacityProviderStrategies: outputs.GetEcsServiceCapacityProviderStrategy[];
    /**
     * The DNS prefix to assign to this service's load balancer.
     */
    readonly dnsPrfx: string;
    readonly healthCheckGracePeriodSeconds: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The index of the ecs service.
     */
    readonly index: number;
    readonly isTargetGroupOnly: boolean;
    /**
     * Zero or more load balancer configurations to associate with this service.
     */
    readonly loadBalancers: outputs.GetEcsServiceLoadBalancer[];
    /**
     * The name of the service to create.
     */
    readonly name: string;
    /**
     * The number of older task definitions to retain in AWS.
     */
    readonly oldTaskDefinitionBufferSize: number;
    /**
     * The number of container replicas to create.
     */
    readonly replicas: number;
    readonly targetGroupArns: string[];
    /**
     * The ARN of the task definition to use.
     */
    readonly taskDefinition: string;
    /**
     * The GUID of the tenant that the service will be created in.
     */
    readonly tenantId: string;
    /**
     * Whether or not to wait until all target groups are created for ecs service, after creation.
     */
    readonly waitUntilTargetsReady: boolean;
}
export function getEcsServiceOutput(args: GetEcsServiceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEcsServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("duplocloud:index/getEcsService:getEcsService", {
        "name": args.name,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEcsService.
 */
export interface GetEcsServiceOutputArgs {
    /**
     * The name of the service to create.
     */
    name: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the service will be created in.
     */
    tenantId: pulumi.Input<string>;
}
