// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AzureVmFeature` manages an Azure VM Feature in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * // supported feature names are "loganalytics", "publicip", "addsjoin", and "aadjoin"
 * const vmFeature = new duplocloud.AzureVmFeature("vm_feature", {
 *     tenantId: myapp.tenantId,
 *     componentId: "p01-host01",
 *     featureName: "aadjoin",
 *     enabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing Azure Virtual Machine Feature
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *VM_NAME* is the short name of the Azure Virtual Machine
 *
 *  - *FEATURE_NAME* is the short name of the Azure Virtual Machine Feature
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/azureVmFeature:AzureVmFeature vm_feature *TENANT_ID*&#47;*VM_NAME*&#47;*FEATURE_NAME*
 * ```
 */
export class AzureVmFeature extends pulumi.CustomResource {
    /**
     * Get an existing AzureVmFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureVmFeatureState, opts?: pulumi.CustomResourceOptions): AzureVmFeature {
        return new AzureVmFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/azureVmFeature:AzureVmFeature';

    /**
     * Returns true if the given object is an instance of AzureVmFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureVmFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureVmFeature.__pulumiType;
    }

    /**
     * Specifies the name of the VM created in duplo. Changing this forces a new resource to be created.
     */
    public readonly componentId!: pulumi.Output<string>;
    /**
     * The status of the VM feature. By default, this is set to false.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The name of the VM feature to be enabled.
     */
    public readonly featureName!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the azure vm feature will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AzureVmFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureVmFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureVmFeatureArgs | AzureVmFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureVmFeatureState | undefined;
            resourceInputs["componentId"] = state ? state.componentId : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["featureName"] = state ? state.featureName : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AzureVmFeatureArgs | undefined;
            if ((!args || args.componentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'componentId'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.featureName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureName'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["componentId"] = args ? args.componentId : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["featureName"] = args ? args.featureName : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureVmFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureVmFeature resources.
 */
export interface AzureVmFeatureState {
    /**
     * Specifies the name of the VM created in duplo. Changing this forces a new resource to be created.
     */
    componentId?: pulumi.Input<string>;
    /**
     * The status of the VM feature. By default, this is set to false.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the VM feature to be enabled.
     */
    featureName?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the azure vm feature will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureVmFeature resource.
 */
export interface AzureVmFeatureArgs {
    /**
     * Specifies the name of the VM created in duplo. Changing this forces a new resource to be created.
     */
    componentId: pulumi.Input<string>;
    /**
     * The status of the VM feature. By default, this is set to false.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The name of the VM feature to be enabled.
     */
    featureName: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the azure vm feature will be created in.
     */
    tenantId: pulumi.Input<string>;
}
