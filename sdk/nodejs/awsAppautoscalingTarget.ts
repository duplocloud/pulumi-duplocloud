// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsAppautoscalingTarget` manages an aws autoscaling target in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const duplo_app = new duplocloud.Tenant("duplo-app", {
 *     accountName: "duplo-app",
 *     planId: "default",
 * });
 * //ECS Service Autoscaling
 * const asg_target = new duplocloud.AwsAppautoscalingTarget("asg-target", {
 *     tenantId: duplo_app.tenantId,
 *     maxCapacity: 4,
 *     minCapacity: 2,
 *     resourceId: "duploservices-duplo-app-ecs-service",
 *     scalableDimension: "ecs:service:DesiredCount",
 *     serviceNamespace: "ecs",
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing Autoscaling Target
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SERVICE_NAMESPACE* The AWS service namespace of the scalable target
 *
 *  - *SCALABLE_DIMENSION*  The scalable dimension of the scalable target.
 *
 *  - *RESOURCE_ID* is the duploservices-<account_name>-<resource_name>
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsAppautoscalingTarget:AwsAppautoscalingTarget asgTarget *TENANT_ID*&#47;*SERVICE_NAMESPACE*&#47;*SCALABLE_DIMENSION*&#47;*RESOURCE_ID*
 * ```
 */
export class AwsAppautoscalingTarget extends pulumi.CustomResource {
    /**
     * Get an existing AwsAppautoscalingTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsAppautoscalingTargetState, opts?: pulumi.CustomResourceOptions): AwsAppautoscalingTarget {
        return new AwsAppautoscalingTarget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsAppautoscalingTarget:AwsAppautoscalingTarget';

    /**
     * Returns true if the given object is an instance of AwsAppautoscalingTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsAppautoscalingTarget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsAppautoscalingTarget.__pulumiType;
    }

    /**
     * The resource type and unique identifier string for the resource associated with the scaling policy.
     */
    public /*out*/ readonly fullResourceId!: pulumi.Output<string>;
    /**
     * The max capacity of the scalable target.
     */
    public readonly maxCapacity!: pulumi.Output<number>;
    /**
     * The min capacity of the scalable target.
     */
    public readonly minCapacity!: pulumi.Output<number>;
    /**
     * Resource name associated with the scaling policy.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * The ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * The scalable dimension of the scalable target.
     */
    public readonly scalableDimension!: pulumi.Output<string>;
    /**
     * The AWS service namespace of the scalable target.
     */
    public readonly serviceNamespace!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the aws autoscaling target will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AwsAppautoscalingTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsAppautoscalingTargetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsAppautoscalingTargetArgs | AwsAppautoscalingTargetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsAppautoscalingTargetState | undefined;
            resourceInputs["fullResourceId"] = state ? state.fullResourceId : undefined;
            resourceInputs["maxCapacity"] = state ? state.maxCapacity : undefined;
            resourceInputs["minCapacity"] = state ? state.minCapacity : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["scalableDimension"] = state ? state.scalableDimension : undefined;
            resourceInputs["serviceNamespace"] = state ? state.serviceNamespace : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AwsAppautoscalingTargetArgs | undefined;
            if ((!args || args.maxCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxCapacity'");
            }
            if ((!args || args.minCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minCapacity'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.scalableDimension === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalableDimension'");
            }
            if ((!args || args.serviceNamespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceNamespace'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["maxCapacity"] = args ? args.maxCapacity : undefined;
            resourceInputs["minCapacity"] = args ? args.minCapacity : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["scalableDimension"] = args ? args.scalableDimension : undefined;
            resourceInputs["serviceNamespace"] = args ? args.serviceNamespace : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["fullResourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsAppautoscalingTarget.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsAppautoscalingTarget resources.
 */
export interface AwsAppautoscalingTargetState {
    /**
     * The resource type and unique identifier string for the resource associated with the scaling policy.
     */
    fullResourceId?: pulumi.Input<string>;
    /**
     * The max capacity of the scalable target.
     */
    maxCapacity?: pulumi.Input<number>;
    /**
     * The min capacity of the scalable target.
     */
    minCapacity?: pulumi.Input<number>;
    /**
     * Resource name associated with the scaling policy.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The scalable dimension of the scalable target.
     */
    scalableDimension?: pulumi.Input<string>;
    /**
     * The AWS service namespace of the scalable target.
     */
    serviceNamespace?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the aws autoscaling target will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsAppautoscalingTarget resource.
 */
export interface AwsAppautoscalingTargetArgs {
    /**
     * The max capacity of the scalable target.
     */
    maxCapacity: pulumi.Input<number>;
    /**
     * The min capacity of the scalable target.
     */
    minCapacity: pulumi.Input<number>;
    /**
     * Resource name associated with the scaling policy.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The scalable dimension of the scalable target.
     */
    scalableDimension: pulumi.Input<string>;
    /**
     * The AWS service namespace of the scalable target.
     */
    serviceNamespace: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the aws autoscaling target will be created in.
     */
    tenantId: pulumi.Input<string>;
}
