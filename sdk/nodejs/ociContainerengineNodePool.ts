// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.OciContainerengineNodePool` manages an OCI container node pool in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const myOciNodePool = new duplocloud.OciContainerengineNodePool("myOciNodePool", {
 *     tenantId: myapp.tenantId,
 *     name: "tf-test",
 *     nodeShape: "VM.Standard2.1",
 *     nodeImageId: "ocid1.image.oc1.ap-mumbai-1.aaaaaaaagosxifkwha6a6pi2fxx4idf3te3icdsf7z6jar2sxls6xycnehna",
 *     initialNodeLabels: [{
 *         key: "allocationtags",
 *         value: "test",
 *     }],
 *     nodeConfigDetails: {
 *         size: 1,
 *         placementConfigs: [{
 *             availabilityDomain: "uwFr:AP-MUMBAI-1-AD-1",
 *             subnetId: "ocid1.subnet.oc1.ap-mumbai-1.aaaaaaaasz36nwww2zygjn7arpuq4fbz3z22kn6adlalldvld3b5nu6afuxa",
 *         }],
 *         freeformTags: {
 *             CreatedBy: "duplo",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing OCI Container Engine Node Pool
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORTNAME* is the short name of the cluster
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/ociContainerengineNodePool:OciContainerengineNodePool myOciNodePool *TENANT_ID*&#47;*SHORTNAME*
 * ```
 */
export class OciContainerengineNodePool extends pulumi.CustomResource {
    /**
     * Get an existing OciContainerengineNodePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OciContainerengineNodePoolState, opts?: pulumi.CustomResourceOptions): OciContainerengineNodePool {
        return new OciContainerengineNodePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/ociContainerengineNodePool:OciContainerengineNodePool';

    /**
     * Returns true if the given object is an instance of OciContainerengineNodePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OciContainerengineNodePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OciContainerengineNodePool.__pulumiType;
    }

    /**
     * The OCID of the cluster to which this node pool is attached.
     */
    public /*out*/ readonly clusterId!: pulumi.Output<string>;
    /**
     * The OCID of the compartment in which the node pool exists.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly initialNodeLabels!: pulumi.Output<outputs.OciContainerengineNodePoolInitialNodeLabel[] | undefined>;
    /**
     * The version of Kubernetes to install on the nodes in the node pool.
     */
    public readonly kubernetesVersion!: pulumi.Output<string>;
    /**
     * The name of the node pool.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly nodeConfigDetails!: pulumi.Output<outputs.OciContainerengineNodePoolNodeConfigDetails>;
    public readonly nodeImageId!: pulumi.Output<string>;
    public readonly nodeImageName!: pulumi.Output<string>;
    public readonly nodeMetadata!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The OCID of the node pool.
     */
    public /*out*/ readonly nodePoolId!: pulumi.Output<string>;
    /**
     * The name of the node shape of the nodes in the node pool.
     */
    public readonly nodeShape!: pulumi.Output<string>;
    public readonly nodeShapeConfig!: pulumi.Output<outputs.OciContainerengineNodePoolNodeShapeConfig>;
    public readonly nodeSourceDetails!: pulumi.Output<outputs.OciContainerengineNodePoolNodeSourceDetails>;
    public readonly nodes!: pulumi.Output<outputs.OciContainerengineNodePoolNode[]>;
    public readonly quantityPerSubnet!: pulumi.Output<number>;
    public readonly sshPublicKey!: pulumi.Output<string>;
    public readonly subnetIds!: pulumi.Output<string[]>;
    public readonly systemTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The GUID of the tenant that the Node Pool resource in Oracle Cloud Infrastructure Container Engine service be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Whether or not to wait until oci node pool to be ready, after creation. Defaults to `true`.
     */
    public readonly waitUntilReady!: pulumi.Output<boolean | undefined>;

    /**
     * Create a OciContainerengineNodePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OciContainerengineNodePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OciContainerengineNodePoolArgs | OciContainerengineNodePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OciContainerengineNodePoolState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["initialNodeLabels"] = state ? state.initialNodeLabels : undefined;
            resourceInputs["kubernetesVersion"] = state ? state.kubernetesVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeConfigDetails"] = state ? state.nodeConfigDetails : undefined;
            resourceInputs["nodeImageId"] = state ? state.nodeImageId : undefined;
            resourceInputs["nodeImageName"] = state ? state.nodeImageName : undefined;
            resourceInputs["nodeMetadata"] = state ? state.nodeMetadata : undefined;
            resourceInputs["nodePoolId"] = state ? state.nodePoolId : undefined;
            resourceInputs["nodeShape"] = state ? state.nodeShape : undefined;
            resourceInputs["nodeShapeConfig"] = state ? state.nodeShapeConfig : undefined;
            resourceInputs["nodeSourceDetails"] = state ? state.nodeSourceDetails : undefined;
            resourceInputs["nodes"] = state ? state.nodes : undefined;
            resourceInputs["quantityPerSubnet"] = state ? state.quantityPerSubnet : undefined;
            resourceInputs["sshPublicKey"] = state ? state.sshPublicKey : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["waitUntilReady"] = state ? state.waitUntilReady : undefined;
        } else {
            const args = argsOrState as OciContainerengineNodePoolArgs | undefined;
            if ((!args || args.nodeShape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeShape'");
            }
            if ((!args || args.nodeShapeConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeShapeConfig'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["initialNodeLabels"] = args ? args.initialNodeLabels : undefined;
            resourceInputs["kubernetesVersion"] = args ? args.kubernetesVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeConfigDetails"] = args ? args.nodeConfigDetails : undefined;
            resourceInputs["nodeImageId"] = args ? args.nodeImageId : undefined;
            resourceInputs["nodeImageName"] = args ? args.nodeImageName : undefined;
            resourceInputs["nodeMetadata"] = args ? args.nodeMetadata : undefined;
            resourceInputs["nodeShape"] = args ? args.nodeShape : undefined;
            resourceInputs["nodeShapeConfig"] = args ? args.nodeShapeConfig : undefined;
            resourceInputs["nodeSourceDetails"] = args ? args.nodeSourceDetails : undefined;
            resourceInputs["nodes"] = args ? args.nodes : undefined;
            resourceInputs["quantityPerSubnet"] = args ? args.quantityPerSubnet : undefined;
            resourceInputs["sshPublicKey"] = args ? args.sshPublicKey : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["systemTags"] = args ? args.systemTags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["waitUntilReady"] = args ? args.waitUntilReady : undefined;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["nodePoolId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OciContainerengineNodePool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OciContainerengineNodePool resources.
 */
export interface OciContainerengineNodePoolState {
    /**
     * The OCID of the cluster to which this node pool is attached.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The OCID of the compartment in which the node pool exists.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    initialNodeLabels?: pulumi.Input<pulumi.Input<inputs.OciContainerengineNodePoolInitialNodeLabel>[]>;
    /**
     * The version of Kubernetes to install on the nodes in the node pool.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * The name of the node pool.
     */
    name?: pulumi.Input<string>;
    nodeConfigDetails?: pulumi.Input<inputs.OciContainerengineNodePoolNodeConfigDetails>;
    nodeImageId?: pulumi.Input<string>;
    nodeImageName?: pulumi.Input<string>;
    nodeMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The OCID of the node pool.
     */
    nodePoolId?: pulumi.Input<string>;
    /**
     * The name of the node shape of the nodes in the node pool.
     */
    nodeShape?: pulumi.Input<string>;
    nodeShapeConfig?: pulumi.Input<inputs.OciContainerengineNodePoolNodeShapeConfig>;
    nodeSourceDetails?: pulumi.Input<inputs.OciContainerengineNodePoolNodeSourceDetails>;
    nodes?: pulumi.Input<pulumi.Input<inputs.OciContainerengineNodePoolNode>[]>;
    quantityPerSubnet?: pulumi.Input<number>;
    sshPublicKey?: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the Node Pool resource in Oracle Cloud Infrastructure Container Engine service be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Whether or not to wait until oci node pool to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a OciContainerengineNodePool resource.
 */
export interface OciContainerengineNodePoolArgs {
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    initialNodeLabels?: pulumi.Input<pulumi.Input<inputs.OciContainerengineNodePoolInitialNodeLabel>[]>;
    /**
     * The version of Kubernetes to install on the nodes in the node pool.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * The name of the node pool.
     */
    name?: pulumi.Input<string>;
    nodeConfigDetails?: pulumi.Input<inputs.OciContainerengineNodePoolNodeConfigDetails>;
    nodeImageId?: pulumi.Input<string>;
    nodeImageName?: pulumi.Input<string>;
    nodeMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the node shape of the nodes in the node pool.
     */
    nodeShape: pulumi.Input<string>;
    nodeShapeConfig: pulumi.Input<inputs.OciContainerengineNodePoolNodeShapeConfig>;
    nodeSourceDetails?: pulumi.Input<inputs.OciContainerengineNodePoolNodeSourceDetails>;
    nodes?: pulumi.Input<pulumi.Input<inputs.OciContainerengineNodePoolNode>[]>;
    quantityPerSubnet?: pulumi.Input<number>;
    sshPublicKey?: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the Node Pool resource in Oracle Cloud Infrastructure Container Engine service be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Whether or not to wait until oci node pool to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}
