// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.AzureMysqlDatabase` manages an Azure mysql database in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const mydb = new duplocloud.AzureMysqlDatabase("mydb", {
 *     tenantId: myapp.tenantId,
 *     name: "mysql-test",
 *     administratorLogin: "testroot",
 *     administratorLoginPassword: "P@ssword12345",
 *     storageMb: 102400,
 *     version: "5.7",
 *     skuName: "GP_Gen5_4",
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing Azure Mysql Database
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORT_NAME* is the short name of the Azure Mysql Database
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/azureMysqlDatabase:AzureMysqlDatabase mysqlDatabase *TENANT_ID*&#47;*SHORT_NAME*
 * ```
 */
export class AzureMysqlDatabase extends pulumi.CustomResource {
    /**
     * Get an existing AzureMysqlDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureMysqlDatabaseState, opts?: pulumi.CustomResourceOptions): AzureMysqlDatabase {
        return new AzureMysqlDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/azureMysqlDatabase:AzureMysqlDatabase';

    /**
     * Returns true if the given object is an instance of AzureMysqlDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureMysqlDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureMysqlDatabase.__pulumiType;
    }

    /**
     * The Administrator Login for the MySQL Server.
     */
    public readonly administratorLogin!: pulumi.Output<string>;
    /**
     * The Password associated with the `administratorLogin` for the MySQL Server.
     */
    public readonly administratorLoginPassword!: pulumi.Output<string | undefined>;
    /**
     * Backup retention days for the server, supported values are between `7` and `35` days.
     */
    public readonly backupRetentionDays!: pulumi.Output<number>;
    /**
     * The FQDN of the MySQL Server.
     */
    public /*out*/ readonly fqdn!: pulumi.Output<string>;
    /**
     * Turn Geo-redundant server backups on/off.
     */
    public readonly geoRedundantBackup!: pulumi.Output<string>;
    /**
     * Specifies the name of the MySQL Server. Changing this forces a new resource to be created. This needs to be globally unique within Azure.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the SKU Name for this MySQL Server.
     */
    public readonly skuName!: pulumi.Output<string>;
    /**
     * Specifies if SSL should be enforced on connections.
     */
    public readonly sslEnforcement!: pulumi.Output<string>;
    /**
     * Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs.
     */
    public readonly storageMb!: pulumi.Output<number>;
    public /*out*/ readonly tags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The GUID of the tenant that the azure mysql database will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Specifies the version of MySQL to use. Valid values are `5.7`, or `8.0`. Changing this forces a new resource to be created.
     */
    public readonly version!: pulumi.Output<string>;
    /**
     * Whether or not to wait until MySql Server instance to be ready, after creation. Defaults to `true`.
     */
    public readonly waitUntilReady!: pulumi.Output<boolean | undefined>;

    /**
     * Create a AzureMysqlDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureMysqlDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureMysqlDatabaseArgs | AzureMysqlDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureMysqlDatabaseState | undefined;
            resourceInputs["administratorLogin"] = state ? state.administratorLogin : undefined;
            resourceInputs["administratorLoginPassword"] = state ? state.administratorLoginPassword : undefined;
            resourceInputs["backupRetentionDays"] = state ? state.backupRetentionDays : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["geoRedundantBackup"] = state ? state.geoRedundantBackup : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["skuName"] = state ? state.skuName : undefined;
            resourceInputs["sslEnforcement"] = state ? state.sslEnforcement : undefined;
            resourceInputs["storageMb"] = state ? state.storageMb : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["waitUntilReady"] = state ? state.waitUntilReady : undefined;
        } else {
            const args = argsOrState as AzureMysqlDatabaseArgs | undefined;
            if ((!args || args.skuName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["administratorLogin"] = args ? args.administratorLogin : undefined;
            resourceInputs["administratorLoginPassword"] = args?.administratorLoginPassword ? pulumi.secret(args.administratorLoginPassword) : undefined;
            resourceInputs["backupRetentionDays"] = args ? args.backupRetentionDays : undefined;
            resourceInputs["geoRedundantBackup"] = args ? args.geoRedundantBackup : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["skuName"] = args ? args.skuName : undefined;
            resourceInputs["sslEnforcement"] = args ? args.sslEnforcement : undefined;
            resourceInputs["storageMb"] = args ? args.storageMb : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["waitUntilReady"] = args ? args.waitUntilReady : undefined;
            resourceInputs["fqdn"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["administratorLoginPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AzureMysqlDatabase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureMysqlDatabase resources.
 */
export interface AzureMysqlDatabaseState {
    /**
     * The Administrator Login for the MySQL Server.
     */
    administratorLogin?: pulumi.Input<string>;
    /**
     * The Password associated with the `administratorLogin` for the MySQL Server.
     */
    administratorLoginPassword?: pulumi.Input<string>;
    /**
     * Backup retention days for the server, supported values are between `7` and `35` days.
     */
    backupRetentionDays?: pulumi.Input<number>;
    /**
     * The FQDN of the MySQL Server.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Turn Geo-redundant server backups on/off.
     */
    geoRedundantBackup?: pulumi.Input<string>;
    /**
     * Specifies the name of the MySQL Server. Changing this forces a new resource to be created. This needs to be globally unique within Azure.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the SKU Name for this MySQL Server.
     */
    skuName?: pulumi.Input<string>;
    /**
     * Specifies if SSL should be enforced on connections.
     */
    sslEnforcement?: pulumi.Input<string>;
    /**
     * Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs.
     */
    storageMb?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the azure mysql database will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Specifies the version of MySQL to use. Valid values are `5.7`, or `8.0`. Changing this forces a new resource to be created.
     */
    version?: pulumi.Input<string>;
    /**
     * Whether or not to wait until MySql Server instance to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AzureMysqlDatabase resource.
 */
export interface AzureMysqlDatabaseArgs {
    /**
     * The Administrator Login for the MySQL Server.
     */
    administratorLogin?: pulumi.Input<string>;
    /**
     * The Password associated with the `administratorLogin` for the MySQL Server.
     */
    administratorLoginPassword?: pulumi.Input<string>;
    /**
     * Backup retention days for the server, supported values are between `7` and `35` days.
     */
    backupRetentionDays?: pulumi.Input<number>;
    /**
     * Turn Geo-redundant server backups on/off.
     */
    geoRedundantBackup?: pulumi.Input<string>;
    /**
     * Specifies the name of the MySQL Server. Changing this forces a new resource to be created. This needs to be globally unique within Azure.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the SKU Name for this MySQL Server.
     */
    skuName: pulumi.Input<string>;
    /**
     * Specifies if SSL should be enforced on connections.
     */
    sslEnforcement?: pulumi.Input<string>;
    /**
     * Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs.
     */
    storageMb?: pulumi.Input<number>;
    /**
     * The GUID of the tenant that the azure mysql database will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Specifies the version of MySQL to use. Valid values are `5.7`, or `8.0`. Changing this forces a new resource to be created.
     */
    version: pulumi.Input<string>;
    /**
     * Whether or not to wait until MySql Server instance to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}
