// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.GcpSqlDatabaseInstance` manages a GCP SQL Database Instance in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const sqlInstance = new duplocloud.GcpSqlDatabaseInstance("sql_instance", {
 *     tenantId: myapp.tenantId,
 *     name: "sqlinstances01",
 *     databaseVersion: "MYSQL_8_0",
 *     tier: "db-n1-standard-1",
 *     diskSize: 17,
 *     labels: {
 *         "managed-by": "duplocloud",
 *         "created-by": "terraform",
 *     },
 * });
 * // Backup configuration example
 * const sql = new duplocloud.GcpSqlDatabaseInstance("sql", {
 *     tenantId: myapp.tenantId,
 *     name: "mysqlbckp",
 *     databaseVersion: "POSTGRES_14",
 *     diskSize: 10,
 *     tier: "db-f1-micro",
 *     rootPassword: "qwerty",
 *     needBackup: true,
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing GCP SQL database instance
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORT_NAME* is the short name of the GCP SQL database instance
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/gcpSqlDatabaseInstance:GcpSqlDatabaseInstance sql_instance *TENANT_ID*&#47;*SHORT_NAME*
 * ```
 */
export class GcpSqlDatabaseInstance extends pulumi.CustomResource {
    /**
     * Get an existing GcpSqlDatabaseInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpSqlDatabaseInstanceState, opts?: pulumi.CustomResourceOptions): GcpSqlDatabaseInstance {
        return new GcpSqlDatabaseInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/gcpSqlDatabaseInstance:GcpSqlDatabaseInstance';

    /**
     * Returns true if the given object is an instance of GcpSqlDatabaseInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpSqlDatabaseInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpSqlDatabaseInstance.__pulumiType;
    }

    /**
     * Connection name of the database.
     */
    public /*out*/ readonly connectionName!: pulumi.Output<string>;
    /**
     * The MySQL, PostgreSQL or SQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`,`POSTGRES_16`,`POSTGRES_17`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`,`SQLSERVER_2022_WEB`,`SQLSERVER_2022_EXPRESS`,`SQLSERVER_2022_ENTERPRISE`,`SQLSERVER_2022_STANDARD`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions) includes an up-to-date reference of supported versions.
     */
    public readonly databaseVersion!: pulumi.Output<string>;
    /**
     * The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
     */
    public readonly diskSize!: pulumi.Output<number>;
    /**
     * The full name of the sql database.
     */
    public /*out*/ readonly fullname!: pulumi.Output<string>;
    /**
     * List of IP addresses of the database.
     */
    public /*out*/ readonly ipAddresses!: pulumi.Output<string[]>;
    /**
     * Map of string keys and values that can be used to organize and categorize this resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Flag to enable backup process on delete of database Defaults to `true`.
     */
    public readonly needBackup!: pulumi.Output<boolean | undefined>;
    /**
     * Provide root password for specific database versions.
     */
    public readonly rootPassword!: pulumi.Output<string>;
    /**
     * The SelfLink of the sql database.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The GUID of the tenant that the sql database will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
     */
    public readonly tier!: pulumi.Output<string>;
    /**
     * Whether or not to wait until sql database instance to be ready, after creation. Defaults to `true`.
     */
    public readonly waitUntilReady!: pulumi.Output<boolean | undefined>;

    /**
     * Create a GcpSqlDatabaseInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpSqlDatabaseInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpSqlDatabaseInstanceArgs | GcpSqlDatabaseInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpSqlDatabaseInstanceState | undefined;
            resourceInputs["connectionName"] = state ? state.connectionName : undefined;
            resourceInputs["databaseVersion"] = state ? state.databaseVersion : undefined;
            resourceInputs["diskSize"] = state ? state.diskSize : undefined;
            resourceInputs["fullname"] = state ? state.fullname : undefined;
            resourceInputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["needBackup"] = state ? state.needBackup : undefined;
            resourceInputs["rootPassword"] = state ? state.rootPassword : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["tier"] = state ? state.tier : undefined;
            resourceInputs["waitUntilReady"] = state ? state.waitUntilReady : undefined;
        } else {
            const args = argsOrState as GcpSqlDatabaseInstanceArgs | undefined;
            if ((!args || args.databaseVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseVersion'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if ((!args || args.tier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tier'");
            }
            resourceInputs["databaseVersion"] = args ? args.databaseVersion : undefined;
            resourceInputs["diskSize"] = args ? args.diskSize : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["needBackup"] = args ? args.needBackup : undefined;
            resourceInputs["rootPassword"] = args ? args.rootPassword : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["tier"] = args ? args.tier : undefined;
            resourceInputs["waitUntilReady"] = args ? args.waitUntilReady : undefined;
            resourceInputs["connectionName"] = undefined /*out*/;
            resourceInputs["fullname"] = undefined /*out*/;
            resourceInputs["ipAddresses"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpSqlDatabaseInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GcpSqlDatabaseInstance resources.
 */
export interface GcpSqlDatabaseInstanceState {
    /**
     * Connection name of the database.
     */
    connectionName?: pulumi.Input<string>;
    /**
     * The MySQL, PostgreSQL or SQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`,`POSTGRES_16`,`POSTGRES_17`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`,`SQLSERVER_2022_WEB`,`SQLSERVER_2022_EXPRESS`,`SQLSERVER_2022_ENTERPRISE`,`SQLSERVER_2022_STANDARD`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions) includes an up-to-date reference of supported versions.
     */
    databaseVersion?: pulumi.Input<string>;
    /**
     * The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * The full name of the sql database.
     */
    fullname?: pulumi.Input<string>;
    /**
     * List of IP addresses of the database.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Map of string keys and values that can be used to organize and categorize this resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * Flag to enable backup process on delete of database Defaults to `true`.
     */
    needBackup?: pulumi.Input<boolean>;
    /**
     * Provide root password for specific database versions.
     */
    rootPassword?: pulumi.Input<string>;
    /**
     * The SelfLink of the sql database.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the sql database will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
     */
    tier?: pulumi.Input<string>;
    /**
     * Whether or not to wait until sql database instance to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a GcpSqlDatabaseInstance resource.
 */
export interface GcpSqlDatabaseInstanceArgs {
    /**
     * The MySQL, PostgreSQL or SQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`,`POSTGRES_16`,`POSTGRES_17`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`,`SQLSERVER_2022_WEB`,`SQLSERVER_2022_EXPRESS`,`SQLSERVER_2022_ENTERPRISE`,`SQLSERVER_2022_STANDARD`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions) includes an up-to-date reference of supported versions.
     */
    databaseVersion: pulumi.Input<string>;
    /**
     * The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * Map of string keys and values that can be used to organize and categorize this resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * Flag to enable backup process on delete of database Defaults to `true`.
     */
    needBackup?: pulumi.Input<boolean>;
    /**
     * Provide root password for specific database versions.
     */
    rootPassword?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the sql database will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
     */
    tier: pulumi.Input<string>;
    /**
     * Whether or not to wait until sql database instance to be ready, after creation. Defaults to `true`.
     */
    waitUntilReady?: pulumi.Input<boolean>;
}
