// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const app = duplocloud.getGcpRedisInstance({
 *     tenantId: "tenant_id",
 *     name: "name",
 * });
 * export const out = {
 *     name: app.then(app => app.name),
 *     displayName: app.then(app => app.displayName),
 *     memorySizeGb: app.then(app => app.memorySizeGb),
 *     readReplicasEnabled: app.then(app => app.readReplicasEnabled),
 *     redisConfigs: app.then(app => app.redisConfigs),
 *     redisVersion: app.then(app => app.redisVersion),
 *     replicaCount: app.then(app => app.replicaCount),
 *     authEnabled: app.then(app => app.authEnabled),
 *     transitEncryptionEnabled: app.then(app => app.transitEncryptionEnabled),
 *     tier: app.then(app => app.tier),
 *     labels: app.then(app => app.labels),
 * };
 * ```
 */
export function getGcpRedisInstance(args: GetGcpRedisInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetGcpRedisInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("duplocloud:index/getGcpRedisInstance:getGcpRedisInstance", {
        "name": args.name,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGcpRedisInstance.
 */
export interface GetGcpRedisInstanceArgs {
    /**
     * The short name of the redis instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name: string;
    /**
     * The GUID of the tenant that the redis instance will be created in.
     */
    tenantId: string;
}

/**
 * A collection of values returned by getGcpRedisInstance.
 */
export interface GetGcpRedisInstanceResult {
    /**
     * Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the instance. Default value is "false" meaning AUTH is disabled.
     */
    readonly authEnabled: boolean;
    /**
     * An arbitrary and optional user-provided name for the instance.
     */
    readonly displayName: string;
    /**
     * The full name of the of the Redis instance.
     */
    readonly fullname: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Resource labels to represent user provided metadata.
     */
    readonly labels: {[key: string]: string};
    /**
     * Redis memory size in GiB.
     */
    readonly memorySizeGb: number;
    /**
     * The short name of the redis instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    readonly name: string;
    /**
     * Optional. Read replica mode. Can only be specified when trying to create the instance.
     */
    readonly readReplicasEnabled: boolean;
    /**
     * Redis configuration parameters, according to http://redis.io/topics/config. Please check Memorystore documentation for the list of supported parameters: https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
     */
    readonly redisConfigs: {[key: string]: string};
    /**
     * The version of Redis software. If not provided, latest supported version will be used. Please check the API documentation linked at the top for the latest valid values.
     */
    readonly redisVersion: string;
    /**
     * The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1. The valid value for basic tier is 0 and the default is also 0.
     */
    readonly replicaCount: number;
    /**
     * The GUID of the tenant that the redis instance will be created in.
     */
    readonly tenantId: string;
    /**
     * The service tier of the instance. Must be one of these values: BASIC: standalone instance or STANDARD*HA: highly available primary/replica instances Default value: "BASIC" Possible values: ["BASIC", "STANDARD*HA"]
     */
    readonly tier: string;
    /**
     * The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance.
     */
    readonly transitEncryptionEnabled: boolean;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const app = duplocloud.getGcpRedisInstance({
 *     tenantId: "tenant_id",
 *     name: "name",
 * });
 * export const out = {
 *     name: app.then(app => app.name),
 *     displayName: app.then(app => app.displayName),
 *     memorySizeGb: app.then(app => app.memorySizeGb),
 *     readReplicasEnabled: app.then(app => app.readReplicasEnabled),
 *     redisConfigs: app.then(app => app.redisConfigs),
 *     redisVersion: app.then(app => app.redisVersion),
 *     replicaCount: app.then(app => app.replicaCount),
 *     authEnabled: app.then(app => app.authEnabled),
 *     transitEncryptionEnabled: app.then(app => app.transitEncryptionEnabled),
 *     tier: app.then(app => app.tier),
 *     labels: app.then(app => app.labels),
 * };
 * ```
 */
export function getGcpRedisInstanceOutput(args: GetGcpRedisInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGcpRedisInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("duplocloud:index/getGcpRedisInstance:getGcpRedisInstance", {
        "name": args.name,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGcpRedisInstance.
 */
export interface GetGcpRedisInstanceOutputArgs {
    /**
     * The short name of the redis instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
     */
    name: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the redis instance will be created in.
     */
    tenantId: pulumi.Input<string>;
}
