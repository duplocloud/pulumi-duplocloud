// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `duplocloud.TenantNetworkSecurityRule` manages a single network single rule for a Duplo tenant.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * // Allow the "default" tenant to send HTTPS requests to "myapp"
 * const myrule = new duplocloud.TenantNetworkSecurityRule("myrule", {
 *     tenantId: myapp.tenantId,
 *     sourceTenant: "default",
 *     protocol: "tcp",
 *     fromPort: 443,
 *     toPort: 443,
 *     description: "Allow the default tenant to send HTTPS traffic",
 * });
 * ```
 *
 * ## Import
 *
 * Example 1: Importing a "source_tenant" rule:
 *
 *  - TENANT_ID is the target tenant GUID
 *
 *  - 0 is the rule type
 *
 *  - SOURCE_TENANT is the source tenant NAME
 *
 * ```sh
 * $ pulumi import duplocloud:index/tenantNetworkSecurityRule:TenantNetworkSecurityRule myrule TENANT_ID/0/SOURCE_TENANT/PROTOCOL/FROM_PORT/TO_PORT
 * ```
 */
export class TenantNetworkSecurityRule extends pulumi.CustomResource {
    /**
     * Get an existing TenantNetworkSecurityRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TenantNetworkSecurityRuleState, opts?: pulumi.CustomResourceOptions): TenantNetworkSecurityRule {
        return new TenantNetworkSecurityRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/tenantNetworkSecurityRule:TenantNetworkSecurityRule';

    /**
     * Returns true if the given object is an instance of TenantNetworkSecurityRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TenantNetworkSecurityRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TenantNetworkSecurityRule.__pulumiType;
    }

    /**
     * A description for this rule.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The start of a port range to allow traffic to. Defaults to `0`.
     */
    public readonly fromPort!: pulumi.Output<number | undefined>;
    /**
     * The network protocol.  Must be one of:  `tcp`, `udp`, `icmp` Defaults to `tcp`.
     */
    public readonly protocol!: pulumi.Output<string | undefined>;
    /**
     * The source CIDR block to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
     */
    public readonly sourceAddress!: pulumi.Output<string | undefined>;
    /**
     * The source tenant name (*not* GUID) to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
     */
    public readonly sourceTenant!: pulumi.Output<string | undefined>;
    /**
     * The GUID of the tenant that the network security rule will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * The end of a port range to allow traffic to. Defaults to `65535`.
     */
    public readonly toPort!: pulumi.Output<number | undefined>;

    /**
     * Create a TenantNetworkSecurityRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TenantNetworkSecurityRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TenantNetworkSecurityRuleArgs | TenantNetworkSecurityRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TenantNetworkSecurityRuleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fromPort"] = state ? state.fromPort : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["sourceAddress"] = state ? state.sourceAddress : undefined;
            resourceInputs["sourceTenant"] = state ? state.sourceTenant : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["toPort"] = state ? state.toPort : undefined;
        } else {
            const args = argsOrState as TenantNetworkSecurityRuleArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fromPort"] = args ? args.fromPort : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["sourceAddress"] = args ? args.sourceAddress : undefined;
            resourceInputs["sourceTenant"] = args ? args.sourceTenant : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["toPort"] = args ? args.toPort : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TenantNetworkSecurityRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TenantNetworkSecurityRule resources.
 */
export interface TenantNetworkSecurityRuleState {
    /**
     * A description for this rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The start of a port range to allow traffic to. Defaults to `0`.
     */
    fromPort?: pulumi.Input<number>;
    /**
     * The network protocol.  Must be one of:  `tcp`, `udp`, `icmp` Defaults to `tcp`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The source CIDR block to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
     */
    sourceAddress?: pulumi.Input<string>;
    /**
     * The source tenant name (*not* GUID) to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
     */
    sourceTenant?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the network security rule will be created in.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The end of a port range to allow traffic to. Defaults to `65535`.
     */
    toPort?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TenantNetworkSecurityRule resource.
 */
export interface TenantNetworkSecurityRuleArgs {
    /**
     * A description for this rule.
     */
    description: pulumi.Input<string>;
    /**
     * The start of a port range to allow traffic to. Defaults to `0`.
     */
    fromPort?: pulumi.Input<number>;
    /**
     * The network protocol.  Must be one of:  `tcp`, `udp`, `icmp` Defaults to `tcp`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The source CIDR block to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
     */
    sourceAddress?: pulumi.Input<string>;
    /**
     * The source tenant name (*not* GUID) to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
     */
    sourceTenant?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the network security rule will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * The end of a port range to allow traffic to. Defaults to `65535`.
     */
    toPort?: pulumi.Input<number>;
}
