// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AzureAvailabilitySet` manages logical groupings of VMs that enhance reliability by placing VMs in different fault domains to minimize correlated failures, offering improved VM-to-VM latency and high availability, with no extra cost beyond the VM instances themselves, though they may still be affected by shared infrastructure failures.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "default",
 * });
 * const st = new duplocloud.AzureAvailabilitySet("st", {
 *     tenantId: myapp.tenantId,
 *     name: "availset",
 *     useManagedDisk: "Aligned",
 *     platformUpdateDomainCount: 5,
 *     platformFaultDomainCount: 2,
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing Azure Availablitu set
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *NAME* is the  name of the Azure Availability set
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/azureAvailabilitySet:AzureAvailabilitySet this *TENANT_ID*&#47;availability-set/*NAME*
 * ```
 */
export class AzureAvailabilitySet extends pulumi.CustomResource {
    /**
     * Get an existing AzureAvailabilitySet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureAvailabilitySetState, opts?: pulumi.CustomResourceOptions): AzureAvailabilitySet {
        return new AzureAvailabilitySet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/azureAvailabilitySet:AzureAvailabilitySet';

    /**
     * Returns true if the given object is an instance of AzureAvailabilitySet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureAvailabilitySet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureAvailabilitySet.__pulumiType;
    }

    public /*out*/ readonly availabilitySetId!: pulumi.Output<string>;
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * The name for availability set
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify platform fault domain count betweem 1-3, for availability set. Virtual machines in the same fault domain share a common power source and physical network switch. Defaults to `2`.
     */
    public readonly platformFaultDomainCount!: pulumi.Output<number | undefined>;
    /**
     * Specify platform update domain count between 1-20, for availability set. Virtual machines in the same update domain will be restarted together during planned maintenance. Azure never restarts more than one update domain at a time. Defaults to `5`.
     */
    public readonly platformUpdateDomainCount!: pulumi.Output<number | undefined>;
    public /*out*/ readonly tags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The GUID of the tenant that the host will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Set this to `Aligned` if you plan to create virtual machines in this availability set with managed disks. Defaults to `Classic`.
     */
    public readonly useManagedDisk!: pulumi.Output<string | undefined>;
    public /*out*/ readonly virtualMachines!: pulumi.Output<outputs.AzureAvailabilitySetVirtualMachine[]>;

    /**
     * Create a AzureAvailabilitySet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureAvailabilitySetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureAvailabilitySetArgs | AzureAvailabilitySetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureAvailabilitySetState | undefined;
            resourceInputs["availabilitySetId"] = state ? state.availabilitySetId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["platformFaultDomainCount"] = state ? state.platformFaultDomainCount : undefined;
            resourceInputs["platformUpdateDomainCount"] = state ? state.platformUpdateDomainCount : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["useManagedDisk"] = state ? state.useManagedDisk : undefined;
            resourceInputs["virtualMachines"] = state ? state.virtualMachines : undefined;
        } else {
            const args = argsOrState as AzureAvailabilitySetArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["platformFaultDomainCount"] = args ? args.platformFaultDomainCount : undefined;
            resourceInputs["platformUpdateDomainCount"] = args ? args.platformUpdateDomainCount : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["useManagedDisk"] = args ? args.useManagedDisk : undefined;
            resourceInputs["availabilitySetId"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["virtualMachines"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureAvailabilitySet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureAvailabilitySet resources.
 */
export interface AzureAvailabilitySetState {
    availabilitySetId?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * The name for availability set
     */
    name?: pulumi.Input<string>;
    /**
     * Specify platform fault domain count betweem 1-3, for availability set. Virtual machines in the same fault domain share a common power source and physical network switch. Defaults to `2`.
     */
    platformFaultDomainCount?: pulumi.Input<number>;
    /**
     * Specify platform update domain count between 1-20, for availability set. Virtual machines in the same update domain will be restarted together during planned maintenance. Azure never restarts more than one update domain at a time. Defaults to `5`.
     */
    platformUpdateDomainCount?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GUID of the tenant that the host will be created in.
     */
    tenantId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    /**
     * Set this to `Aligned` if you plan to create virtual machines in this availability set with managed disks. Defaults to `Classic`.
     */
    useManagedDisk?: pulumi.Input<string>;
    virtualMachines?: pulumi.Input<pulumi.Input<inputs.AzureAvailabilitySetVirtualMachine>[]>;
}

/**
 * The set of arguments for constructing a AzureAvailabilitySet resource.
 */
export interface AzureAvailabilitySetArgs {
    /**
     * The name for availability set
     */
    name?: pulumi.Input<string>;
    /**
     * Specify platform fault domain count betweem 1-3, for availability set. Virtual machines in the same fault domain share a common power source and physical network switch. Defaults to `2`.
     */
    platformFaultDomainCount?: pulumi.Input<number>;
    /**
     * Specify platform update domain count between 1-20, for availability set. Virtual machines in the same update domain will be restarted together during planned maintenance. Azure never restarts more than one update domain at a time. Defaults to `5`.
     */
    platformUpdateDomainCount?: pulumi.Input<number>;
    /**
     * The GUID of the tenant that the host will be created in.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Set this to `Aligned` if you plan to create virtual machines in this availability set with managed disks. Defaults to `Classic`.
     */
    useManagedDisk?: pulumi.Input<string>;
}
