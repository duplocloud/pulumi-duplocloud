// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * `duplocloud.AwsLambdaFunctionEventConfig` manages an AWS lambda function in Duplo.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as duplocloud from "@pulumi/duplocloud";
 *
 * const myapp = new duplocloud.Tenant("myapp", {
 *     accountName: "myapp",
 *     planId: "nondefault",
 * });
 * const myfunction = new duplocloud.AwsLambdaFunction("myfunction", {
 *     tenantId: myapp.tenantId,
 *     name: "myfunction",
 *     description: "A description of my function",
 *     runtime: "java11",
 *     handler: "com.example.MyFunction::handleRequest",
 *     s3Bucket: "my-bucket-name",
 *     s3Key: "my-function.zip",
 *     environment: {
 *         variables: {
 *             foo: "bar",
 *         },
 *     },
 *     timeout: 60,
 *     memorySize: 512,
 * });
 * const failureQueue = new duplocloud.AwsSqsQueue("failure_queue", {
 *     tenantId: myapp.tenantId,
 *     name: "failure_queue",
 *     fifoQueue: false,
 *     messageRetentionSeconds: 345600,
 *     visibilityTimeoutSeconds: 30,
 *     contentBasedDeduplication: false,
 *     delaySeconds: 10,
 * });
 * const successQueue = new duplocloud.AwsSqsQueue("success_queue", {
 *     tenantId: myapp.tenantId,
 *     name: "success_queue",
 *     fifoQueue: false,
 *     messageRetentionSeconds: 345600,
 *     visibilityTimeoutSeconds: 30,
 *     contentBasedDeduplication: false,
 *     delaySeconds: 10,
 * });
 * const event_invoke_config = new duplocloud.AwsLambdaFunctionEventConfig("event-invoke-config", {
 *     tenantId: myapp.tenantId,
 *     functionName: myfunction.fullname,
 *     maxRetryAttempts: 1,
 *     maxEventAgeInSeconds: 100,
 *     destinationConfig: {
 *         onFailure: {
 *             destination: failureQueue.arn,
 *         },
 *         onSuccess: {
 *             destination: successQueue.arn,
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Example: Importing an existing AWS lambda function event invoke config
 *
 *  - *TENANT_ID* is the tenant GUID
 *
 *  - *SHORT_NAME* is the short name of the AWS lambda function
 *
 * # 
 *
 * ```sh
 * $ pulumi import duplocloud:index/awsLambdaFunctionEventConfig:AwsLambdaFunctionEventConfig event-invoke-config *TENANT_ID*&#47;*SHORT_NAME*&#47;eventInvokeConfig
 * ```
 */
export class AwsLambdaFunctionEventConfig extends pulumi.CustomResource {
    /**
     * Get an existing AwsLambdaFunctionEventConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsLambdaFunctionEventConfigState, opts?: pulumi.CustomResourceOptions): AwsLambdaFunctionEventConfig {
        return new AwsLambdaFunctionEventConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'duplocloud:index/awsLambdaFunctionEventConfig:AwsLambdaFunctionEventConfig';

    /**
     * Returns true if the given object is an instance of AwsLambdaFunctionEventConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsLambdaFunctionEventConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsLambdaFunctionEventConfig.__pulumiType;
    }

    /**
     * A configuration block to specify event destinations
     */
    public readonly destinationConfig!: pulumi.Output<outputs.AwsLambdaFunctionEventConfigDestinationConfig | undefined>;
    /**
     * Name of Lambda function this configuration should apply to
     */
    public readonly functionName!: pulumi.Output<string>;
    /**
     * The maximum age of a request that Lambda sends to a function for processing
     */
    public readonly maxEventAgeInSeconds!: pulumi.Output<number | undefined>;
    /**
     * Maximum number of attempts a Lambda function may retry in case of error
     */
    public readonly maxRetryAttempts!: pulumi.Output<number | undefined>;
    /**
     * The qualifier for the lambda event invoke configuration
     */
    public readonly qualifier!: pulumi.Output<string | undefined>;
    /**
     * The GUID of the tenant that the lambda asynchronous invocation configuration will be created in.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AwsLambdaFunctionEventConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsLambdaFunctionEventConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsLambdaFunctionEventConfigArgs | AwsLambdaFunctionEventConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsLambdaFunctionEventConfigState | undefined;
            resourceInputs["destinationConfig"] = state ? state.destinationConfig : undefined;
            resourceInputs["functionName"] = state ? state.functionName : undefined;
            resourceInputs["maxEventAgeInSeconds"] = state ? state.maxEventAgeInSeconds : undefined;
            resourceInputs["maxRetryAttempts"] = state ? state.maxRetryAttempts : undefined;
            resourceInputs["qualifier"] = state ? state.qualifier : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AwsLambdaFunctionEventConfigArgs | undefined;
            if ((!args || args.functionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'functionName'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["destinationConfig"] = args ? args.destinationConfig : undefined;
            resourceInputs["functionName"] = args ? args.functionName : undefined;
            resourceInputs["maxEventAgeInSeconds"] = args ? args.maxEventAgeInSeconds : undefined;
            resourceInputs["maxRetryAttempts"] = args ? args.maxRetryAttempts : undefined;
            resourceInputs["qualifier"] = args ? args.qualifier : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsLambdaFunctionEventConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsLambdaFunctionEventConfig resources.
 */
export interface AwsLambdaFunctionEventConfigState {
    /**
     * A configuration block to specify event destinations
     */
    destinationConfig?: pulumi.Input<inputs.AwsLambdaFunctionEventConfigDestinationConfig>;
    /**
     * Name of Lambda function this configuration should apply to
     */
    functionName?: pulumi.Input<string>;
    /**
     * The maximum age of a request that Lambda sends to a function for processing
     */
    maxEventAgeInSeconds?: pulumi.Input<number>;
    /**
     * Maximum number of attempts a Lambda function may retry in case of error
     */
    maxRetryAttempts?: pulumi.Input<number>;
    /**
     * The qualifier for the lambda event invoke configuration
     */
    qualifier?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the lambda asynchronous invocation configuration will be created in.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsLambdaFunctionEventConfig resource.
 */
export interface AwsLambdaFunctionEventConfigArgs {
    /**
     * A configuration block to specify event destinations
     */
    destinationConfig?: pulumi.Input<inputs.AwsLambdaFunctionEventConfigDestinationConfig>;
    /**
     * Name of Lambda function this configuration should apply to
     */
    functionName: pulumi.Input<string>;
    /**
     * The maximum age of a request that Lambda sends to a function for processing
     */
    maxEventAgeInSeconds?: pulumi.Input<number>;
    /**
     * Maximum number of attempts a Lambda function may retry in case of error
     */
    maxRetryAttempts?: pulumi.Input<number>;
    /**
     * The qualifier for the lambda event invoke configuration
     */
    qualifier?: pulumi.Input<string>;
    /**
     * The GUID of the tenant that the lambda asynchronous invocation configuration will be created in.
     */
    tenantId: pulumi.Input<string>;
}
