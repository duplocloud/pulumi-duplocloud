// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `OtherAgents` manages an other agents in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := duplocloud.NewOtherAgents(ctx, "agents", &duplocloud.OtherAgentsArgs{
//				Name: pulumi.String("duplo-agents"),
//				Agents: duplocloud.OtherAgentsAgentArray{
//					&duplocloud.OtherAgentsAgentArgs{
//						AgentName:                    pulumi.String("CloudWatchAgent_0"),
//						AgentLinuxPackagePath:        pulumi.String("https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb"),
//						LinuxAgentInstallStatusCmd:   pulumi.String("sudo service amazon-cloudwatch-agent status | grep -wc 'running'"),
//						LinuxAgentServiceName:        pulumi.String("amazon-cloudwatch-agent"),
//						LinuxAgentUninstallStatusCmd: pulumi.String("OS_FAMILY=$(cat /etc/os-release | grep PRETTY_NAME); if [[ $OS_FAMILY == *'Ubuntu'* ]]; then sudo apt-get purge --yes --force-yes amazon-cloudwatch-agent; else sudo yum remove -y AwsAgent; fi"),
//						LinuxInstallCmd:              pulumi.String("OS_FAMILY=$(cat /etc/os-release | grep PRETTY_NAME); if [[ $OS_FAMILY == *'Ubuntu'* ]]; then wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb; sudo dpkg -i -E ./amazon-cloudwatch-agent.deb; sudo wget -O /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json https://cf-templates-3qf987fmmv5g-us-east-2.s3.us-east-2.amazonaws.com/amazon-cloudwatch-agent.json; sudo service amazon-cloudwatch-agent restart; else wget https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm; sudo rpm -U ./amazon-cloudwatch-agent.rpm; sudo wget -O /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json https://cf-templates-3qf987fmmv5g-us-east-2.s3.us-east-2.amazonaws.com/amazon-cloudwatch-agent.json && sudo service amazon-cloudwatch-agent restart; fi"),
//						WindowsAgentServiceName:      pulumi.String("amazon-cloudwatch-agent"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing other agents
//
//   - *SHORTNAME* is the short name of the other agents
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/otherAgents:OtherAgents agents *SHORTNAME*
// ```
type OtherAgents struct {
	pulumi.CustomResourceState

	Agents OtherAgentsAgentArrayOutput `pulumi:"agents"`
	// Resource name to create other agents in duplo.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewOtherAgents registers a new resource with the given unique name, arguments, and options.
func NewOtherAgents(ctx *pulumi.Context,
	name string, args *OtherAgentsArgs, opts ...pulumi.ResourceOption) (*OtherAgents, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Agents == nil {
		return nil, errors.New("invalid value for required argument 'Agents'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OtherAgents
	err := ctx.RegisterResource("duplocloud:index/otherAgents:OtherAgents", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOtherAgents gets an existing OtherAgents resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOtherAgents(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OtherAgentsState, opts ...pulumi.ResourceOption) (*OtherAgents, error) {
	var resource OtherAgents
	err := ctx.ReadResource("duplocloud:index/otherAgents:OtherAgents", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OtherAgents resources.
type otherAgentsState struct {
	Agents []OtherAgentsAgent `pulumi:"agents"`
	// Resource name to create other agents in duplo.
	Name *string `pulumi:"name"`
}

type OtherAgentsState struct {
	Agents OtherAgentsAgentArrayInput
	// Resource name to create other agents in duplo.
	Name pulumi.StringPtrInput
}

func (OtherAgentsState) ElementType() reflect.Type {
	return reflect.TypeOf((*otherAgentsState)(nil)).Elem()
}

type otherAgentsArgs struct {
	Agents []OtherAgentsAgent `pulumi:"agents"`
	// Resource name to create other agents in duplo.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a OtherAgents resource.
type OtherAgentsArgs struct {
	Agents OtherAgentsAgentArrayInput
	// Resource name to create other agents in duplo.
	Name pulumi.StringPtrInput
}

func (OtherAgentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*otherAgentsArgs)(nil)).Elem()
}

type OtherAgentsInput interface {
	pulumi.Input

	ToOtherAgentsOutput() OtherAgentsOutput
	ToOtherAgentsOutputWithContext(ctx context.Context) OtherAgentsOutput
}

func (*OtherAgents) ElementType() reflect.Type {
	return reflect.TypeOf((**OtherAgents)(nil)).Elem()
}

func (i *OtherAgents) ToOtherAgentsOutput() OtherAgentsOutput {
	return i.ToOtherAgentsOutputWithContext(context.Background())
}

func (i *OtherAgents) ToOtherAgentsOutputWithContext(ctx context.Context) OtherAgentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OtherAgentsOutput)
}

// OtherAgentsArrayInput is an input type that accepts OtherAgentsArray and OtherAgentsArrayOutput values.
// You can construct a concrete instance of `OtherAgentsArrayInput` via:
//
//	OtherAgentsArray{ OtherAgentsArgs{...} }
type OtherAgentsArrayInput interface {
	pulumi.Input

	ToOtherAgentsArrayOutput() OtherAgentsArrayOutput
	ToOtherAgentsArrayOutputWithContext(context.Context) OtherAgentsArrayOutput
}

type OtherAgentsArray []OtherAgentsInput

func (OtherAgentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OtherAgents)(nil)).Elem()
}

func (i OtherAgentsArray) ToOtherAgentsArrayOutput() OtherAgentsArrayOutput {
	return i.ToOtherAgentsArrayOutputWithContext(context.Background())
}

func (i OtherAgentsArray) ToOtherAgentsArrayOutputWithContext(ctx context.Context) OtherAgentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OtherAgentsArrayOutput)
}

// OtherAgentsMapInput is an input type that accepts OtherAgentsMap and OtherAgentsMapOutput values.
// You can construct a concrete instance of `OtherAgentsMapInput` via:
//
//	OtherAgentsMap{ "key": OtherAgentsArgs{...} }
type OtherAgentsMapInput interface {
	pulumi.Input

	ToOtherAgentsMapOutput() OtherAgentsMapOutput
	ToOtherAgentsMapOutputWithContext(context.Context) OtherAgentsMapOutput
}

type OtherAgentsMap map[string]OtherAgentsInput

func (OtherAgentsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OtherAgents)(nil)).Elem()
}

func (i OtherAgentsMap) ToOtherAgentsMapOutput() OtherAgentsMapOutput {
	return i.ToOtherAgentsMapOutputWithContext(context.Background())
}

func (i OtherAgentsMap) ToOtherAgentsMapOutputWithContext(ctx context.Context) OtherAgentsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OtherAgentsMapOutput)
}

type OtherAgentsOutput struct{ *pulumi.OutputState }

func (OtherAgentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OtherAgents)(nil)).Elem()
}

func (o OtherAgentsOutput) ToOtherAgentsOutput() OtherAgentsOutput {
	return o
}

func (o OtherAgentsOutput) ToOtherAgentsOutputWithContext(ctx context.Context) OtherAgentsOutput {
	return o
}

func (o OtherAgentsOutput) Agents() OtherAgentsAgentArrayOutput {
	return o.ApplyT(func(v *OtherAgents) OtherAgentsAgentArrayOutput { return v.Agents }).(OtherAgentsAgentArrayOutput)
}

// Resource name to create other agents in duplo.
func (o OtherAgentsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OtherAgents) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type OtherAgentsArrayOutput struct{ *pulumi.OutputState }

func (OtherAgentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OtherAgents)(nil)).Elem()
}

func (o OtherAgentsArrayOutput) ToOtherAgentsArrayOutput() OtherAgentsArrayOutput {
	return o
}

func (o OtherAgentsArrayOutput) ToOtherAgentsArrayOutputWithContext(ctx context.Context) OtherAgentsArrayOutput {
	return o
}

func (o OtherAgentsArrayOutput) Index(i pulumi.IntInput) OtherAgentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OtherAgents {
		return vs[0].([]*OtherAgents)[vs[1].(int)]
	}).(OtherAgentsOutput)
}

type OtherAgentsMapOutput struct{ *pulumi.OutputState }

func (OtherAgentsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OtherAgents)(nil)).Elem()
}

func (o OtherAgentsMapOutput) ToOtherAgentsMapOutput() OtherAgentsMapOutput {
	return o
}

func (o OtherAgentsMapOutput) ToOtherAgentsMapOutputWithContext(ctx context.Context) OtherAgentsMapOutput {
	return o
}

func (o OtherAgentsMapOutput) MapIndex(k pulumi.StringInput) OtherAgentsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OtherAgents {
		return vs[0].(map[string]*OtherAgents)[vs[1].(string)]
	}).(OtherAgentsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OtherAgentsInput)(nil)).Elem(), &OtherAgents{})
	pulumi.RegisterInputType(reflect.TypeOf((*OtherAgentsArrayInput)(nil)).Elem(), OtherAgentsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OtherAgentsMapInput)(nil)).Elem(), OtherAgentsMap{})
	pulumi.RegisterOutputType(OtherAgentsOutput{})
	pulumi.RegisterOutputType(OtherAgentsArrayOutput{})
	pulumi.RegisterOutputType(OtherAgentsMapOutput{})
}
