// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsEfsFileSystem` Provides an Elastic File System (EFS) File System resource in DuploCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsEfsFileSystem(ctx, "efs", &duplocloud.AwsEfsFileSystemArgs{
//				TenantId:        myapp.TenantId,
//				Name:            pulumi.String("efs-test"),
//				PerformanceMode: pulumi.String("generalPurpose"),
//				ThroughputMode:  pulumi.String("bursting"),
//				Backup:          pulumi.Bool(false),
//				Encrypted:       pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS EFS
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *EFS_ID* is the AWS EFS ID
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsEfsFileSystem:AwsEfsFileSystem efs *TENANT_ID*/*EFS_ID*
// ```
type AwsEfsFileSystem struct {
	pulumi.CustomResourceState

	// Specifies whether automatic backups are enabled on the file system that you are creating.
	Backup pulumi.BoolOutput `pulumi:"backup"`
	// A unique name (a maximum of 64 characters are allowed) used as reference when creating the Elastic File System to ensure idempotent file system creation.
	CreationToken pulumi.StringOutput `pulumi:"creationToken"`
	// If true, the disk will be encrypted.
	Encrypted pulumi.BoolOutput `pulumi:"encrypted"`
	// Amazon Resource Name of the file system.
	FileSystemArn pulumi.StringOutput `pulumi:"fileSystemArn"`
	// The ID that identifies the file system.
	FileSystemId pulumi.StringOutput `pulumi:"fileSystemId"`
	// Duplo generated name of the EFS.
	Fullname          pulumi.StringOutput                        `pulumi:"fullname"`
	LifecyclePolicies AwsEfsFileSystemLifecyclePolicyArrayOutput `pulumi:"lifecyclePolicies"`
	MountTargets      AwsEfsFileSystemMountTargetArrayOutput     `pulumi:"mountTargets"`
	// The name of the EFS, this needs to be unique within a region.
	Name pulumi.StringOutput `pulumi:"name"`
	// The current number of mount targets that the file system has.
	NumberOfMountTargets pulumi.IntOutput `pulumi:"numberOfMountTargets"`
	// The AWS account that created the file system.
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// The file system performance mode. Can be either `generalPurpose` or `maxIO`. Defaults to `generalPurpose`.
	PerformanceMode pulumi.StringPtrOutput `pulumi:"performanceMode"`
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps pulumi.Float64Output `pulumi:"provisionedThroughputInMibps"`
	// The latest known metered size (in bytes) of data stored in the file system.
	SizeInBytes pulumi.IntOutput               `pulumi:"sizeInBytes"`
	Tags        AwsEfsFileSystemTagArrayOutput `pulumi:"tags"`
	// The GUID of the tenant that the efs file system will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Throughput mode for the file system. When using `provisioned`, also set `provisionedThroughputInMibps`. Defaults to `bursting`.
	ThroughputMode pulumi.StringPtrOutput `pulumi:"throughputMode"`
	// Whether or not to wait until EFS to be available, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrOutput `pulumi:"waitUntilReady"`
}

// NewAwsEfsFileSystem registers a new resource with the given unique name, arguments, and options.
func NewAwsEfsFileSystem(ctx *pulumi.Context,
	name string, args *AwsEfsFileSystemArgs, opts ...pulumi.ResourceOption) (*AwsEfsFileSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsEfsFileSystem
	err := ctx.RegisterResource("duplocloud:index/awsEfsFileSystem:AwsEfsFileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsEfsFileSystem gets an existing AwsEfsFileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsEfsFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsEfsFileSystemState, opts ...pulumi.ResourceOption) (*AwsEfsFileSystem, error) {
	var resource AwsEfsFileSystem
	err := ctx.ReadResource("duplocloud:index/awsEfsFileSystem:AwsEfsFileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsEfsFileSystem resources.
type awsEfsFileSystemState struct {
	// Specifies whether automatic backups are enabled on the file system that you are creating.
	Backup *bool `pulumi:"backup"`
	// A unique name (a maximum of 64 characters are allowed) used as reference when creating the Elastic File System to ensure idempotent file system creation.
	CreationToken *string `pulumi:"creationToken"`
	// If true, the disk will be encrypted.
	Encrypted *bool `pulumi:"encrypted"`
	// Amazon Resource Name of the file system.
	FileSystemArn *string `pulumi:"fileSystemArn"`
	// The ID that identifies the file system.
	FileSystemId *string `pulumi:"fileSystemId"`
	// Duplo generated name of the EFS.
	Fullname          *string                           `pulumi:"fullname"`
	LifecyclePolicies []AwsEfsFileSystemLifecyclePolicy `pulumi:"lifecyclePolicies"`
	MountTargets      []AwsEfsFileSystemMountTarget     `pulumi:"mountTargets"`
	// The name of the EFS, this needs to be unique within a region.
	Name *string `pulumi:"name"`
	// The current number of mount targets that the file system has.
	NumberOfMountTargets *int `pulumi:"numberOfMountTargets"`
	// The AWS account that created the file system.
	OwnerId *string `pulumi:"ownerId"`
	// The file system performance mode. Can be either `generalPurpose` or `maxIO`. Defaults to `generalPurpose`.
	PerformanceMode *string `pulumi:"performanceMode"`
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps *float64 `pulumi:"provisionedThroughputInMibps"`
	// The latest known metered size (in bytes) of data stored in the file system.
	SizeInBytes *int                  `pulumi:"sizeInBytes"`
	Tags        []AwsEfsFileSystemTag `pulumi:"tags"`
	// The GUID of the tenant that the efs file system will be created in.
	TenantId *string `pulumi:"tenantId"`
	// Throughput mode for the file system. When using `provisioned`, also set `provisionedThroughputInMibps`. Defaults to `bursting`.
	ThroughputMode *string `pulumi:"throughputMode"`
	// Whether or not to wait until EFS to be available, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

type AwsEfsFileSystemState struct {
	// Specifies whether automatic backups are enabled on the file system that you are creating.
	Backup pulumi.BoolPtrInput
	// A unique name (a maximum of 64 characters are allowed) used as reference when creating the Elastic File System to ensure idempotent file system creation.
	CreationToken pulumi.StringPtrInput
	// If true, the disk will be encrypted.
	Encrypted pulumi.BoolPtrInput
	// Amazon Resource Name of the file system.
	FileSystemArn pulumi.StringPtrInput
	// The ID that identifies the file system.
	FileSystemId pulumi.StringPtrInput
	// Duplo generated name of the EFS.
	Fullname          pulumi.StringPtrInput
	LifecyclePolicies AwsEfsFileSystemLifecyclePolicyArrayInput
	MountTargets      AwsEfsFileSystemMountTargetArrayInput
	// The name of the EFS, this needs to be unique within a region.
	Name pulumi.StringPtrInput
	// The current number of mount targets that the file system has.
	NumberOfMountTargets pulumi.IntPtrInput
	// The AWS account that created the file system.
	OwnerId pulumi.StringPtrInput
	// The file system performance mode. Can be either `generalPurpose` or `maxIO`. Defaults to `generalPurpose`.
	PerformanceMode pulumi.StringPtrInput
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps pulumi.Float64PtrInput
	// The latest known metered size (in bytes) of data stored in the file system.
	SizeInBytes pulumi.IntPtrInput
	Tags        AwsEfsFileSystemTagArrayInput
	// The GUID of the tenant that the efs file system will be created in.
	TenantId pulumi.StringPtrInput
	// Throughput mode for the file system. When using `provisioned`, also set `provisionedThroughputInMibps`. Defaults to `bursting`.
	ThroughputMode pulumi.StringPtrInput
	// Whether or not to wait until EFS to be available, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (AwsEfsFileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsEfsFileSystemState)(nil)).Elem()
}

type awsEfsFileSystemArgs struct {
	// Specifies whether automatic backups are enabled on the file system that you are creating.
	Backup *bool `pulumi:"backup"`
	// A unique name (a maximum of 64 characters are allowed) used as reference when creating the Elastic File System to ensure idempotent file system creation.
	CreationToken *string `pulumi:"creationToken"`
	// If true, the disk will be encrypted.
	Encrypted         *bool                             `pulumi:"encrypted"`
	LifecyclePolicies []AwsEfsFileSystemLifecyclePolicy `pulumi:"lifecyclePolicies"`
	// The name of the EFS, this needs to be unique within a region.
	Name *string `pulumi:"name"`
	// The file system performance mode. Can be either `generalPurpose` or `maxIO`. Defaults to `generalPurpose`.
	PerformanceMode *string `pulumi:"performanceMode"`
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps *float64              `pulumi:"provisionedThroughputInMibps"`
	Tags                         []AwsEfsFileSystemTag `pulumi:"tags"`
	// The GUID of the tenant that the efs file system will be created in.
	TenantId string `pulumi:"tenantId"`
	// Throughput mode for the file system. When using `provisioned`, also set `provisionedThroughputInMibps`. Defaults to `bursting`.
	ThroughputMode *string `pulumi:"throughputMode"`
	// Whether or not to wait until EFS to be available, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

// The set of arguments for constructing a AwsEfsFileSystem resource.
type AwsEfsFileSystemArgs struct {
	// Specifies whether automatic backups are enabled on the file system that you are creating.
	Backup pulumi.BoolPtrInput
	// A unique name (a maximum of 64 characters are allowed) used as reference when creating the Elastic File System to ensure idempotent file system creation.
	CreationToken pulumi.StringPtrInput
	// If true, the disk will be encrypted.
	Encrypted         pulumi.BoolPtrInput
	LifecyclePolicies AwsEfsFileSystemLifecyclePolicyArrayInput
	// The name of the EFS, this needs to be unique within a region.
	Name pulumi.StringPtrInput
	// The file system performance mode. Can be either `generalPurpose` or `maxIO`. Defaults to `generalPurpose`.
	PerformanceMode pulumi.StringPtrInput
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps pulumi.Float64PtrInput
	Tags                         AwsEfsFileSystemTagArrayInput
	// The GUID of the tenant that the efs file system will be created in.
	TenantId pulumi.StringInput
	// Throughput mode for the file system. When using `provisioned`, also set `provisionedThroughputInMibps`. Defaults to `bursting`.
	ThroughputMode pulumi.StringPtrInput
	// Whether or not to wait until EFS to be available, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (AwsEfsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsEfsFileSystemArgs)(nil)).Elem()
}

type AwsEfsFileSystemInput interface {
	pulumi.Input

	ToAwsEfsFileSystemOutput() AwsEfsFileSystemOutput
	ToAwsEfsFileSystemOutputWithContext(ctx context.Context) AwsEfsFileSystemOutput
}

func (*AwsEfsFileSystem) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsEfsFileSystem)(nil)).Elem()
}

func (i *AwsEfsFileSystem) ToAwsEfsFileSystemOutput() AwsEfsFileSystemOutput {
	return i.ToAwsEfsFileSystemOutputWithContext(context.Background())
}

func (i *AwsEfsFileSystem) ToAwsEfsFileSystemOutputWithContext(ctx context.Context) AwsEfsFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsEfsFileSystemOutput)
}

// AwsEfsFileSystemArrayInput is an input type that accepts AwsEfsFileSystemArray and AwsEfsFileSystemArrayOutput values.
// You can construct a concrete instance of `AwsEfsFileSystemArrayInput` via:
//
//	AwsEfsFileSystemArray{ AwsEfsFileSystemArgs{...} }
type AwsEfsFileSystemArrayInput interface {
	pulumi.Input

	ToAwsEfsFileSystemArrayOutput() AwsEfsFileSystemArrayOutput
	ToAwsEfsFileSystemArrayOutputWithContext(context.Context) AwsEfsFileSystemArrayOutput
}

type AwsEfsFileSystemArray []AwsEfsFileSystemInput

func (AwsEfsFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsEfsFileSystem)(nil)).Elem()
}

func (i AwsEfsFileSystemArray) ToAwsEfsFileSystemArrayOutput() AwsEfsFileSystemArrayOutput {
	return i.ToAwsEfsFileSystemArrayOutputWithContext(context.Background())
}

func (i AwsEfsFileSystemArray) ToAwsEfsFileSystemArrayOutputWithContext(ctx context.Context) AwsEfsFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsEfsFileSystemArrayOutput)
}

// AwsEfsFileSystemMapInput is an input type that accepts AwsEfsFileSystemMap and AwsEfsFileSystemMapOutput values.
// You can construct a concrete instance of `AwsEfsFileSystemMapInput` via:
//
//	AwsEfsFileSystemMap{ "key": AwsEfsFileSystemArgs{...} }
type AwsEfsFileSystemMapInput interface {
	pulumi.Input

	ToAwsEfsFileSystemMapOutput() AwsEfsFileSystemMapOutput
	ToAwsEfsFileSystemMapOutputWithContext(context.Context) AwsEfsFileSystemMapOutput
}

type AwsEfsFileSystemMap map[string]AwsEfsFileSystemInput

func (AwsEfsFileSystemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsEfsFileSystem)(nil)).Elem()
}

func (i AwsEfsFileSystemMap) ToAwsEfsFileSystemMapOutput() AwsEfsFileSystemMapOutput {
	return i.ToAwsEfsFileSystemMapOutputWithContext(context.Background())
}

func (i AwsEfsFileSystemMap) ToAwsEfsFileSystemMapOutputWithContext(ctx context.Context) AwsEfsFileSystemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsEfsFileSystemMapOutput)
}

type AwsEfsFileSystemOutput struct{ *pulumi.OutputState }

func (AwsEfsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsEfsFileSystem)(nil)).Elem()
}

func (o AwsEfsFileSystemOutput) ToAwsEfsFileSystemOutput() AwsEfsFileSystemOutput {
	return o
}

func (o AwsEfsFileSystemOutput) ToAwsEfsFileSystemOutputWithContext(ctx context.Context) AwsEfsFileSystemOutput {
	return o
}

// Specifies whether automatic backups are enabled on the file system that you are creating.
func (o AwsEfsFileSystemOutput) Backup() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.BoolOutput { return v.Backup }).(pulumi.BoolOutput)
}

// A unique name (a maximum of 64 characters are allowed) used as reference when creating the Elastic File System to ensure idempotent file system creation.
func (o AwsEfsFileSystemOutput) CreationToken() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.StringOutput { return v.CreationToken }).(pulumi.StringOutput)
}

// If true, the disk will be encrypted.
func (o AwsEfsFileSystemOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.BoolOutput { return v.Encrypted }).(pulumi.BoolOutput)
}

// Amazon Resource Name of the file system.
func (o AwsEfsFileSystemOutput) FileSystemArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.StringOutput { return v.FileSystemArn }).(pulumi.StringOutput)
}

// The ID that identifies the file system.
func (o AwsEfsFileSystemOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.StringOutput { return v.FileSystemId }).(pulumi.StringOutput)
}

// Duplo generated name of the EFS.
func (o AwsEfsFileSystemOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

func (o AwsEfsFileSystemOutput) LifecyclePolicies() AwsEfsFileSystemLifecyclePolicyArrayOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) AwsEfsFileSystemLifecyclePolicyArrayOutput { return v.LifecyclePolicies }).(AwsEfsFileSystemLifecyclePolicyArrayOutput)
}

func (o AwsEfsFileSystemOutput) MountTargets() AwsEfsFileSystemMountTargetArrayOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) AwsEfsFileSystemMountTargetArrayOutput { return v.MountTargets }).(AwsEfsFileSystemMountTargetArrayOutput)
}

// The name of the EFS, this needs to be unique within a region.
func (o AwsEfsFileSystemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current number of mount targets that the file system has.
func (o AwsEfsFileSystemOutput) NumberOfMountTargets() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.IntOutput { return v.NumberOfMountTargets }).(pulumi.IntOutput)
}

// The AWS account that created the file system.
func (o AwsEfsFileSystemOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// The file system performance mode. Can be either `generalPurpose` or `maxIO`. Defaults to `generalPurpose`.
func (o AwsEfsFileSystemOutput) PerformanceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.StringPtrOutput { return v.PerformanceMode }).(pulumi.StringPtrOutput)
}

// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
func (o AwsEfsFileSystemOutput) ProvisionedThroughputInMibps() pulumi.Float64Output {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.Float64Output { return v.ProvisionedThroughputInMibps }).(pulumi.Float64Output)
}

// The latest known metered size (in bytes) of data stored in the file system.
func (o AwsEfsFileSystemOutput) SizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.IntOutput { return v.SizeInBytes }).(pulumi.IntOutput)
}

func (o AwsEfsFileSystemOutput) Tags() AwsEfsFileSystemTagArrayOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) AwsEfsFileSystemTagArrayOutput { return v.Tags }).(AwsEfsFileSystemTagArrayOutput)
}

// The GUID of the tenant that the efs file system will be created in.
func (o AwsEfsFileSystemOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Throughput mode for the file system. When using `provisioned`, also set `provisionedThroughputInMibps`. Defaults to `bursting`.
func (o AwsEfsFileSystemOutput) ThroughputMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.StringPtrOutput { return v.ThroughputMode }).(pulumi.StringPtrOutput)
}

// Whether or not to wait until EFS to be available, after creation. Defaults to `true`.
func (o AwsEfsFileSystemOutput) WaitUntilReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsEfsFileSystem) pulumi.BoolPtrOutput { return v.WaitUntilReady }).(pulumi.BoolPtrOutput)
}

type AwsEfsFileSystemArrayOutput struct{ *pulumi.OutputState }

func (AwsEfsFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsEfsFileSystem)(nil)).Elem()
}

func (o AwsEfsFileSystemArrayOutput) ToAwsEfsFileSystemArrayOutput() AwsEfsFileSystemArrayOutput {
	return o
}

func (o AwsEfsFileSystemArrayOutput) ToAwsEfsFileSystemArrayOutputWithContext(ctx context.Context) AwsEfsFileSystemArrayOutput {
	return o
}

func (o AwsEfsFileSystemArrayOutput) Index(i pulumi.IntInput) AwsEfsFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsEfsFileSystem {
		return vs[0].([]*AwsEfsFileSystem)[vs[1].(int)]
	}).(AwsEfsFileSystemOutput)
}

type AwsEfsFileSystemMapOutput struct{ *pulumi.OutputState }

func (AwsEfsFileSystemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsEfsFileSystem)(nil)).Elem()
}

func (o AwsEfsFileSystemMapOutput) ToAwsEfsFileSystemMapOutput() AwsEfsFileSystemMapOutput {
	return o
}

func (o AwsEfsFileSystemMapOutput) ToAwsEfsFileSystemMapOutputWithContext(ctx context.Context) AwsEfsFileSystemMapOutput {
	return o
}

func (o AwsEfsFileSystemMapOutput) MapIndex(k pulumi.StringInput) AwsEfsFileSystemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsEfsFileSystem {
		return vs[0].(map[string]*AwsEfsFileSystem)[vs[1].(string)]
	}).(AwsEfsFileSystemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsEfsFileSystemInput)(nil)).Elem(), &AwsEfsFileSystem{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsEfsFileSystemArrayInput)(nil)).Elem(), AwsEfsFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsEfsFileSystemMapInput)(nil)).Elem(), AwsEfsFileSystemMap{})
	pulumi.RegisterOutputType(AwsEfsFileSystemOutput{})
	pulumi.RegisterOutputType(AwsEfsFileSystemArrayOutput{})
	pulumi.RegisterOutputType(AwsEfsFileSystemMapOutput{})
}
