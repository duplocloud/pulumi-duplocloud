// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `EmrCluster` lists EmrClusters in a Duplo tenant.
func LookupEmrCluster(ctx *pulumi.Context, args *LookupEmrClusterArgs, opts ...pulumi.InvokeOption) (*LookupEmrClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEmrClusterResult
	err := ctx.Invoke("duplocloud:index/getEmrCluster:getEmrCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEmrCluster.
type LookupEmrClusterArgs struct {
	// The GUID of the tenant in which to list the hosts.
	TenantId string `pulumi:"tenantId"`
}

// A collection of values returned by getEmrCluster.
type LookupEmrClusterResult struct {
	// The list of native hosts.
	Datas []GetEmrClusterData `pulumi:"datas"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The GUID of the tenant in which to list the hosts.
	TenantId string `pulumi:"tenantId"`
}

func LookupEmrClusterOutput(ctx *pulumi.Context, args LookupEmrClusterOutputArgs, opts ...pulumi.InvokeOption) LookupEmrClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEmrClusterResultOutput, error) {
			args := v.(LookupEmrClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getEmrCluster:getEmrCluster", args, LookupEmrClusterResultOutput{}, options).(LookupEmrClusterResultOutput), nil
		}).(LookupEmrClusterResultOutput)
}

// A collection of arguments for invoking getEmrCluster.
type LookupEmrClusterOutputArgs struct {
	// The GUID of the tenant in which to list the hosts.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (LookupEmrClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmrClusterArgs)(nil)).Elem()
}

// A collection of values returned by getEmrCluster.
type LookupEmrClusterResultOutput struct{ *pulumi.OutputState }

func (LookupEmrClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmrClusterResult)(nil)).Elem()
}

func (o LookupEmrClusterResultOutput) ToLookupEmrClusterResultOutput() LookupEmrClusterResultOutput {
	return o
}

func (o LookupEmrClusterResultOutput) ToLookupEmrClusterResultOutputWithContext(ctx context.Context) LookupEmrClusterResultOutput {
	return o
}

// The list of native hosts.
func (o LookupEmrClusterResultOutput) Datas() GetEmrClusterDataArrayOutput {
	return o.ApplyT(func(v LookupEmrClusterResult) []GetEmrClusterData { return v.Datas }).(GetEmrClusterDataArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupEmrClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmrClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The GUID of the tenant in which to list the hosts.
func (o LookupEmrClusterResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmrClusterResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEmrClusterResultOutput{})
}
