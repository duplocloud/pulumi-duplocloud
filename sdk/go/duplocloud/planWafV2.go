// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `PlanWafV2` manages the list of waf's avaialble to a plan in Duplo.
//
// This resource allows you take control of individual waf's for a specific plan.
type PlanWafV2 struct {
	pulumi.CustomResourceState

	// Whether or not this resource should delete any wafs not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedWafs pulumi.BoolPtrOutput `pulumi:"deleteUnspecifiedWafs"`
	// The ID of the plan for waf.
	PlanId pulumi.StringOutput `pulumi:"planId"`
	// A list of wafs names being managed by this resource.
	SpecifiedWafs pulumi.StringArrayOutput `pulumi:"specifiedWafs"`
	Waf           PlanWafV2WafArrayOutput  `pulumi:"waf"`
	// A complete list of wafs for this plan, even ones not being managed by this resource.
	Wafs PlanWafV2WafArrayOutput `pulumi:"wafs"`
}

// NewPlanWafV2 registers a new resource with the given unique name, arguments, and options.
func NewPlanWafV2(ctx *pulumi.Context,
	name string, args *PlanWafV2Args, opts ...pulumi.ResourceOption) (*PlanWafV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PlanId == nil {
		return nil, errors.New("invalid value for required argument 'PlanId'")
	}
	if args.Waf == nil {
		return nil, errors.New("invalid value for required argument 'Waf'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PlanWafV2
	err := ctx.RegisterResource("duplocloud:index/planWafV2:PlanWafV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlanWafV2 gets an existing PlanWafV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlanWafV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlanWafV2State, opts ...pulumi.ResourceOption) (*PlanWafV2, error) {
	var resource PlanWafV2
	err := ctx.ReadResource("duplocloud:index/planWafV2:PlanWafV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlanWafV2 resources.
type planWafV2State struct {
	// Whether or not this resource should delete any wafs not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedWafs *bool `pulumi:"deleteUnspecifiedWafs"`
	// The ID of the plan for waf.
	PlanId *string `pulumi:"planId"`
	// A list of wafs names being managed by this resource.
	SpecifiedWafs []string       `pulumi:"specifiedWafs"`
	Waf           []PlanWafV2Waf `pulumi:"waf"`
	// A complete list of wafs for this plan, even ones not being managed by this resource.
	Wafs []PlanWafV2Waf `pulumi:"wafs"`
}

type PlanWafV2State struct {
	// Whether or not this resource should delete any wafs not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedWafs pulumi.BoolPtrInput
	// The ID of the plan for waf.
	PlanId pulumi.StringPtrInput
	// A list of wafs names being managed by this resource.
	SpecifiedWafs pulumi.StringArrayInput
	Waf           PlanWafV2WafArrayInput
	// A complete list of wafs for this plan, even ones not being managed by this resource.
	Wafs PlanWafV2WafArrayInput
}

func (PlanWafV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*planWafV2State)(nil)).Elem()
}

type planWafV2Args struct {
	// Whether or not this resource should delete any wafs not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedWafs *bool `pulumi:"deleteUnspecifiedWafs"`
	// The ID of the plan for waf.
	PlanId string         `pulumi:"planId"`
	Waf    []PlanWafV2Waf `pulumi:"waf"`
}

// The set of arguments for constructing a PlanWafV2 resource.
type PlanWafV2Args struct {
	// Whether or not this resource should delete any wafs not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedWafs pulumi.BoolPtrInput
	// The ID of the plan for waf.
	PlanId pulumi.StringInput
	Waf    PlanWafV2WafArrayInput
}

func (PlanWafV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*planWafV2Args)(nil)).Elem()
}

type PlanWafV2Input interface {
	pulumi.Input

	ToPlanWafV2Output() PlanWafV2Output
	ToPlanWafV2OutputWithContext(ctx context.Context) PlanWafV2Output
}

func (*PlanWafV2) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanWafV2)(nil)).Elem()
}

func (i *PlanWafV2) ToPlanWafV2Output() PlanWafV2Output {
	return i.ToPlanWafV2OutputWithContext(context.Background())
}

func (i *PlanWafV2) ToPlanWafV2OutputWithContext(ctx context.Context) PlanWafV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(PlanWafV2Output)
}

// PlanWafV2ArrayInput is an input type that accepts PlanWafV2Array and PlanWafV2ArrayOutput values.
// You can construct a concrete instance of `PlanWafV2ArrayInput` via:
//
//	PlanWafV2Array{ PlanWafV2Args{...} }
type PlanWafV2ArrayInput interface {
	pulumi.Input

	ToPlanWafV2ArrayOutput() PlanWafV2ArrayOutput
	ToPlanWafV2ArrayOutputWithContext(context.Context) PlanWafV2ArrayOutput
}

type PlanWafV2Array []PlanWafV2Input

func (PlanWafV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlanWafV2)(nil)).Elem()
}

func (i PlanWafV2Array) ToPlanWafV2ArrayOutput() PlanWafV2ArrayOutput {
	return i.ToPlanWafV2ArrayOutputWithContext(context.Background())
}

func (i PlanWafV2Array) ToPlanWafV2ArrayOutputWithContext(ctx context.Context) PlanWafV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanWafV2ArrayOutput)
}

// PlanWafV2MapInput is an input type that accepts PlanWafV2Map and PlanWafV2MapOutput values.
// You can construct a concrete instance of `PlanWafV2MapInput` via:
//
//	PlanWafV2Map{ "key": PlanWafV2Args{...} }
type PlanWafV2MapInput interface {
	pulumi.Input

	ToPlanWafV2MapOutput() PlanWafV2MapOutput
	ToPlanWafV2MapOutputWithContext(context.Context) PlanWafV2MapOutput
}

type PlanWafV2Map map[string]PlanWafV2Input

func (PlanWafV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlanWafV2)(nil)).Elem()
}

func (i PlanWafV2Map) ToPlanWafV2MapOutput() PlanWafV2MapOutput {
	return i.ToPlanWafV2MapOutputWithContext(context.Background())
}

func (i PlanWafV2Map) ToPlanWafV2MapOutputWithContext(ctx context.Context) PlanWafV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanWafV2MapOutput)
}

type PlanWafV2Output struct{ *pulumi.OutputState }

func (PlanWafV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanWafV2)(nil)).Elem()
}

func (o PlanWafV2Output) ToPlanWafV2Output() PlanWafV2Output {
	return o
}

func (o PlanWafV2Output) ToPlanWafV2OutputWithContext(ctx context.Context) PlanWafV2Output {
	return o
}

// Whether or not this resource should delete any wafs not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
func (o PlanWafV2Output) DeleteUnspecifiedWafs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PlanWafV2) pulumi.BoolPtrOutput { return v.DeleteUnspecifiedWafs }).(pulumi.BoolPtrOutput)
}

// The ID of the plan for waf.
func (o PlanWafV2Output) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *PlanWafV2) pulumi.StringOutput { return v.PlanId }).(pulumi.StringOutput)
}

// A list of wafs names being managed by this resource.
func (o PlanWafV2Output) SpecifiedWafs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PlanWafV2) pulumi.StringArrayOutput { return v.SpecifiedWafs }).(pulumi.StringArrayOutput)
}

func (o PlanWafV2Output) Waf() PlanWafV2WafArrayOutput {
	return o.ApplyT(func(v *PlanWafV2) PlanWafV2WafArrayOutput { return v.Waf }).(PlanWafV2WafArrayOutput)
}

// A complete list of wafs for this plan, even ones not being managed by this resource.
func (o PlanWafV2Output) Wafs() PlanWafV2WafArrayOutput {
	return o.ApplyT(func(v *PlanWafV2) PlanWafV2WafArrayOutput { return v.Wafs }).(PlanWafV2WafArrayOutput)
}

type PlanWafV2ArrayOutput struct{ *pulumi.OutputState }

func (PlanWafV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlanWafV2)(nil)).Elem()
}

func (o PlanWafV2ArrayOutput) ToPlanWafV2ArrayOutput() PlanWafV2ArrayOutput {
	return o
}

func (o PlanWafV2ArrayOutput) ToPlanWafV2ArrayOutputWithContext(ctx context.Context) PlanWafV2ArrayOutput {
	return o
}

func (o PlanWafV2ArrayOutput) Index(i pulumi.IntInput) PlanWafV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PlanWafV2 {
		return vs[0].([]*PlanWafV2)[vs[1].(int)]
	}).(PlanWafV2Output)
}

type PlanWafV2MapOutput struct{ *pulumi.OutputState }

func (PlanWafV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlanWafV2)(nil)).Elem()
}

func (o PlanWafV2MapOutput) ToPlanWafV2MapOutput() PlanWafV2MapOutput {
	return o
}

func (o PlanWafV2MapOutput) ToPlanWafV2MapOutputWithContext(ctx context.Context) PlanWafV2MapOutput {
	return o
}

func (o PlanWafV2MapOutput) MapIndex(k pulumi.StringInput) PlanWafV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PlanWafV2 {
		return vs[0].(map[string]*PlanWafV2)[vs[1].(string)]
	}).(PlanWafV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PlanWafV2Input)(nil)).Elem(), &PlanWafV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlanWafV2ArrayInput)(nil)).Elem(), PlanWafV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlanWafV2MapInput)(nil)).Elem(), PlanWafV2Map{})
	pulumi.RegisterOutputType(PlanWafV2Output{})
	pulumi.RegisterOutputType(PlanWafV2ArrayOutput{})
	pulumi.RegisterOutputType(PlanWafV2MapOutput{})
}
