// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `getK8ConfigMaps` lists all kubernetes configmaps in a Duplo tenant.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := duplocloud.GetK8ConfigMaps(ctx, &duplocloud.GetK8ConfigMapsArgs{
//				TenantId: tenantId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("configMaps", test.ConfigMaps)
//			return nil
//		})
//	}
//
// ```
func GetK8ConfigMaps(ctx *pulumi.Context, args *GetK8ConfigMapsArgs, opts ...pulumi.InvokeOption) (*GetK8ConfigMapsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetK8ConfigMapsResult
	err := ctx.Invoke("duplocloud:index/getK8ConfigMaps:getK8ConfigMaps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getK8ConfigMaps.
type GetK8ConfigMapsArgs struct {
	TenantId string `pulumi:"tenantId"`
}

// A collection of values returned by getK8ConfigMaps.
type GetK8ConfigMapsResult struct {
	ConfigMaps []GetK8ConfigMapsConfigMap `pulumi:"configMaps"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	TenantId string `pulumi:"tenantId"`
}

func GetK8ConfigMapsOutput(ctx *pulumi.Context, args GetK8ConfigMapsOutputArgs, opts ...pulumi.InvokeOption) GetK8ConfigMapsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetK8ConfigMapsResultOutput, error) {
			args := v.(GetK8ConfigMapsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getK8ConfigMaps:getK8ConfigMaps", args, GetK8ConfigMapsResultOutput{}, options).(GetK8ConfigMapsResultOutput), nil
		}).(GetK8ConfigMapsResultOutput)
}

// A collection of arguments for invoking getK8ConfigMaps.
type GetK8ConfigMapsOutputArgs struct {
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetK8ConfigMapsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8ConfigMapsArgs)(nil)).Elem()
}

// A collection of values returned by getK8ConfigMaps.
type GetK8ConfigMapsResultOutput struct{ *pulumi.OutputState }

func (GetK8ConfigMapsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8ConfigMapsResult)(nil)).Elem()
}

func (o GetK8ConfigMapsResultOutput) ToGetK8ConfigMapsResultOutput() GetK8ConfigMapsResultOutput {
	return o
}

func (o GetK8ConfigMapsResultOutput) ToGetK8ConfigMapsResultOutputWithContext(ctx context.Context) GetK8ConfigMapsResultOutput {
	return o
}

func (o GetK8ConfigMapsResultOutput) ConfigMaps() GetK8ConfigMapsConfigMapArrayOutput {
	return o.ApplyT(func(v GetK8ConfigMapsResult) []GetK8ConfigMapsConfigMap { return v.ConfigMaps }).(GetK8ConfigMapsConfigMapArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetK8ConfigMapsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8ConfigMapsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetK8ConfigMapsResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8ConfigMapsResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetK8ConfigMapsResultOutput{})
}
