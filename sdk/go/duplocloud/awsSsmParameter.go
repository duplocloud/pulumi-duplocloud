// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsSsmParameter` manages an AWS SSM parameter in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsSsmParameter(ctx, "ssm_param", &duplocloud.AwsSsmParameterArgs{
//				TenantId: myapp.TenantId,
//				Name:     pulumi.String("ssm_param"),
//				Type:     pulumi.String("String"),
//				Value:    pulumi.String("ssm_param_value"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS SSM Parameter
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *NAME* The name for the created Amazon SSM Parameter.
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsSsmParameter:AwsSsmParameter ssm_param *TENANT_ID*/*NAME*
// ```
type AwsSsmParameter struct {
	pulumi.CustomResourceState

	AllowedPattern pulumi.StringOutput `pulumi:"allowedPattern"`
	// The description of the SSM parameter.
	Description      pulumi.StringOutput `pulumi:"description"`
	KeyId            pulumi.StringOutput `pulumi:"keyId"`
	LastModifiedDate pulumi.StringOutput `pulumi:"lastModifiedDate"`
	LastModifiedUser pulumi.StringOutput `pulumi:"lastModifiedUser"`
	// The name of the SSM parameter.
	Name pulumi.StringOutput `pulumi:"name"`
	// The GUID of the tenant that the SSM parameter will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The type of the SSM parameter. Valid values are `String`, `StringList`, and `SecureString`.
	Type pulumi.StringOutput `pulumi:"type"`
	// The value of the SSM parameter.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewAwsSsmParameter registers a new resource with the given unique name, arguments, and options.
func NewAwsSsmParameter(ctx *pulumi.Context,
	name string, args *AwsSsmParameterArgs, opts ...pulumi.ResourceOption) (*AwsSsmParameter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	if args.Value != nil {
		args.Value = pulumi.ToSecret(args.Value).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"value",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsSsmParameter
	err := ctx.RegisterResource("duplocloud:index/awsSsmParameter:AwsSsmParameter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsSsmParameter gets an existing AwsSsmParameter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsSsmParameter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsSsmParameterState, opts ...pulumi.ResourceOption) (*AwsSsmParameter, error) {
	var resource AwsSsmParameter
	err := ctx.ReadResource("duplocloud:index/awsSsmParameter:AwsSsmParameter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsSsmParameter resources.
type awsSsmParameterState struct {
	AllowedPattern *string `pulumi:"allowedPattern"`
	// The description of the SSM parameter.
	Description      *string `pulumi:"description"`
	KeyId            *string `pulumi:"keyId"`
	LastModifiedDate *string `pulumi:"lastModifiedDate"`
	LastModifiedUser *string `pulumi:"lastModifiedUser"`
	// The name of the SSM parameter.
	Name *string `pulumi:"name"`
	// The GUID of the tenant that the SSM parameter will be created in.
	TenantId *string `pulumi:"tenantId"`
	// The type of the SSM parameter. Valid values are `String`, `StringList`, and `SecureString`.
	Type *string `pulumi:"type"`
	// The value of the SSM parameter.
	Value *string `pulumi:"value"`
}

type AwsSsmParameterState struct {
	AllowedPattern pulumi.StringPtrInput
	// The description of the SSM parameter.
	Description      pulumi.StringPtrInput
	KeyId            pulumi.StringPtrInput
	LastModifiedDate pulumi.StringPtrInput
	LastModifiedUser pulumi.StringPtrInput
	// The name of the SSM parameter.
	Name pulumi.StringPtrInput
	// The GUID of the tenant that the SSM parameter will be created in.
	TenantId pulumi.StringPtrInput
	// The type of the SSM parameter. Valid values are `String`, `StringList`, and `SecureString`.
	Type pulumi.StringPtrInput
	// The value of the SSM parameter.
	Value pulumi.StringPtrInput
}

func (AwsSsmParameterState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsSsmParameterState)(nil)).Elem()
}

type awsSsmParameterArgs struct {
	AllowedPattern *string `pulumi:"allowedPattern"`
	// The description of the SSM parameter.
	Description *string `pulumi:"description"`
	KeyId       *string `pulumi:"keyId"`
	// The name of the SSM parameter.
	Name *string `pulumi:"name"`
	// The GUID of the tenant that the SSM parameter will be created in.
	TenantId string `pulumi:"tenantId"`
	// The type of the SSM parameter. Valid values are `String`, `StringList`, and `SecureString`.
	Type string `pulumi:"type"`
	// The value of the SSM parameter.
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a AwsSsmParameter resource.
type AwsSsmParameterArgs struct {
	AllowedPattern pulumi.StringPtrInput
	// The description of the SSM parameter.
	Description pulumi.StringPtrInput
	KeyId       pulumi.StringPtrInput
	// The name of the SSM parameter.
	Name pulumi.StringPtrInput
	// The GUID of the tenant that the SSM parameter will be created in.
	TenantId pulumi.StringInput
	// The type of the SSM parameter. Valid values are `String`, `StringList`, and `SecureString`.
	Type pulumi.StringInput
	// The value of the SSM parameter.
	Value pulumi.StringInput
}

func (AwsSsmParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsSsmParameterArgs)(nil)).Elem()
}

type AwsSsmParameterInput interface {
	pulumi.Input

	ToAwsSsmParameterOutput() AwsSsmParameterOutput
	ToAwsSsmParameterOutputWithContext(ctx context.Context) AwsSsmParameterOutput
}

func (*AwsSsmParameter) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSsmParameter)(nil)).Elem()
}

func (i *AwsSsmParameter) ToAwsSsmParameterOutput() AwsSsmParameterOutput {
	return i.ToAwsSsmParameterOutputWithContext(context.Background())
}

func (i *AwsSsmParameter) ToAwsSsmParameterOutputWithContext(ctx context.Context) AwsSsmParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSsmParameterOutput)
}

// AwsSsmParameterArrayInput is an input type that accepts AwsSsmParameterArray and AwsSsmParameterArrayOutput values.
// You can construct a concrete instance of `AwsSsmParameterArrayInput` via:
//
//	AwsSsmParameterArray{ AwsSsmParameterArgs{...} }
type AwsSsmParameterArrayInput interface {
	pulumi.Input

	ToAwsSsmParameterArrayOutput() AwsSsmParameterArrayOutput
	ToAwsSsmParameterArrayOutputWithContext(context.Context) AwsSsmParameterArrayOutput
}

type AwsSsmParameterArray []AwsSsmParameterInput

func (AwsSsmParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsSsmParameter)(nil)).Elem()
}

func (i AwsSsmParameterArray) ToAwsSsmParameterArrayOutput() AwsSsmParameterArrayOutput {
	return i.ToAwsSsmParameterArrayOutputWithContext(context.Background())
}

func (i AwsSsmParameterArray) ToAwsSsmParameterArrayOutputWithContext(ctx context.Context) AwsSsmParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSsmParameterArrayOutput)
}

// AwsSsmParameterMapInput is an input type that accepts AwsSsmParameterMap and AwsSsmParameterMapOutput values.
// You can construct a concrete instance of `AwsSsmParameterMapInput` via:
//
//	AwsSsmParameterMap{ "key": AwsSsmParameterArgs{...} }
type AwsSsmParameterMapInput interface {
	pulumi.Input

	ToAwsSsmParameterMapOutput() AwsSsmParameterMapOutput
	ToAwsSsmParameterMapOutputWithContext(context.Context) AwsSsmParameterMapOutput
}

type AwsSsmParameterMap map[string]AwsSsmParameterInput

func (AwsSsmParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsSsmParameter)(nil)).Elem()
}

func (i AwsSsmParameterMap) ToAwsSsmParameterMapOutput() AwsSsmParameterMapOutput {
	return i.ToAwsSsmParameterMapOutputWithContext(context.Background())
}

func (i AwsSsmParameterMap) ToAwsSsmParameterMapOutputWithContext(ctx context.Context) AwsSsmParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSsmParameterMapOutput)
}

type AwsSsmParameterOutput struct{ *pulumi.OutputState }

func (AwsSsmParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSsmParameter)(nil)).Elem()
}

func (o AwsSsmParameterOutput) ToAwsSsmParameterOutput() AwsSsmParameterOutput {
	return o
}

func (o AwsSsmParameterOutput) ToAwsSsmParameterOutputWithContext(ctx context.Context) AwsSsmParameterOutput {
	return o
}

func (o AwsSsmParameterOutput) AllowedPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSsmParameter) pulumi.StringOutput { return v.AllowedPattern }).(pulumi.StringOutput)
}

// The description of the SSM parameter.
func (o AwsSsmParameterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSsmParameter) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o AwsSsmParameterOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSsmParameter) pulumi.StringOutput { return v.KeyId }).(pulumi.StringOutput)
}

func (o AwsSsmParameterOutput) LastModifiedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSsmParameter) pulumi.StringOutput { return v.LastModifiedDate }).(pulumi.StringOutput)
}

func (o AwsSsmParameterOutput) LastModifiedUser() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSsmParameter) pulumi.StringOutput { return v.LastModifiedUser }).(pulumi.StringOutput)
}

// The name of the SSM parameter.
func (o AwsSsmParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSsmParameter) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The GUID of the tenant that the SSM parameter will be created in.
func (o AwsSsmParameterOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSsmParameter) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The type of the SSM parameter. Valid values are `String`, `StringList`, and `SecureString`.
func (o AwsSsmParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSsmParameter) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The value of the SSM parameter.
func (o AwsSsmParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSsmParameter) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type AwsSsmParameterArrayOutput struct{ *pulumi.OutputState }

func (AwsSsmParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsSsmParameter)(nil)).Elem()
}

func (o AwsSsmParameterArrayOutput) ToAwsSsmParameterArrayOutput() AwsSsmParameterArrayOutput {
	return o
}

func (o AwsSsmParameterArrayOutput) ToAwsSsmParameterArrayOutputWithContext(ctx context.Context) AwsSsmParameterArrayOutput {
	return o
}

func (o AwsSsmParameterArrayOutput) Index(i pulumi.IntInput) AwsSsmParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsSsmParameter {
		return vs[0].([]*AwsSsmParameter)[vs[1].(int)]
	}).(AwsSsmParameterOutput)
}

type AwsSsmParameterMapOutput struct{ *pulumi.OutputState }

func (AwsSsmParameterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsSsmParameter)(nil)).Elem()
}

func (o AwsSsmParameterMapOutput) ToAwsSsmParameterMapOutput() AwsSsmParameterMapOutput {
	return o
}

func (o AwsSsmParameterMapOutput) ToAwsSsmParameterMapOutputWithContext(ctx context.Context) AwsSsmParameterMapOutput {
	return o
}

func (o AwsSsmParameterMapOutput) MapIndex(k pulumi.StringInput) AwsSsmParameterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsSsmParameter {
		return vs[0].(map[string]*AwsSsmParameter)[vs[1].(string)]
	}).(AwsSsmParameterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSsmParameterInput)(nil)).Elem(), &AwsSsmParameter{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSsmParameterArrayInput)(nil)).Elem(), AwsSsmParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSsmParameterMapInput)(nil)).Elem(), AwsSsmParameterMap{})
	pulumi.RegisterOutputType(AwsSsmParameterOutput{})
	pulumi.RegisterOutputType(AwsSsmParameterArrayOutput{})
	pulumi.RegisterOutputType(AwsSsmParameterMapOutput{})
}
