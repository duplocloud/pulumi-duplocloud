// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsSnsTopic` manages a SNS topic in Duplo.
//
// ## Import
//
// Example: Importing an existing AWS SNS Topic
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *ARN* The ARN of the created Amazon SNS Topic.
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsSnsTopic:AwsSnsTopic sns_topic *TENANT_ID*/*ARN*
// ```
type AwsSnsTopic struct {
	pulumi.CustomResourceState

	// The ARN of the SNS topic.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Whether to enable content based deduplication for fifo type SNS topics Defaults to `false`.
	FifoContentBasedDeduplication pulumi.BoolPtrOutput `pulumi:"fifoContentBasedDeduplication"`
	// Whether the topic processes messages as fifo or not Defaults to `false`.
	FifoTopic pulumi.BoolPtrOutput `pulumi:"fifoTopic"`
	// The full name of the SNS topic.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long.
	Name pulumi.StringOutput `pulumi:"name"`
	// The GUID of the tenant that the SNS topic will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAwsSnsTopic registers a new resource with the given unique name, arguments, and options.
func NewAwsSnsTopic(ctx *pulumi.Context,
	name string, args *AwsSnsTopicArgs, opts ...pulumi.ResourceOption) (*AwsSnsTopic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsSnsTopic
	err := ctx.RegisterResource("duplocloud:index/awsSnsTopic:AwsSnsTopic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsSnsTopic gets an existing AwsSnsTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsSnsTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsSnsTopicState, opts ...pulumi.ResourceOption) (*AwsSnsTopic, error) {
	var resource AwsSnsTopic
	err := ctx.ReadResource("duplocloud:index/awsSnsTopic:AwsSnsTopic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsSnsTopic resources.
type awsSnsTopicState struct {
	// The ARN of the SNS topic.
	Arn *string `pulumi:"arn"`
	// Whether to enable content based deduplication for fifo type SNS topics Defaults to `false`.
	FifoContentBasedDeduplication *bool `pulumi:"fifoContentBasedDeduplication"`
	// Whether the topic processes messages as fifo or not Defaults to `false`.
	FifoTopic *bool `pulumi:"fifoTopic"`
	// The full name of the SNS topic.
	Fullname *string `pulumi:"fullname"`
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long.
	Name *string `pulumi:"name"`
	// The GUID of the tenant that the SNS topic will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AwsSnsTopicState struct {
	// The ARN of the SNS topic.
	Arn pulumi.StringPtrInput
	// Whether to enable content based deduplication for fifo type SNS topics Defaults to `false`.
	FifoContentBasedDeduplication pulumi.BoolPtrInput
	// Whether the topic processes messages as fifo or not Defaults to `false`.
	FifoTopic pulumi.BoolPtrInput
	// The full name of the SNS topic.
	Fullname pulumi.StringPtrInput
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK.
	KmsKeyId pulumi.StringPtrInput
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long.
	Name pulumi.StringPtrInput
	// The GUID of the tenant that the SNS topic will be created in.
	TenantId pulumi.StringPtrInput
}

func (AwsSnsTopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsSnsTopicState)(nil)).Elem()
}

type awsSnsTopicArgs struct {
	// Whether to enable content based deduplication for fifo type SNS topics Defaults to `false`.
	FifoContentBasedDeduplication *bool `pulumi:"fifoContentBasedDeduplication"`
	// Whether the topic processes messages as fifo or not Defaults to `false`.
	FifoTopic *bool `pulumi:"fifoTopic"`
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long.
	Name *string `pulumi:"name"`
	// The GUID of the tenant that the SNS topic will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AwsSnsTopic resource.
type AwsSnsTopicArgs struct {
	// Whether to enable content based deduplication for fifo type SNS topics Defaults to `false`.
	FifoContentBasedDeduplication pulumi.BoolPtrInput
	// Whether the topic processes messages as fifo or not Defaults to `false`.
	FifoTopic pulumi.BoolPtrInput
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK.
	KmsKeyId pulumi.StringPtrInput
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long.
	Name pulumi.StringPtrInput
	// The GUID of the tenant that the SNS topic will be created in.
	TenantId pulumi.StringInput
}

func (AwsSnsTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsSnsTopicArgs)(nil)).Elem()
}

type AwsSnsTopicInput interface {
	pulumi.Input

	ToAwsSnsTopicOutput() AwsSnsTopicOutput
	ToAwsSnsTopicOutputWithContext(ctx context.Context) AwsSnsTopicOutput
}

func (*AwsSnsTopic) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSnsTopic)(nil)).Elem()
}

func (i *AwsSnsTopic) ToAwsSnsTopicOutput() AwsSnsTopicOutput {
	return i.ToAwsSnsTopicOutputWithContext(context.Background())
}

func (i *AwsSnsTopic) ToAwsSnsTopicOutputWithContext(ctx context.Context) AwsSnsTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSnsTopicOutput)
}

// AwsSnsTopicArrayInput is an input type that accepts AwsSnsTopicArray and AwsSnsTopicArrayOutput values.
// You can construct a concrete instance of `AwsSnsTopicArrayInput` via:
//
//	AwsSnsTopicArray{ AwsSnsTopicArgs{...} }
type AwsSnsTopicArrayInput interface {
	pulumi.Input

	ToAwsSnsTopicArrayOutput() AwsSnsTopicArrayOutput
	ToAwsSnsTopicArrayOutputWithContext(context.Context) AwsSnsTopicArrayOutput
}

type AwsSnsTopicArray []AwsSnsTopicInput

func (AwsSnsTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsSnsTopic)(nil)).Elem()
}

func (i AwsSnsTopicArray) ToAwsSnsTopicArrayOutput() AwsSnsTopicArrayOutput {
	return i.ToAwsSnsTopicArrayOutputWithContext(context.Background())
}

func (i AwsSnsTopicArray) ToAwsSnsTopicArrayOutputWithContext(ctx context.Context) AwsSnsTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSnsTopicArrayOutput)
}

// AwsSnsTopicMapInput is an input type that accepts AwsSnsTopicMap and AwsSnsTopicMapOutput values.
// You can construct a concrete instance of `AwsSnsTopicMapInput` via:
//
//	AwsSnsTopicMap{ "key": AwsSnsTopicArgs{...} }
type AwsSnsTopicMapInput interface {
	pulumi.Input

	ToAwsSnsTopicMapOutput() AwsSnsTopicMapOutput
	ToAwsSnsTopicMapOutputWithContext(context.Context) AwsSnsTopicMapOutput
}

type AwsSnsTopicMap map[string]AwsSnsTopicInput

func (AwsSnsTopicMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsSnsTopic)(nil)).Elem()
}

func (i AwsSnsTopicMap) ToAwsSnsTopicMapOutput() AwsSnsTopicMapOutput {
	return i.ToAwsSnsTopicMapOutputWithContext(context.Background())
}

func (i AwsSnsTopicMap) ToAwsSnsTopicMapOutputWithContext(ctx context.Context) AwsSnsTopicMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSnsTopicMapOutput)
}

type AwsSnsTopicOutput struct{ *pulumi.OutputState }

func (AwsSnsTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSnsTopic)(nil)).Elem()
}

func (o AwsSnsTopicOutput) ToAwsSnsTopicOutput() AwsSnsTopicOutput {
	return o
}

func (o AwsSnsTopicOutput) ToAwsSnsTopicOutputWithContext(ctx context.Context) AwsSnsTopicOutput {
	return o
}

// The ARN of the SNS topic.
func (o AwsSnsTopicOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSnsTopic) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Whether to enable content based deduplication for fifo type SNS topics Defaults to `false`.
func (o AwsSnsTopicOutput) FifoContentBasedDeduplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsSnsTopic) pulumi.BoolPtrOutput { return v.FifoContentBasedDeduplication }).(pulumi.BoolPtrOutput)
}

// Whether the topic processes messages as fifo or not Defaults to `false`.
func (o AwsSnsTopicOutput) FifoTopic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsSnsTopic) pulumi.BoolPtrOutput { return v.FifoTopic }).(pulumi.BoolPtrOutput)
}

// The full name of the SNS topic.
func (o AwsSnsTopicOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSnsTopic) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK.
func (o AwsSnsTopicOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSnsTopic) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long.
func (o AwsSnsTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSnsTopic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The GUID of the tenant that the SNS topic will be created in.
func (o AwsSnsTopicOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsSnsTopic) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AwsSnsTopicArrayOutput struct{ *pulumi.OutputState }

func (AwsSnsTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsSnsTopic)(nil)).Elem()
}

func (o AwsSnsTopicArrayOutput) ToAwsSnsTopicArrayOutput() AwsSnsTopicArrayOutput {
	return o
}

func (o AwsSnsTopicArrayOutput) ToAwsSnsTopicArrayOutputWithContext(ctx context.Context) AwsSnsTopicArrayOutput {
	return o
}

func (o AwsSnsTopicArrayOutput) Index(i pulumi.IntInput) AwsSnsTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsSnsTopic {
		return vs[0].([]*AwsSnsTopic)[vs[1].(int)]
	}).(AwsSnsTopicOutput)
}

type AwsSnsTopicMapOutput struct{ *pulumi.OutputState }

func (AwsSnsTopicMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsSnsTopic)(nil)).Elem()
}

func (o AwsSnsTopicMapOutput) ToAwsSnsTopicMapOutput() AwsSnsTopicMapOutput {
	return o
}

func (o AwsSnsTopicMapOutput) ToAwsSnsTopicMapOutputWithContext(ctx context.Context) AwsSnsTopicMapOutput {
	return o
}

func (o AwsSnsTopicMapOutput) MapIndex(k pulumi.StringInput) AwsSnsTopicOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsSnsTopic {
		return vs[0].(map[string]*AwsSnsTopic)[vs[1].(string)]
	}).(AwsSnsTopicOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSnsTopicInput)(nil)).Elem(), &AwsSnsTopic{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSnsTopicArrayInput)(nil)).Elem(), AwsSnsTopicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSnsTopicMapInput)(nil)).Elem(), AwsSnsTopicMap{})
	pulumi.RegisterOutputType(AwsSnsTopicOutput{})
	pulumi.RegisterOutputType(AwsSnsTopicArrayOutput{})
	pulumi.RegisterOutputType(AwsSnsTopicMapOutput{})
}
