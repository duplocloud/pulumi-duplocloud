// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureStorageclassQueue` manages an Azure storage class queue in Duplo.
type AzureStorageclassQueue struct {
	pulumi.CustomResourceState

	// The name of the Queue. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the storage class in which to create the queue. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringOutput `pulumi:"storageAccountName"`
	// The GUID of the tenant that the azure storage class queue will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The URL of the Queue.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewAzureStorageclassQueue registers a new resource with the given unique name, arguments, and options.
func NewAzureStorageclassQueue(ctx *pulumi.Context,
	name string, args *AzureStorageclassQueueArgs, opts ...pulumi.ResourceOption) (*AzureStorageclassQueue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageAccountName == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountName'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureStorageclassQueue
	err := ctx.RegisterResource("duplocloud:index/azureStorageclassQueue:AzureStorageclassQueue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureStorageclassQueue gets an existing AzureStorageclassQueue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureStorageclassQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureStorageclassQueueState, opts ...pulumi.ResourceOption) (*AzureStorageclassQueue, error) {
	var resource AzureStorageclassQueue
	err := ctx.ReadResource("duplocloud:index/azureStorageclassQueue:AzureStorageclassQueue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureStorageclassQueue resources.
type azureStorageclassQueueState struct {
	// The name of the Queue. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the storage class in which to create the queue. Changing this forces a new resource to be created.
	StorageAccountName *string `pulumi:"storageAccountName"`
	// The GUID of the tenant that the azure storage class queue will be created in.
	TenantId *string `pulumi:"tenantId"`
	// The URL of the Queue.
	Url *string `pulumi:"url"`
}

type AzureStorageclassQueueState struct {
	// The name of the Queue. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the storage class in which to create the queue. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringPtrInput
	// The GUID of the tenant that the azure storage class queue will be created in.
	TenantId pulumi.StringPtrInput
	// The URL of the Queue.
	Url pulumi.StringPtrInput
}

func (AzureStorageclassQueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureStorageclassQueueState)(nil)).Elem()
}

type azureStorageclassQueueArgs struct {
	// The name of the Queue. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the storage class in which to create the queue. Changing this forces a new resource to be created.
	StorageAccountName string `pulumi:"storageAccountName"`
	// The GUID of the tenant that the azure storage class queue will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AzureStorageclassQueue resource.
type AzureStorageclassQueueArgs struct {
	// The name of the Queue. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the storage class in which to create the queue. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringInput
	// The GUID of the tenant that the azure storage class queue will be created in.
	TenantId pulumi.StringInput
}

func (AzureStorageclassQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureStorageclassQueueArgs)(nil)).Elem()
}

type AzureStorageclassQueueInput interface {
	pulumi.Input

	ToAzureStorageclassQueueOutput() AzureStorageclassQueueOutput
	ToAzureStorageclassQueueOutputWithContext(ctx context.Context) AzureStorageclassQueueOutput
}

func (*AzureStorageclassQueue) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageclassQueue)(nil)).Elem()
}

func (i *AzureStorageclassQueue) ToAzureStorageclassQueueOutput() AzureStorageclassQueueOutput {
	return i.ToAzureStorageclassQueueOutputWithContext(context.Background())
}

func (i *AzureStorageclassQueue) ToAzureStorageclassQueueOutputWithContext(ctx context.Context) AzureStorageclassQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageclassQueueOutput)
}

// AzureStorageclassQueueArrayInput is an input type that accepts AzureStorageclassQueueArray and AzureStorageclassQueueArrayOutput values.
// You can construct a concrete instance of `AzureStorageclassQueueArrayInput` via:
//
//	AzureStorageclassQueueArray{ AzureStorageclassQueueArgs{...} }
type AzureStorageclassQueueArrayInput interface {
	pulumi.Input

	ToAzureStorageclassQueueArrayOutput() AzureStorageclassQueueArrayOutput
	ToAzureStorageclassQueueArrayOutputWithContext(context.Context) AzureStorageclassQueueArrayOutput
}

type AzureStorageclassQueueArray []AzureStorageclassQueueInput

func (AzureStorageclassQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureStorageclassQueue)(nil)).Elem()
}

func (i AzureStorageclassQueueArray) ToAzureStorageclassQueueArrayOutput() AzureStorageclassQueueArrayOutput {
	return i.ToAzureStorageclassQueueArrayOutputWithContext(context.Background())
}

func (i AzureStorageclassQueueArray) ToAzureStorageclassQueueArrayOutputWithContext(ctx context.Context) AzureStorageclassQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageclassQueueArrayOutput)
}

// AzureStorageclassQueueMapInput is an input type that accepts AzureStorageclassQueueMap and AzureStorageclassQueueMapOutput values.
// You can construct a concrete instance of `AzureStorageclassQueueMapInput` via:
//
//	AzureStorageclassQueueMap{ "key": AzureStorageclassQueueArgs{...} }
type AzureStorageclassQueueMapInput interface {
	pulumi.Input

	ToAzureStorageclassQueueMapOutput() AzureStorageclassQueueMapOutput
	ToAzureStorageclassQueueMapOutputWithContext(context.Context) AzureStorageclassQueueMapOutput
}

type AzureStorageclassQueueMap map[string]AzureStorageclassQueueInput

func (AzureStorageclassQueueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureStorageclassQueue)(nil)).Elem()
}

func (i AzureStorageclassQueueMap) ToAzureStorageclassQueueMapOutput() AzureStorageclassQueueMapOutput {
	return i.ToAzureStorageclassQueueMapOutputWithContext(context.Background())
}

func (i AzureStorageclassQueueMap) ToAzureStorageclassQueueMapOutputWithContext(ctx context.Context) AzureStorageclassQueueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageclassQueueMapOutput)
}

type AzureStorageclassQueueOutput struct{ *pulumi.OutputState }

func (AzureStorageclassQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageclassQueue)(nil)).Elem()
}

func (o AzureStorageclassQueueOutput) ToAzureStorageclassQueueOutput() AzureStorageclassQueueOutput {
	return o
}

func (o AzureStorageclassQueueOutput) ToAzureStorageclassQueueOutputWithContext(ctx context.Context) AzureStorageclassQueueOutput {
	return o
}

// The name of the Queue. Changing this forces a new resource to be created.
func (o AzureStorageclassQueueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageclassQueue) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the storage class in which to create the queue. Changing this forces a new resource to be created.
func (o AzureStorageclassQueueOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageclassQueue) pulumi.StringOutput { return v.StorageAccountName }).(pulumi.StringOutput)
}

// The GUID of the tenant that the azure storage class queue will be created in.
func (o AzureStorageclassQueueOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageclassQueue) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The URL of the Queue.
func (o AzureStorageclassQueueOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageclassQueue) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type AzureStorageclassQueueArrayOutput struct{ *pulumi.OutputState }

func (AzureStorageclassQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureStorageclassQueue)(nil)).Elem()
}

func (o AzureStorageclassQueueArrayOutput) ToAzureStorageclassQueueArrayOutput() AzureStorageclassQueueArrayOutput {
	return o
}

func (o AzureStorageclassQueueArrayOutput) ToAzureStorageclassQueueArrayOutputWithContext(ctx context.Context) AzureStorageclassQueueArrayOutput {
	return o
}

func (o AzureStorageclassQueueArrayOutput) Index(i pulumi.IntInput) AzureStorageclassQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureStorageclassQueue {
		return vs[0].([]*AzureStorageclassQueue)[vs[1].(int)]
	}).(AzureStorageclassQueueOutput)
}

type AzureStorageclassQueueMapOutput struct{ *pulumi.OutputState }

func (AzureStorageclassQueueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureStorageclassQueue)(nil)).Elem()
}

func (o AzureStorageclassQueueMapOutput) ToAzureStorageclassQueueMapOutput() AzureStorageclassQueueMapOutput {
	return o
}

func (o AzureStorageclassQueueMapOutput) ToAzureStorageclassQueueMapOutputWithContext(ctx context.Context) AzureStorageclassQueueMapOutput {
	return o
}

func (o AzureStorageclassQueueMapOutput) MapIndex(k pulumi.StringInput) AzureStorageclassQueueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureStorageclassQueue {
		return vs[0].(map[string]*AzureStorageclassQueue)[vs[1].(string)]
	}).(AzureStorageclassQueueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureStorageclassQueueInput)(nil)).Elem(), &AzureStorageclassQueue{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureStorageclassQueueArrayInput)(nil)).Elem(), AzureStorageclassQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureStorageclassQueueMapInput)(nil)).Elem(), AzureStorageclassQueueMap{})
	pulumi.RegisterOutputType(AzureStorageclassQueueOutput{})
	pulumi.RegisterOutputType(AzureStorageclassQueueArrayOutput{})
	pulumi.RegisterOutputType(AzureStorageclassQueueMapOutput{})
}
