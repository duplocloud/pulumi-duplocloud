// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// Example: Importing an existing S3 bucket
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SHORTNAME* is the short name of the S3 bucket (without the duploservices prefix)
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/gcpStorageBucketV2:GcpStorageBucketV2 mybucket *TENANT_ID*/*SHORTNAME*
// ```
type GcpStorageBucketV2 struct {
	pulumi.CustomResourceState

	// Whether or not to remove the public access block from the bucket.
	AllowPublicAccess pulumi.BoolOutput `pulumi:"allowPublicAccess"`
	// Default encryption settings for objects uploaded to the bucket.
	DefaultEncryption GcpStorageBucketV2DefaultEncryptionOutput `pulumi:"defaultEncryption"`
	// Bucket self link.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// Whether or not to enable versioning.
	EnableVersioning pulumi.BoolOutput `pulumi:"enableVersioning"`
	// The full name of the storage bucket.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// The labels assigned to this storage bucket.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location is to set region/multi region, applicable for gcp cloud.
	Location pulumi.StringOutput `pulumi:"location"`
	// The short name of the storage bucket.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringOutput `pulumi:"name"`
	// The GUID of the tenant that the storage bucket will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewGcpStorageBucketV2 registers a new resource with the given unique name, arguments, and options.
func NewGcpStorageBucketV2(ctx *pulumi.Context,
	name string, args *GcpStorageBucketV2Args, opts ...pulumi.ResourceOption) (*GcpStorageBucketV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GcpStorageBucketV2
	err := ctx.RegisterResource("duplocloud:index/gcpStorageBucketV2:GcpStorageBucketV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcpStorageBucketV2 gets an existing GcpStorageBucketV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcpStorageBucketV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcpStorageBucketV2State, opts ...pulumi.ResourceOption) (*GcpStorageBucketV2, error) {
	var resource GcpStorageBucketV2
	err := ctx.ReadResource("duplocloud:index/gcpStorageBucketV2:GcpStorageBucketV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcpStorageBucketV2 resources.
type gcpStorageBucketV2State struct {
	// Whether or not to remove the public access block from the bucket.
	AllowPublicAccess *bool `pulumi:"allowPublicAccess"`
	// Default encryption settings for objects uploaded to the bucket.
	DefaultEncryption *GcpStorageBucketV2DefaultEncryption `pulumi:"defaultEncryption"`
	// Bucket self link.
	DomainName *string `pulumi:"domainName"`
	// Whether or not to enable versioning.
	EnableVersioning *bool `pulumi:"enableVersioning"`
	// The full name of the storage bucket.
	Fullname *string `pulumi:"fullname"`
	// The labels assigned to this storage bucket.
	Labels map[string]string `pulumi:"labels"`
	// The location is to set region/multi region, applicable for gcp cloud.
	Location *string `pulumi:"location"`
	// The short name of the storage bucket.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name *string `pulumi:"name"`
	// The GUID of the tenant that the storage bucket will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type GcpStorageBucketV2State struct {
	// Whether or not to remove the public access block from the bucket.
	AllowPublicAccess pulumi.BoolPtrInput
	// Default encryption settings for objects uploaded to the bucket.
	DefaultEncryption GcpStorageBucketV2DefaultEncryptionPtrInput
	// Bucket self link.
	DomainName pulumi.StringPtrInput
	// Whether or not to enable versioning.
	EnableVersioning pulumi.BoolPtrInput
	// The full name of the storage bucket.
	Fullname pulumi.StringPtrInput
	// The labels assigned to this storage bucket.
	Labels pulumi.StringMapInput
	// The location is to set region/multi region, applicable for gcp cloud.
	Location pulumi.StringPtrInput
	// The short name of the storage bucket.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringPtrInput
	// The GUID of the tenant that the storage bucket will be created in.
	TenantId pulumi.StringPtrInput
}

func (GcpStorageBucketV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpStorageBucketV2State)(nil)).Elem()
}

type gcpStorageBucketV2Args struct {
	// Whether or not to remove the public access block from the bucket.
	AllowPublicAccess *bool `pulumi:"allowPublicAccess"`
	// Default encryption settings for objects uploaded to the bucket.
	DefaultEncryption *GcpStorageBucketV2DefaultEncryption `pulumi:"defaultEncryption"`
	// Whether or not to enable versioning.
	EnableVersioning *bool `pulumi:"enableVersioning"`
	// The labels assigned to this storage bucket.
	Labels map[string]string `pulumi:"labels"`
	// The location is to set region/multi region, applicable for gcp cloud.
	Location *string `pulumi:"location"`
	// The short name of the storage bucket.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name *string `pulumi:"name"`
	// The GUID of the tenant that the storage bucket will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a GcpStorageBucketV2 resource.
type GcpStorageBucketV2Args struct {
	// Whether or not to remove the public access block from the bucket.
	AllowPublicAccess pulumi.BoolPtrInput
	// Default encryption settings for objects uploaded to the bucket.
	DefaultEncryption GcpStorageBucketV2DefaultEncryptionPtrInput
	// Whether or not to enable versioning.
	EnableVersioning pulumi.BoolPtrInput
	// The labels assigned to this storage bucket.
	Labels pulumi.StringMapInput
	// The location is to set region/multi region, applicable for gcp cloud.
	Location pulumi.StringPtrInput
	// The short name of the storage bucket.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringPtrInput
	// The GUID of the tenant that the storage bucket will be created in.
	TenantId pulumi.StringInput
}

func (GcpStorageBucketV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpStorageBucketV2Args)(nil)).Elem()
}

type GcpStorageBucketV2Input interface {
	pulumi.Input

	ToGcpStorageBucketV2Output() GcpStorageBucketV2Output
	ToGcpStorageBucketV2OutputWithContext(ctx context.Context) GcpStorageBucketV2Output
}

func (*GcpStorageBucketV2) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpStorageBucketV2)(nil)).Elem()
}

func (i *GcpStorageBucketV2) ToGcpStorageBucketV2Output() GcpStorageBucketV2Output {
	return i.ToGcpStorageBucketV2OutputWithContext(context.Background())
}

func (i *GcpStorageBucketV2) ToGcpStorageBucketV2OutputWithContext(ctx context.Context) GcpStorageBucketV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GcpStorageBucketV2Output)
}

// GcpStorageBucketV2ArrayInput is an input type that accepts GcpStorageBucketV2Array and GcpStorageBucketV2ArrayOutput values.
// You can construct a concrete instance of `GcpStorageBucketV2ArrayInput` via:
//
//	GcpStorageBucketV2Array{ GcpStorageBucketV2Args{...} }
type GcpStorageBucketV2ArrayInput interface {
	pulumi.Input

	ToGcpStorageBucketV2ArrayOutput() GcpStorageBucketV2ArrayOutput
	ToGcpStorageBucketV2ArrayOutputWithContext(context.Context) GcpStorageBucketV2ArrayOutput
}

type GcpStorageBucketV2Array []GcpStorageBucketV2Input

func (GcpStorageBucketV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpStorageBucketV2)(nil)).Elem()
}

func (i GcpStorageBucketV2Array) ToGcpStorageBucketV2ArrayOutput() GcpStorageBucketV2ArrayOutput {
	return i.ToGcpStorageBucketV2ArrayOutputWithContext(context.Background())
}

func (i GcpStorageBucketV2Array) ToGcpStorageBucketV2ArrayOutputWithContext(ctx context.Context) GcpStorageBucketV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpStorageBucketV2ArrayOutput)
}

// GcpStorageBucketV2MapInput is an input type that accepts GcpStorageBucketV2Map and GcpStorageBucketV2MapOutput values.
// You can construct a concrete instance of `GcpStorageBucketV2MapInput` via:
//
//	GcpStorageBucketV2Map{ "key": GcpStorageBucketV2Args{...} }
type GcpStorageBucketV2MapInput interface {
	pulumi.Input

	ToGcpStorageBucketV2MapOutput() GcpStorageBucketV2MapOutput
	ToGcpStorageBucketV2MapOutputWithContext(context.Context) GcpStorageBucketV2MapOutput
}

type GcpStorageBucketV2Map map[string]GcpStorageBucketV2Input

func (GcpStorageBucketV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpStorageBucketV2)(nil)).Elem()
}

func (i GcpStorageBucketV2Map) ToGcpStorageBucketV2MapOutput() GcpStorageBucketV2MapOutput {
	return i.ToGcpStorageBucketV2MapOutputWithContext(context.Background())
}

func (i GcpStorageBucketV2Map) ToGcpStorageBucketV2MapOutputWithContext(ctx context.Context) GcpStorageBucketV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpStorageBucketV2MapOutput)
}

type GcpStorageBucketV2Output struct{ *pulumi.OutputState }

func (GcpStorageBucketV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpStorageBucketV2)(nil)).Elem()
}

func (o GcpStorageBucketV2Output) ToGcpStorageBucketV2Output() GcpStorageBucketV2Output {
	return o
}

func (o GcpStorageBucketV2Output) ToGcpStorageBucketV2OutputWithContext(ctx context.Context) GcpStorageBucketV2Output {
	return o
}

// Whether or not to remove the public access block from the bucket.
func (o GcpStorageBucketV2Output) AllowPublicAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v *GcpStorageBucketV2) pulumi.BoolOutput { return v.AllowPublicAccess }).(pulumi.BoolOutput)
}

// Default encryption settings for objects uploaded to the bucket.
func (o GcpStorageBucketV2Output) DefaultEncryption() GcpStorageBucketV2DefaultEncryptionOutput {
	return o.ApplyT(func(v *GcpStorageBucketV2) GcpStorageBucketV2DefaultEncryptionOutput { return v.DefaultEncryption }).(GcpStorageBucketV2DefaultEncryptionOutput)
}

// Bucket self link.
func (o GcpStorageBucketV2Output) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpStorageBucketV2) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// Whether or not to enable versioning.
func (o GcpStorageBucketV2Output) EnableVersioning() pulumi.BoolOutput {
	return o.ApplyT(func(v *GcpStorageBucketV2) pulumi.BoolOutput { return v.EnableVersioning }).(pulumi.BoolOutput)
}

// The full name of the storage bucket.
func (o GcpStorageBucketV2Output) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpStorageBucketV2) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// The labels assigned to this storage bucket.
func (o GcpStorageBucketV2Output) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GcpStorageBucketV2) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location is to set region/multi region, applicable for gcp cloud.
func (o GcpStorageBucketV2Output) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpStorageBucketV2) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The short name of the storage bucket.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
func (o GcpStorageBucketV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpStorageBucketV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The GUID of the tenant that the storage bucket will be created in.
func (o GcpStorageBucketV2Output) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpStorageBucketV2) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type GcpStorageBucketV2ArrayOutput struct{ *pulumi.OutputState }

func (GcpStorageBucketV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpStorageBucketV2)(nil)).Elem()
}

func (o GcpStorageBucketV2ArrayOutput) ToGcpStorageBucketV2ArrayOutput() GcpStorageBucketV2ArrayOutput {
	return o
}

func (o GcpStorageBucketV2ArrayOutput) ToGcpStorageBucketV2ArrayOutputWithContext(ctx context.Context) GcpStorageBucketV2ArrayOutput {
	return o
}

func (o GcpStorageBucketV2ArrayOutput) Index(i pulumi.IntInput) GcpStorageBucketV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GcpStorageBucketV2 {
		return vs[0].([]*GcpStorageBucketV2)[vs[1].(int)]
	}).(GcpStorageBucketV2Output)
}

type GcpStorageBucketV2MapOutput struct{ *pulumi.OutputState }

func (GcpStorageBucketV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpStorageBucketV2)(nil)).Elem()
}

func (o GcpStorageBucketV2MapOutput) ToGcpStorageBucketV2MapOutput() GcpStorageBucketV2MapOutput {
	return o
}

func (o GcpStorageBucketV2MapOutput) ToGcpStorageBucketV2MapOutputWithContext(ctx context.Context) GcpStorageBucketV2MapOutput {
	return o
}

func (o GcpStorageBucketV2MapOutput) MapIndex(k pulumi.StringInput) GcpStorageBucketV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GcpStorageBucketV2 {
		return vs[0].(map[string]*GcpStorageBucketV2)[vs[1].(string)]
	}).(GcpStorageBucketV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcpStorageBucketV2Input)(nil)).Elem(), &GcpStorageBucketV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpStorageBucketV2ArrayInput)(nil)).Elem(), GcpStorageBucketV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpStorageBucketV2MapInput)(nil)).Elem(), GcpStorageBucketV2Map{})
	pulumi.RegisterOutputType(GcpStorageBucketV2Output{})
	pulumi.RegisterOutputType(GcpStorageBucketV2ArrayOutput{})
	pulumi.RegisterOutputType(GcpStorageBucketV2MapOutput{})
}
