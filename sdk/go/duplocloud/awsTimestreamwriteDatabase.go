// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsTimestreamwriteDatabase` manages an aws Timestream database resource in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tenantId := "d186700c-ad18-4525-9593-aad467c843ff"
//			kmsKey, err := duplocloud.GetTenantAwsKmsKey(ctx, &duplocloud.GetTenantAwsKmsKeyArgs{
//				TenantId: tenantId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsTimestreamwriteDatabase(ctx, "timestreamwrite_database", &duplocloud.AwsTimestreamwriteDatabaseArgs{
//				TenantId: pulumi.String(tenantId),
//				Name:     pulumi.String("test"),
//				KmsKeyId: pulumi.String(kmsKey.KeyArn),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS Timestream Database
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *NAME* is the short name of AWS Timestream Database
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsTimestreamwriteDatabase:AwsTimestreamwriteDatabase timestreamwrite_database *TENANT_ID*/*NAME*
// ```
type AwsTimestreamwriteDatabase struct {
	pulumi.CustomResourceState

	// A complete list of tags for this time stream database, even ones not being managed by this resource.
	AllTags AwsTimestreamwriteDatabaseAllTagArrayOutput `pulumi:"allTags"`
	// The ARN that uniquely identifies this database.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The full name of the Timestream Database.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// The short name of the Timestream Database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of tags being managed by this resource.
	SpecifiedTags pulumi.StringArrayOutput `pulumi:"specifiedTags"`
	// The total number of tables found within the Timestream database.
	TableCount pulumi.IntOutput `pulumi:"tableCount"`
	// Tags in key-value format.
	Tags AwsTimestreamwriteDatabaseTagArrayOutput `pulumi:"tags"`
	// The GUID of the tenant that the Timestream Database will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAwsTimestreamwriteDatabase registers a new resource with the given unique name, arguments, and options.
func NewAwsTimestreamwriteDatabase(ctx *pulumi.Context,
	name string, args *AwsTimestreamwriteDatabaseArgs, opts ...pulumi.ResourceOption) (*AwsTimestreamwriteDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsTimestreamwriteDatabase
	err := ctx.RegisterResource("duplocloud:index/awsTimestreamwriteDatabase:AwsTimestreamwriteDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsTimestreamwriteDatabase gets an existing AwsTimestreamwriteDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsTimestreamwriteDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsTimestreamwriteDatabaseState, opts ...pulumi.ResourceOption) (*AwsTimestreamwriteDatabase, error) {
	var resource AwsTimestreamwriteDatabase
	err := ctx.ReadResource("duplocloud:index/awsTimestreamwriteDatabase:AwsTimestreamwriteDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsTimestreamwriteDatabase resources.
type awsTimestreamwriteDatabaseState struct {
	// A complete list of tags for this time stream database, even ones not being managed by this resource.
	AllTags []AwsTimestreamwriteDatabaseAllTag `pulumi:"allTags"`
	// The ARN that uniquely identifies this database.
	Arn *string `pulumi:"arn"`
	// The full name of the Timestream Database.
	Fullname *string `pulumi:"fullname"`
	// The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The short name of the Timestream Database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name *string `pulumi:"name"`
	// A list of tags being managed by this resource.
	SpecifiedTags []string `pulumi:"specifiedTags"`
	// The total number of tables found within the Timestream database.
	TableCount *int `pulumi:"tableCount"`
	// Tags in key-value format.
	Tags []AwsTimestreamwriteDatabaseTag `pulumi:"tags"`
	// The GUID of the tenant that the Timestream Database will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AwsTimestreamwriteDatabaseState struct {
	// A complete list of tags for this time stream database, even ones not being managed by this resource.
	AllTags AwsTimestreamwriteDatabaseAllTagArrayInput
	// The ARN that uniquely identifies this database.
	Arn pulumi.StringPtrInput
	// The full name of the Timestream Database.
	Fullname pulumi.StringPtrInput
	// The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database.
	KmsKeyId pulumi.StringPtrInput
	// The short name of the Timestream Database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringPtrInput
	// A list of tags being managed by this resource.
	SpecifiedTags pulumi.StringArrayInput
	// The total number of tables found within the Timestream database.
	TableCount pulumi.IntPtrInput
	// Tags in key-value format.
	Tags AwsTimestreamwriteDatabaseTagArrayInput
	// The GUID of the tenant that the Timestream Database will be created in.
	TenantId pulumi.StringPtrInput
}

func (AwsTimestreamwriteDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsTimestreamwriteDatabaseState)(nil)).Elem()
}

type awsTimestreamwriteDatabaseArgs struct {
	// The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The short name of the Timestream Database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name *string `pulumi:"name"`
	// Tags in key-value format.
	Tags []AwsTimestreamwriteDatabaseTag `pulumi:"tags"`
	// The GUID of the tenant that the Timestream Database will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AwsTimestreamwriteDatabase resource.
type AwsTimestreamwriteDatabaseArgs struct {
	// The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database.
	KmsKeyId pulumi.StringPtrInput
	// The short name of the Timestream Database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringPtrInput
	// Tags in key-value format.
	Tags AwsTimestreamwriteDatabaseTagArrayInput
	// The GUID of the tenant that the Timestream Database will be created in.
	TenantId pulumi.StringInput
}

func (AwsTimestreamwriteDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsTimestreamwriteDatabaseArgs)(nil)).Elem()
}

type AwsTimestreamwriteDatabaseInput interface {
	pulumi.Input

	ToAwsTimestreamwriteDatabaseOutput() AwsTimestreamwriteDatabaseOutput
	ToAwsTimestreamwriteDatabaseOutputWithContext(ctx context.Context) AwsTimestreamwriteDatabaseOutput
}

func (*AwsTimestreamwriteDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsTimestreamwriteDatabase)(nil)).Elem()
}

func (i *AwsTimestreamwriteDatabase) ToAwsTimestreamwriteDatabaseOutput() AwsTimestreamwriteDatabaseOutput {
	return i.ToAwsTimestreamwriteDatabaseOutputWithContext(context.Background())
}

func (i *AwsTimestreamwriteDatabase) ToAwsTimestreamwriteDatabaseOutputWithContext(ctx context.Context) AwsTimestreamwriteDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsTimestreamwriteDatabaseOutput)
}

// AwsTimestreamwriteDatabaseArrayInput is an input type that accepts AwsTimestreamwriteDatabaseArray and AwsTimestreamwriteDatabaseArrayOutput values.
// You can construct a concrete instance of `AwsTimestreamwriteDatabaseArrayInput` via:
//
//	AwsTimestreamwriteDatabaseArray{ AwsTimestreamwriteDatabaseArgs{...} }
type AwsTimestreamwriteDatabaseArrayInput interface {
	pulumi.Input

	ToAwsTimestreamwriteDatabaseArrayOutput() AwsTimestreamwriteDatabaseArrayOutput
	ToAwsTimestreamwriteDatabaseArrayOutputWithContext(context.Context) AwsTimestreamwriteDatabaseArrayOutput
}

type AwsTimestreamwriteDatabaseArray []AwsTimestreamwriteDatabaseInput

func (AwsTimestreamwriteDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsTimestreamwriteDatabase)(nil)).Elem()
}

func (i AwsTimestreamwriteDatabaseArray) ToAwsTimestreamwriteDatabaseArrayOutput() AwsTimestreamwriteDatabaseArrayOutput {
	return i.ToAwsTimestreamwriteDatabaseArrayOutputWithContext(context.Background())
}

func (i AwsTimestreamwriteDatabaseArray) ToAwsTimestreamwriteDatabaseArrayOutputWithContext(ctx context.Context) AwsTimestreamwriteDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsTimestreamwriteDatabaseArrayOutput)
}

// AwsTimestreamwriteDatabaseMapInput is an input type that accepts AwsTimestreamwriteDatabaseMap and AwsTimestreamwriteDatabaseMapOutput values.
// You can construct a concrete instance of `AwsTimestreamwriteDatabaseMapInput` via:
//
//	AwsTimestreamwriteDatabaseMap{ "key": AwsTimestreamwriteDatabaseArgs{...} }
type AwsTimestreamwriteDatabaseMapInput interface {
	pulumi.Input

	ToAwsTimestreamwriteDatabaseMapOutput() AwsTimestreamwriteDatabaseMapOutput
	ToAwsTimestreamwriteDatabaseMapOutputWithContext(context.Context) AwsTimestreamwriteDatabaseMapOutput
}

type AwsTimestreamwriteDatabaseMap map[string]AwsTimestreamwriteDatabaseInput

func (AwsTimestreamwriteDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsTimestreamwriteDatabase)(nil)).Elem()
}

func (i AwsTimestreamwriteDatabaseMap) ToAwsTimestreamwriteDatabaseMapOutput() AwsTimestreamwriteDatabaseMapOutput {
	return i.ToAwsTimestreamwriteDatabaseMapOutputWithContext(context.Background())
}

func (i AwsTimestreamwriteDatabaseMap) ToAwsTimestreamwriteDatabaseMapOutputWithContext(ctx context.Context) AwsTimestreamwriteDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsTimestreamwriteDatabaseMapOutput)
}

type AwsTimestreamwriteDatabaseOutput struct{ *pulumi.OutputState }

func (AwsTimestreamwriteDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsTimestreamwriteDatabase)(nil)).Elem()
}

func (o AwsTimestreamwriteDatabaseOutput) ToAwsTimestreamwriteDatabaseOutput() AwsTimestreamwriteDatabaseOutput {
	return o
}

func (o AwsTimestreamwriteDatabaseOutput) ToAwsTimestreamwriteDatabaseOutputWithContext(ctx context.Context) AwsTimestreamwriteDatabaseOutput {
	return o
}

// A complete list of tags for this time stream database, even ones not being managed by this resource.
func (o AwsTimestreamwriteDatabaseOutput) AllTags() AwsTimestreamwriteDatabaseAllTagArrayOutput {
	return o.ApplyT(func(v *AwsTimestreamwriteDatabase) AwsTimestreamwriteDatabaseAllTagArrayOutput { return v.AllTags }).(AwsTimestreamwriteDatabaseAllTagArrayOutput)
}

// The ARN that uniquely identifies this database.
func (o AwsTimestreamwriteDatabaseOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTimestreamwriteDatabase) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The full name of the Timestream Database.
func (o AwsTimestreamwriteDatabaseOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTimestreamwriteDatabase) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database.
func (o AwsTimestreamwriteDatabaseOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTimestreamwriteDatabase) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The short name of the Timestream Database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
func (o AwsTimestreamwriteDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTimestreamwriteDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of tags being managed by this resource.
func (o AwsTimestreamwriteDatabaseOutput) SpecifiedTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsTimestreamwriteDatabase) pulumi.StringArrayOutput { return v.SpecifiedTags }).(pulumi.StringArrayOutput)
}

// The total number of tables found within the Timestream database.
func (o AwsTimestreamwriteDatabaseOutput) TableCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsTimestreamwriteDatabase) pulumi.IntOutput { return v.TableCount }).(pulumi.IntOutput)
}

// Tags in key-value format.
func (o AwsTimestreamwriteDatabaseOutput) Tags() AwsTimestreamwriteDatabaseTagArrayOutput {
	return o.ApplyT(func(v *AwsTimestreamwriteDatabase) AwsTimestreamwriteDatabaseTagArrayOutput { return v.Tags }).(AwsTimestreamwriteDatabaseTagArrayOutput)
}

// The GUID of the tenant that the Timestream Database will be created in.
func (o AwsTimestreamwriteDatabaseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTimestreamwriteDatabase) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AwsTimestreamwriteDatabaseArrayOutput struct{ *pulumi.OutputState }

func (AwsTimestreamwriteDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsTimestreamwriteDatabase)(nil)).Elem()
}

func (o AwsTimestreamwriteDatabaseArrayOutput) ToAwsTimestreamwriteDatabaseArrayOutput() AwsTimestreamwriteDatabaseArrayOutput {
	return o
}

func (o AwsTimestreamwriteDatabaseArrayOutput) ToAwsTimestreamwriteDatabaseArrayOutputWithContext(ctx context.Context) AwsTimestreamwriteDatabaseArrayOutput {
	return o
}

func (o AwsTimestreamwriteDatabaseArrayOutput) Index(i pulumi.IntInput) AwsTimestreamwriteDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsTimestreamwriteDatabase {
		return vs[0].([]*AwsTimestreamwriteDatabase)[vs[1].(int)]
	}).(AwsTimestreamwriteDatabaseOutput)
}

type AwsTimestreamwriteDatabaseMapOutput struct{ *pulumi.OutputState }

func (AwsTimestreamwriteDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsTimestreamwriteDatabase)(nil)).Elem()
}

func (o AwsTimestreamwriteDatabaseMapOutput) ToAwsTimestreamwriteDatabaseMapOutput() AwsTimestreamwriteDatabaseMapOutput {
	return o
}

func (o AwsTimestreamwriteDatabaseMapOutput) ToAwsTimestreamwriteDatabaseMapOutputWithContext(ctx context.Context) AwsTimestreamwriteDatabaseMapOutput {
	return o
}

func (o AwsTimestreamwriteDatabaseMapOutput) MapIndex(k pulumi.StringInput) AwsTimestreamwriteDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsTimestreamwriteDatabase {
		return vs[0].(map[string]*AwsTimestreamwriteDatabase)[vs[1].(string)]
	}).(AwsTimestreamwriteDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsTimestreamwriteDatabaseInput)(nil)).Elem(), &AwsTimestreamwriteDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsTimestreamwriteDatabaseArrayInput)(nil)).Elem(), AwsTimestreamwriteDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsTimestreamwriteDatabaseMapInput)(nil)).Elem(), AwsTimestreamwriteDatabaseMap{})
	pulumi.RegisterOutputType(AwsTimestreamwriteDatabaseOutput{})
	pulumi.RegisterOutputType(AwsTimestreamwriteDatabaseArrayOutput{})
	pulumi.RegisterOutputType(AwsTimestreamwriteDatabaseMapOutput{})
}
