// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `TenantConfig` manages a tenant's configuration in Duplo.
//
// Tenant configuration is initially populated by Duplo when a tenant is created.  This resource allows you take control of individual configuration settings for a specific tenant.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewTenantConfig(ctx, "myapp", &duplocloud.TenantConfigArgs{
//				TenantId: myapp.TenantId,
//				Settings: duplocloud.TenantConfigSettingArray{
//					&duplocloud.TenantConfigSettingArgs{
//						Key:   pulumi.String("block_public_access_to_s3"),
//						Value: pulumi.String("true"),
//					},
//					&duplocloud.TenantConfigSettingArgs{
//						Key:   pulumi.String("enforce_ssl_for_s3"),
//						Value: pulumi.String("true"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import duplocloud:index/tenantConfig:TenantConfig myapp TENANT_ID
// ```
type TenantConfig struct {
	pulumi.CustomResourceState

	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings pulumi.BoolPtrOutput `pulumi:"deleteUnspecifiedSettings"`
	// A complete list of configuration settings for this tenant, even ones not being managed by this resource.
	Metadatas TenantConfigMetadataArrayOutput `pulumi:"metadatas"`
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings TenantConfigSettingArrayOutput `pulumi:"settings"`
	// A list of configuration setting key being managed by this resource.
	SpecifiedSettings pulumi.StringArrayOutput `pulumi:"specifiedSettings"`
	// The GUID of the tenant to configure.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewTenantConfig registers a new resource with the given unique name, arguments, and options.
func NewTenantConfig(ctx *pulumi.Context,
	name string, args *TenantConfigArgs, opts ...pulumi.ResourceOption) (*TenantConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TenantConfig
	err := ctx.RegisterResource("duplocloud:index/tenantConfig:TenantConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTenantConfig gets an existing TenantConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTenantConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TenantConfigState, opts ...pulumi.ResourceOption) (*TenantConfig, error) {
	var resource TenantConfig
	err := ctx.ReadResource("duplocloud:index/tenantConfig:TenantConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TenantConfig resources.
type tenantConfigState struct {
	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings *bool `pulumi:"deleteUnspecifiedSettings"`
	// A complete list of configuration settings for this tenant, even ones not being managed by this resource.
	Metadatas []TenantConfigMetadata `pulumi:"metadatas"`
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings []TenantConfigSetting `pulumi:"settings"`
	// A list of configuration setting key being managed by this resource.
	SpecifiedSettings []string `pulumi:"specifiedSettings"`
	// The GUID of the tenant to configure.
	TenantId *string `pulumi:"tenantId"`
}

type TenantConfigState struct {
	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings pulumi.BoolPtrInput
	// A complete list of configuration settings for this tenant, even ones not being managed by this resource.
	Metadatas TenantConfigMetadataArrayInput
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings TenantConfigSettingArrayInput
	// A list of configuration setting key being managed by this resource.
	SpecifiedSettings pulumi.StringArrayInput
	// The GUID of the tenant to configure.
	TenantId pulumi.StringPtrInput
}

func (TenantConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantConfigState)(nil)).Elem()
}

type tenantConfigArgs struct {
	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings *bool `pulumi:"deleteUnspecifiedSettings"`
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings []TenantConfigSetting `pulumi:"settings"`
	// The GUID of the tenant to configure.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a TenantConfig resource.
type TenantConfigArgs struct {
	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings pulumi.BoolPtrInput
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings TenantConfigSettingArrayInput
	// The GUID of the tenant to configure.
	TenantId pulumi.StringInput
}

func (TenantConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantConfigArgs)(nil)).Elem()
}

type TenantConfigInput interface {
	pulumi.Input

	ToTenantConfigOutput() TenantConfigOutput
	ToTenantConfigOutputWithContext(ctx context.Context) TenantConfigOutput
}

func (*TenantConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantConfig)(nil)).Elem()
}

func (i *TenantConfig) ToTenantConfigOutput() TenantConfigOutput {
	return i.ToTenantConfigOutputWithContext(context.Background())
}

func (i *TenantConfig) ToTenantConfigOutputWithContext(ctx context.Context) TenantConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantConfigOutput)
}

// TenantConfigArrayInput is an input type that accepts TenantConfigArray and TenantConfigArrayOutput values.
// You can construct a concrete instance of `TenantConfigArrayInput` via:
//
//	TenantConfigArray{ TenantConfigArgs{...} }
type TenantConfigArrayInput interface {
	pulumi.Input

	ToTenantConfigArrayOutput() TenantConfigArrayOutput
	ToTenantConfigArrayOutputWithContext(context.Context) TenantConfigArrayOutput
}

type TenantConfigArray []TenantConfigInput

func (TenantConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TenantConfig)(nil)).Elem()
}

func (i TenantConfigArray) ToTenantConfigArrayOutput() TenantConfigArrayOutput {
	return i.ToTenantConfigArrayOutputWithContext(context.Background())
}

func (i TenantConfigArray) ToTenantConfigArrayOutputWithContext(ctx context.Context) TenantConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantConfigArrayOutput)
}

// TenantConfigMapInput is an input type that accepts TenantConfigMap and TenantConfigMapOutput values.
// You can construct a concrete instance of `TenantConfigMapInput` via:
//
//	TenantConfigMap{ "key": TenantConfigArgs{...} }
type TenantConfigMapInput interface {
	pulumi.Input

	ToTenantConfigMapOutput() TenantConfigMapOutput
	ToTenantConfigMapOutputWithContext(context.Context) TenantConfigMapOutput
}

type TenantConfigMap map[string]TenantConfigInput

func (TenantConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TenantConfig)(nil)).Elem()
}

func (i TenantConfigMap) ToTenantConfigMapOutput() TenantConfigMapOutput {
	return i.ToTenantConfigMapOutputWithContext(context.Background())
}

func (i TenantConfigMap) ToTenantConfigMapOutputWithContext(ctx context.Context) TenantConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantConfigMapOutput)
}

type TenantConfigOutput struct{ *pulumi.OutputState }

func (TenantConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantConfig)(nil)).Elem()
}

func (o TenantConfigOutput) ToTenantConfigOutput() TenantConfigOutput {
	return o
}

func (o TenantConfigOutput) ToTenantConfigOutputWithContext(ctx context.Context) TenantConfigOutput {
	return o
}

// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
func (o TenantConfigOutput) DeleteUnspecifiedSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantConfig) pulumi.BoolPtrOutput { return v.DeleteUnspecifiedSettings }).(pulumi.BoolPtrOutput)
}

// A complete list of configuration settings for this tenant, even ones not being managed by this resource.
func (o TenantConfigOutput) Metadatas() TenantConfigMetadataArrayOutput {
	return o.ApplyT(func(v *TenantConfig) TenantConfigMetadataArrayOutput { return v.Metadatas }).(TenantConfigMetadataArrayOutput)
}

// A list of configuration settings to manage, expressed as key / value pairs.
func (o TenantConfigOutput) Settings() TenantConfigSettingArrayOutput {
	return o.ApplyT(func(v *TenantConfig) TenantConfigSettingArrayOutput { return v.Settings }).(TenantConfigSettingArrayOutput)
}

// A list of configuration setting key being managed by this resource.
func (o TenantConfigOutput) SpecifiedSettings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TenantConfig) pulumi.StringArrayOutput { return v.SpecifiedSettings }).(pulumi.StringArrayOutput)
}

// The GUID of the tenant to configure.
func (o TenantConfigOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *TenantConfig) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type TenantConfigArrayOutput struct{ *pulumi.OutputState }

func (TenantConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TenantConfig)(nil)).Elem()
}

func (o TenantConfigArrayOutput) ToTenantConfigArrayOutput() TenantConfigArrayOutput {
	return o
}

func (o TenantConfigArrayOutput) ToTenantConfigArrayOutputWithContext(ctx context.Context) TenantConfigArrayOutput {
	return o
}

func (o TenantConfigArrayOutput) Index(i pulumi.IntInput) TenantConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TenantConfig {
		return vs[0].([]*TenantConfig)[vs[1].(int)]
	}).(TenantConfigOutput)
}

type TenantConfigMapOutput struct{ *pulumi.OutputState }

func (TenantConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TenantConfig)(nil)).Elem()
}

func (o TenantConfigMapOutput) ToTenantConfigMapOutput() TenantConfigMapOutput {
	return o
}

func (o TenantConfigMapOutput) ToTenantConfigMapOutputWithContext(ctx context.Context) TenantConfigMapOutput {
	return o
}

func (o TenantConfigMapOutput) MapIndex(k pulumi.StringInput) TenantConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TenantConfig {
		return vs[0].(map[string]*TenantConfig)[vs[1].(string)]
	}).(TenantConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TenantConfigInput)(nil)).Elem(), &TenantConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantConfigArrayInput)(nil)).Elem(), TenantConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantConfigMapInput)(nil)).Elem(), TenantConfigMap{})
	pulumi.RegisterOutputType(TenantConfigOutput{})
	pulumi.RegisterOutputType(TenantConfigArrayOutput{})
	pulumi.RegisterOutputType(TenantConfigMapOutput{})
}
