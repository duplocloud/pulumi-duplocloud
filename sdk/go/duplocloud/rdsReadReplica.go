// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `RdsReadReplica` manages an AWS RDS read replica in Duplo.
//
// ## Import
//
// Example: Importing an existing RDS read replica
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SHORTNAME* is the short name of the database read replica (without the duplo prefix)
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/rdsReadReplica:RdsReadReplica read_replica v2/subscriptions/*TENANT_ID*/RDSDBInstance/*SHORTNAME*
// ```
type RdsReadReplica struct {
	pulumi.CustomResourceState

	// The ARN of the RDS read replica.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The AZ for the RDS instance.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// The full name of the RDS Cluster.
	ClusterIdentifier pulumi.StringOutput `pulumi:"clusterIdentifier"`
	// Parameter group associated with this instance's DB Cluster.
	ClusterParameterGroupName pulumi.StringOutput `pulumi:"clusterParameterGroupName"`
	// Whether or not to enable the RDS instance logging. This setting is not applicable for document db cluster instance.
	EnableLogging pulumi.BoolOutput `pulumi:"enableLogging"`
	// Whether or not to encrypt the RDS instance storage.
	EncryptStorage pulumi.BoolOutput `pulumi:"encryptStorage"`
	// The endpoint of the RDS read replica.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// The numerical index of database engine to be used the for the RDS read replica.
	Engine pulumi.IntOutput `pulumi:"engine"`
	// Engine type required to validate applicable parameter group setting for different instance. Should be referred from writer
	EngineType pulumi.IntOutput `pulumi:"engineType"`
	// The database engine version to be used the for the RDS read replica.
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// Interval to capture metrics in real time for the operating system (OS) that your Amazon RDS DB instance runs on.
	EnhancedMonitoring pulumi.IntOutput `pulumi:"enhancedMonitoring"`
	// The DNS hostname of the RDS read replica.
	Host pulumi.StringOutput `pulumi:"host"`
	// The full name of the RDS read replica.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// The globally unique identifier for the key.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// Specifies if the RDS instance is multi-AZ.
	MultiAz pulumi.BoolOutput `pulumi:"multiAz"`
	// The short name of the RDS read replica.  Duplo will add a prefix to the name.  You can retrieve the full name from the `identifier` attribute.
	Name pulumi.StringOutput `pulumi:"name"`
	// A RDS parameter group name to apply to the RDS instance.
	ParameterGroupName pulumi.StringPtrOutput `pulumi:"parameterGroupName"`
	// Amazon RDS Performance Insights is a database performance tuning and monitoring feature that helps you quickly assess the load on your database, and determine when and where to take action. Perfomance Insights get apply when enable is set to true.
	PerformanceInsights RdsReadReplicaPerformanceInsightsOutput `pulumi:"performanceInsights"`
	// The listening port of the RDS read replica.
	Port pulumi.IntOutput `pulumi:"port"`
	// The current status of the RDS read replica.
	ReplicaStatus pulumi.StringOutput `pulumi:"replicaStatus"`
	// The type of the RDS read replica.
	// See AWS documentation for the [available instance types](https://aws.amazon.com/rds/instance-types/).
	Size pulumi.StringOutput `pulumi:"size"`
	// The GUID of the tenant that the RDS read replica will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewRdsReadReplica registers a new resource with the given unique name, arguments, and options.
func NewRdsReadReplica(ctx *pulumi.Context,
	name string, args *RdsReadReplicaArgs, opts ...pulumi.ResourceOption) (*RdsReadReplica, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ClusterIdentifier'")
	}
	if args.Size == nil {
		return nil, errors.New("invalid value for required argument 'Size'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RdsReadReplica
	err := ctx.RegisterResource("duplocloud:index/rdsReadReplica:RdsReadReplica", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdsReadReplica gets an existing RdsReadReplica resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdsReadReplica(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdsReadReplicaState, opts ...pulumi.ResourceOption) (*RdsReadReplica, error) {
	var resource RdsReadReplica
	err := ctx.ReadResource("duplocloud:index/rdsReadReplica:RdsReadReplica", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdsReadReplica resources.
type rdsReadReplicaState struct {
	// The ARN of the RDS read replica.
	Arn *string `pulumi:"arn"`
	// The AZ for the RDS instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The full name of the RDS Cluster.
	ClusterIdentifier *string `pulumi:"clusterIdentifier"`
	// Parameter group associated with this instance's DB Cluster.
	ClusterParameterGroupName *string `pulumi:"clusterParameterGroupName"`
	// Whether or not to enable the RDS instance logging. This setting is not applicable for document db cluster instance.
	EnableLogging *bool `pulumi:"enableLogging"`
	// Whether or not to encrypt the RDS instance storage.
	EncryptStorage *bool `pulumi:"encryptStorage"`
	// The endpoint of the RDS read replica.
	Endpoint *string `pulumi:"endpoint"`
	// The numerical index of database engine to be used the for the RDS read replica.
	Engine *int `pulumi:"engine"`
	// Engine type required to validate applicable parameter group setting for different instance. Should be referred from writer
	EngineType *int `pulumi:"engineType"`
	// The database engine version to be used the for the RDS read replica.
	EngineVersion *string `pulumi:"engineVersion"`
	// Interval to capture metrics in real time for the operating system (OS) that your Amazon RDS DB instance runs on.
	EnhancedMonitoring *int `pulumi:"enhancedMonitoring"`
	// The DNS hostname of the RDS read replica.
	Host *string `pulumi:"host"`
	// The full name of the RDS read replica.
	Identifier *string `pulumi:"identifier"`
	// The globally unique identifier for the key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies if the RDS instance is multi-AZ.
	MultiAz *bool `pulumi:"multiAz"`
	// The short name of the RDS read replica.  Duplo will add a prefix to the name.  You can retrieve the full name from the `identifier` attribute.
	Name *string `pulumi:"name"`
	// A RDS parameter group name to apply to the RDS instance.
	ParameterGroupName *string `pulumi:"parameterGroupName"`
	// Amazon RDS Performance Insights is a database performance tuning and monitoring feature that helps you quickly assess the load on your database, and determine when and where to take action. Perfomance Insights get apply when enable is set to true.
	PerformanceInsights *RdsReadReplicaPerformanceInsights `pulumi:"performanceInsights"`
	// The listening port of the RDS read replica.
	Port *int `pulumi:"port"`
	// The current status of the RDS read replica.
	ReplicaStatus *string `pulumi:"replicaStatus"`
	// The type of the RDS read replica.
	// See AWS documentation for the [available instance types](https://aws.amazon.com/rds/instance-types/).
	Size *string `pulumi:"size"`
	// The GUID of the tenant that the RDS read replica will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type RdsReadReplicaState struct {
	// The ARN of the RDS read replica.
	Arn pulumi.StringPtrInput
	// The AZ for the RDS instance.
	AvailabilityZone pulumi.StringPtrInput
	// The full name of the RDS Cluster.
	ClusterIdentifier pulumi.StringPtrInput
	// Parameter group associated with this instance's DB Cluster.
	ClusterParameterGroupName pulumi.StringPtrInput
	// Whether or not to enable the RDS instance logging. This setting is not applicable for document db cluster instance.
	EnableLogging pulumi.BoolPtrInput
	// Whether or not to encrypt the RDS instance storage.
	EncryptStorage pulumi.BoolPtrInput
	// The endpoint of the RDS read replica.
	Endpoint pulumi.StringPtrInput
	// The numerical index of database engine to be used the for the RDS read replica.
	Engine pulumi.IntPtrInput
	// Engine type required to validate applicable parameter group setting for different instance. Should be referred from writer
	EngineType pulumi.IntPtrInput
	// The database engine version to be used the for the RDS read replica.
	EngineVersion pulumi.StringPtrInput
	// Interval to capture metrics in real time for the operating system (OS) that your Amazon RDS DB instance runs on.
	EnhancedMonitoring pulumi.IntPtrInput
	// The DNS hostname of the RDS read replica.
	Host pulumi.StringPtrInput
	// The full name of the RDS read replica.
	Identifier pulumi.StringPtrInput
	// The globally unique identifier for the key.
	KmsKeyId pulumi.StringPtrInput
	// Specifies if the RDS instance is multi-AZ.
	MultiAz pulumi.BoolPtrInput
	// The short name of the RDS read replica.  Duplo will add a prefix to the name.  You can retrieve the full name from the `identifier` attribute.
	Name pulumi.StringPtrInput
	// A RDS parameter group name to apply to the RDS instance.
	ParameterGroupName pulumi.StringPtrInput
	// Amazon RDS Performance Insights is a database performance tuning and monitoring feature that helps you quickly assess the load on your database, and determine when and where to take action. Perfomance Insights get apply when enable is set to true.
	PerformanceInsights RdsReadReplicaPerformanceInsightsPtrInput
	// The listening port of the RDS read replica.
	Port pulumi.IntPtrInput
	// The current status of the RDS read replica.
	ReplicaStatus pulumi.StringPtrInput
	// The type of the RDS read replica.
	// See AWS documentation for the [available instance types](https://aws.amazon.com/rds/instance-types/).
	Size pulumi.StringPtrInput
	// The GUID of the tenant that the RDS read replica will be created in.
	TenantId pulumi.StringPtrInput
}

func (RdsReadReplicaState) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsReadReplicaState)(nil)).Elem()
}

type rdsReadReplicaArgs struct {
	// The AZ for the RDS instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The full name of the RDS Cluster.
	ClusterIdentifier string `pulumi:"clusterIdentifier"`
	// Engine type required to validate applicable parameter group setting for different instance. Should be referred from writer
	EngineType *int `pulumi:"engineType"`
	// Interval to capture metrics in real time for the operating system (OS) that your Amazon RDS DB instance runs on.
	EnhancedMonitoring *int `pulumi:"enhancedMonitoring"`
	// The short name of the RDS read replica.  Duplo will add a prefix to the name.  You can retrieve the full name from the `identifier` attribute.
	Name *string `pulumi:"name"`
	// A RDS parameter group name to apply to the RDS instance.
	ParameterGroupName *string `pulumi:"parameterGroupName"`
	// Amazon RDS Performance Insights is a database performance tuning and monitoring feature that helps you quickly assess the load on your database, and determine when and where to take action. Perfomance Insights get apply when enable is set to true.
	PerformanceInsights *RdsReadReplicaPerformanceInsights `pulumi:"performanceInsights"`
	// The type of the RDS read replica.
	// See AWS documentation for the [available instance types](https://aws.amazon.com/rds/instance-types/).
	Size string `pulumi:"size"`
	// The GUID of the tenant that the RDS read replica will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a RdsReadReplica resource.
type RdsReadReplicaArgs struct {
	// The AZ for the RDS instance.
	AvailabilityZone pulumi.StringPtrInput
	// The full name of the RDS Cluster.
	ClusterIdentifier pulumi.StringInput
	// Engine type required to validate applicable parameter group setting for different instance. Should be referred from writer
	EngineType pulumi.IntPtrInput
	// Interval to capture metrics in real time for the operating system (OS) that your Amazon RDS DB instance runs on.
	EnhancedMonitoring pulumi.IntPtrInput
	// The short name of the RDS read replica.  Duplo will add a prefix to the name.  You can retrieve the full name from the `identifier` attribute.
	Name pulumi.StringPtrInput
	// A RDS parameter group name to apply to the RDS instance.
	ParameterGroupName pulumi.StringPtrInput
	// Amazon RDS Performance Insights is a database performance tuning and monitoring feature that helps you quickly assess the load on your database, and determine when and where to take action. Perfomance Insights get apply when enable is set to true.
	PerformanceInsights RdsReadReplicaPerformanceInsightsPtrInput
	// The type of the RDS read replica.
	// See AWS documentation for the [available instance types](https://aws.amazon.com/rds/instance-types/).
	Size pulumi.StringInput
	// The GUID of the tenant that the RDS read replica will be created in.
	TenantId pulumi.StringInput
}

func (RdsReadReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsReadReplicaArgs)(nil)).Elem()
}

type RdsReadReplicaInput interface {
	pulumi.Input

	ToRdsReadReplicaOutput() RdsReadReplicaOutput
	ToRdsReadReplicaOutputWithContext(ctx context.Context) RdsReadReplicaOutput
}

func (*RdsReadReplica) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsReadReplica)(nil)).Elem()
}

func (i *RdsReadReplica) ToRdsReadReplicaOutput() RdsReadReplicaOutput {
	return i.ToRdsReadReplicaOutputWithContext(context.Background())
}

func (i *RdsReadReplica) ToRdsReadReplicaOutputWithContext(ctx context.Context) RdsReadReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaOutput)
}

// RdsReadReplicaArrayInput is an input type that accepts RdsReadReplicaArray and RdsReadReplicaArrayOutput values.
// You can construct a concrete instance of `RdsReadReplicaArrayInput` via:
//
//	RdsReadReplicaArray{ RdsReadReplicaArgs{...} }
type RdsReadReplicaArrayInput interface {
	pulumi.Input

	ToRdsReadReplicaArrayOutput() RdsReadReplicaArrayOutput
	ToRdsReadReplicaArrayOutputWithContext(context.Context) RdsReadReplicaArrayOutput
}

type RdsReadReplicaArray []RdsReadReplicaInput

func (RdsReadReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsReadReplica)(nil)).Elem()
}

func (i RdsReadReplicaArray) ToRdsReadReplicaArrayOutput() RdsReadReplicaArrayOutput {
	return i.ToRdsReadReplicaArrayOutputWithContext(context.Background())
}

func (i RdsReadReplicaArray) ToRdsReadReplicaArrayOutputWithContext(ctx context.Context) RdsReadReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaArrayOutput)
}

// RdsReadReplicaMapInput is an input type that accepts RdsReadReplicaMap and RdsReadReplicaMapOutput values.
// You can construct a concrete instance of `RdsReadReplicaMapInput` via:
//
//	RdsReadReplicaMap{ "key": RdsReadReplicaArgs{...} }
type RdsReadReplicaMapInput interface {
	pulumi.Input

	ToRdsReadReplicaMapOutput() RdsReadReplicaMapOutput
	ToRdsReadReplicaMapOutputWithContext(context.Context) RdsReadReplicaMapOutput
}

type RdsReadReplicaMap map[string]RdsReadReplicaInput

func (RdsReadReplicaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsReadReplica)(nil)).Elem()
}

func (i RdsReadReplicaMap) ToRdsReadReplicaMapOutput() RdsReadReplicaMapOutput {
	return i.ToRdsReadReplicaMapOutputWithContext(context.Background())
}

func (i RdsReadReplicaMap) ToRdsReadReplicaMapOutputWithContext(ctx context.Context) RdsReadReplicaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsReadReplicaMapOutput)
}

type RdsReadReplicaOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsReadReplica)(nil)).Elem()
}

func (o RdsReadReplicaOutput) ToRdsReadReplicaOutput() RdsReadReplicaOutput {
	return o
}

func (o RdsReadReplicaOutput) ToRdsReadReplicaOutputWithContext(ctx context.Context) RdsReadReplicaOutput {
	return o
}

// The ARN of the RDS read replica.
func (o RdsReadReplicaOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The AZ for the RDS instance.
func (o RdsReadReplicaOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The full name of the RDS Cluster.
func (o RdsReadReplicaOutput) ClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.ClusterIdentifier }).(pulumi.StringOutput)
}

// Parameter group associated with this instance's DB Cluster.
func (o RdsReadReplicaOutput) ClusterParameterGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.ClusterParameterGroupName }).(pulumi.StringOutput)
}

// Whether or not to enable the RDS instance logging. This setting is not applicable for document db cluster instance.
func (o RdsReadReplicaOutput) EnableLogging() pulumi.BoolOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.BoolOutput { return v.EnableLogging }).(pulumi.BoolOutput)
}

// Whether or not to encrypt the RDS instance storage.
func (o RdsReadReplicaOutput) EncryptStorage() pulumi.BoolOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.BoolOutput { return v.EncryptStorage }).(pulumi.BoolOutput)
}

// The endpoint of the RDS read replica.
func (o RdsReadReplicaOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// The numerical index of database engine to be used the for the RDS read replica.
func (o RdsReadReplicaOutput) Engine() pulumi.IntOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.IntOutput { return v.Engine }).(pulumi.IntOutput)
}

// Engine type required to validate applicable parameter group setting for different instance. Should be referred from writer
func (o RdsReadReplicaOutput) EngineType() pulumi.IntOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.IntOutput { return v.EngineType }).(pulumi.IntOutput)
}

// The database engine version to be used the for the RDS read replica.
func (o RdsReadReplicaOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// Interval to capture metrics in real time for the operating system (OS) that your Amazon RDS DB instance runs on.
func (o RdsReadReplicaOutput) EnhancedMonitoring() pulumi.IntOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.IntOutput { return v.EnhancedMonitoring }).(pulumi.IntOutput)
}

// The DNS hostname of the RDS read replica.
func (o RdsReadReplicaOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// The full name of the RDS read replica.
func (o RdsReadReplicaOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// The globally unique identifier for the key.
func (o RdsReadReplicaOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Specifies if the RDS instance is multi-AZ.
func (o RdsReadReplicaOutput) MultiAz() pulumi.BoolOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.BoolOutput { return v.MultiAz }).(pulumi.BoolOutput)
}

// The short name of the RDS read replica.  Duplo will add a prefix to the name.  You can retrieve the full name from the `identifier` attribute.
func (o RdsReadReplicaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A RDS parameter group name to apply to the RDS instance.
func (o RdsReadReplicaOutput) ParameterGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringPtrOutput { return v.ParameterGroupName }).(pulumi.StringPtrOutput)
}

// Amazon RDS Performance Insights is a database performance tuning and monitoring feature that helps you quickly assess the load on your database, and determine when and where to take action. Perfomance Insights get apply when enable is set to true.
func (o RdsReadReplicaOutput) PerformanceInsights() RdsReadReplicaPerformanceInsightsOutput {
	return o.ApplyT(func(v *RdsReadReplica) RdsReadReplicaPerformanceInsightsOutput { return v.PerformanceInsights }).(RdsReadReplicaPerformanceInsightsOutput)
}

// The listening port of the RDS read replica.
func (o RdsReadReplicaOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// The current status of the RDS read replica.
func (o RdsReadReplicaOutput) ReplicaStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.ReplicaStatus }).(pulumi.StringOutput)
}

// The type of the RDS read replica.
// See AWS documentation for the [available instance types](https://aws.amazon.com/rds/instance-types/).
func (o RdsReadReplicaOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.Size }).(pulumi.StringOutput)
}

// The GUID of the tenant that the RDS read replica will be created in.
func (o RdsReadReplicaOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsReadReplica) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type RdsReadReplicaArrayOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsReadReplica)(nil)).Elem()
}

func (o RdsReadReplicaArrayOutput) ToRdsReadReplicaArrayOutput() RdsReadReplicaArrayOutput {
	return o
}

func (o RdsReadReplicaArrayOutput) ToRdsReadReplicaArrayOutputWithContext(ctx context.Context) RdsReadReplicaArrayOutput {
	return o
}

func (o RdsReadReplicaArrayOutput) Index(i pulumi.IntInput) RdsReadReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RdsReadReplica {
		return vs[0].([]*RdsReadReplica)[vs[1].(int)]
	}).(RdsReadReplicaOutput)
}

type RdsReadReplicaMapOutput struct{ *pulumi.OutputState }

func (RdsReadReplicaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsReadReplica)(nil)).Elem()
}

func (o RdsReadReplicaMapOutput) ToRdsReadReplicaMapOutput() RdsReadReplicaMapOutput {
	return o
}

func (o RdsReadReplicaMapOutput) ToRdsReadReplicaMapOutputWithContext(ctx context.Context) RdsReadReplicaMapOutput {
	return o
}

func (o RdsReadReplicaMapOutput) MapIndex(k pulumi.StringInput) RdsReadReplicaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RdsReadReplica {
		return vs[0].(map[string]*RdsReadReplica)[vs[1].(string)]
	}).(RdsReadReplicaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaInput)(nil)).Elem(), &RdsReadReplica{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaArrayInput)(nil)).Elem(), RdsReadReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsReadReplicaMapInput)(nil)).Elem(), RdsReadReplicaMap{})
	pulumi.RegisterOutputType(RdsReadReplicaOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaArrayOutput{})
	pulumi.RegisterOutputType(RdsReadReplicaMapOutput{})
}
