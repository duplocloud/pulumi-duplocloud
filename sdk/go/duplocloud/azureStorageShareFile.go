// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureStorageShareFile` manages an Azure storage share file in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAzureStorageShareFile(ctx, "share_file", &duplocloud.AzureStorageShareFileArgs{
//				TenantId:           myapp.TenantId,
//				Name:               pulumi.String("test-share-file"),
//				StorageAccountName: pulumi.String("test-st-account"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing Azure storage account share file
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *STORAGE_ACCOUNT_NAME* is the name of the Azure storage account
//
//   - *NAME* is the name of the share file
//
// ```sh
// $ pulumi import duplocloud:index/azureStorageShareFile:AzureStorageShareFile share_file *TENANT_ID*/*STORAGE_ACCOUNT_NAME*/*NAME*
// ```
type AzureStorageShareFile struct {
	pulumi.CustomResourceState

	// The name (or path) of the File that should be created within this File Share. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringOutput `pulumi:"storageAccountName"`
	// The GUID of the tenant that the azure storage account share file will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The URL of the File Share.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewAzureStorageShareFile registers a new resource with the given unique name, arguments, and options.
func NewAzureStorageShareFile(ctx *pulumi.Context,
	name string, args *AzureStorageShareFileArgs, opts ...pulumi.ResourceOption) (*AzureStorageShareFile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageAccountName == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountName'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureStorageShareFile
	err := ctx.RegisterResource("duplocloud:index/azureStorageShareFile:AzureStorageShareFile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureStorageShareFile gets an existing AzureStorageShareFile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureStorageShareFile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureStorageShareFileState, opts ...pulumi.ResourceOption) (*AzureStorageShareFile, error) {
	var resource AzureStorageShareFile
	err := ctx.ReadResource("duplocloud:index/azureStorageShareFile:AzureStorageShareFile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureStorageShareFile resources.
type azureStorageShareFileState struct {
	// The name (or path) of the File that should be created within this File Share. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
	StorageAccountName *string `pulumi:"storageAccountName"`
	// The GUID of the tenant that the azure storage account share file will be created in.
	TenantId *string `pulumi:"tenantId"`
	// The URL of the File Share.
	Url *string `pulumi:"url"`
}

type AzureStorageShareFileState struct {
	// The name (or path) of the File that should be created within this File Share. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringPtrInput
	// The GUID of the tenant that the azure storage account share file will be created in.
	TenantId pulumi.StringPtrInput
	// The URL of the File Share.
	Url pulumi.StringPtrInput
}

func (AzureStorageShareFileState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureStorageShareFileState)(nil)).Elem()
}

type azureStorageShareFileArgs struct {
	// The name (or path) of the File that should be created within this File Share. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
	StorageAccountName string `pulumi:"storageAccountName"`
	// The GUID of the tenant that the azure storage account share file will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AzureStorageShareFile resource.
type AzureStorageShareFileArgs struct {
	// The name (or path) of the File that should be created within this File Share. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringInput
	// The GUID of the tenant that the azure storage account share file will be created in.
	TenantId pulumi.StringInput
}

func (AzureStorageShareFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureStorageShareFileArgs)(nil)).Elem()
}

type AzureStorageShareFileInput interface {
	pulumi.Input

	ToAzureStorageShareFileOutput() AzureStorageShareFileOutput
	ToAzureStorageShareFileOutputWithContext(ctx context.Context) AzureStorageShareFileOutput
}

func (*AzureStorageShareFile) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageShareFile)(nil)).Elem()
}

func (i *AzureStorageShareFile) ToAzureStorageShareFileOutput() AzureStorageShareFileOutput {
	return i.ToAzureStorageShareFileOutputWithContext(context.Background())
}

func (i *AzureStorageShareFile) ToAzureStorageShareFileOutputWithContext(ctx context.Context) AzureStorageShareFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageShareFileOutput)
}

// AzureStorageShareFileArrayInput is an input type that accepts AzureStorageShareFileArray and AzureStorageShareFileArrayOutput values.
// You can construct a concrete instance of `AzureStorageShareFileArrayInput` via:
//
//	AzureStorageShareFileArray{ AzureStorageShareFileArgs{...} }
type AzureStorageShareFileArrayInput interface {
	pulumi.Input

	ToAzureStorageShareFileArrayOutput() AzureStorageShareFileArrayOutput
	ToAzureStorageShareFileArrayOutputWithContext(context.Context) AzureStorageShareFileArrayOutput
}

type AzureStorageShareFileArray []AzureStorageShareFileInput

func (AzureStorageShareFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureStorageShareFile)(nil)).Elem()
}

func (i AzureStorageShareFileArray) ToAzureStorageShareFileArrayOutput() AzureStorageShareFileArrayOutput {
	return i.ToAzureStorageShareFileArrayOutputWithContext(context.Background())
}

func (i AzureStorageShareFileArray) ToAzureStorageShareFileArrayOutputWithContext(ctx context.Context) AzureStorageShareFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageShareFileArrayOutput)
}

// AzureStorageShareFileMapInput is an input type that accepts AzureStorageShareFileMap and AzureStorageShareFileMapOutput values.
// You can construct a concrete instance of `AzureStorageShareFileMapInput` via:
//
//	AzureStorageShareFileMap{ "key": AzureStorageShareFileArgs{...} }
type AzureStorageShareFileMapInput interface {
	pulumi.Input

	ToAzureStorageShareFileMapOutput() AzureStorageShareFileMapOutput
	ToAzureStorageShareFileMapOutputWithContext(context.Context) AzureStorageShareFileMapOutput
}

type AzureStorageShareFileMap map[string]AzureStorageShareFileInput

func (AzureStorageShareFileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureStorageShareFile)(nil)).Elem()
}

func (i AzureStorageShareFileMap) ToAzureStorageShareFileMapOutput() AzureStorageShareFileMapOutput {
	return i.ToAzureStorageShareFileMapOutputWithContext(context.Background())
}

func (i AzureStorageShareFileMap) ToAzureStorageShareFileMapOutputWithContext(ctx context.Context) AzureStorageShareFileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageShareFileMapOutput)
}

type AzureStorageShareFileOutput struct{ *pulumi.OutputState }

func (AzureStorageShareFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageShareFile)(nil)).Elem()
}

func (o AzureStorageShareFileOutput) ToAzureStorageShareFileOutput() AzureStorageShareFileOutput {
	return o
}

func (o AzureStorageShareFileOutput) ToAzureStorageShareFileOutputWithContext(ctx context.Context) AzureStorageShareFileOutput {
	return o
}

// The name (or path) of the File that should be created within this File Share. Changing this forces a new resource to be created.
func (o AzureStorageShareFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageShareFile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
func (o AzureStorageShareFileOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageShareFile) pulumi.StringOutput { return v.StorageAccountName }).(pulumi.StringOutput)
}

// The GUID of the tenant that the azure storage account share file will be created in.
func (o AzureStorageShareFileOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageShareFile) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The URL of the File Share.
func (o AzureStorageShareFileOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageShareFile) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type AzureStorageShareFileArrayOutput struct{ *pulumi.OutputState }

func (AzureStorageShareFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureStorageShareFile)(nil)).Elem()
}

func (o AzureStorageShareFileArrayOutput) ToAzureStorageShareFileArrayOutput() AzureStorageShareFileArrayOutput {
	return o
}

func (o AzureStorageShareFileArrayOutput) ToAzureStorageShareFileArrayOutputWithContext(ctx context.Context) AzureStorageShareFileArrayOutput {
	return o
}

func (o AzureStorageShareFileArrayOutput) Index(i pulumi.IntInput) AzureStorageShareFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureStorageShareFile {
		return vs[0].([]*AzureStorageShareFile)[vs[1].(int)]
	}).(AzureStorageShareFileOutput)
}

type AzureStorageShareFileMapOutput struct{ *pulumi.OutputState }

func (AzureStorageShareFileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureStorageShareFile)(nil)).Elem()
}

func (o AzureStorageShareFileMapOutput) ToAzureStorageShareFileMapOutput() AzureStorageShareFileMapOutput {
	return o
}

func (o AzureStorageShareFileMapOutput) ToAzureStorageShareFileMapOutputWithContext(ctx context.Context) AzureStorageShareFileMapOutput {
	return o
}

func (o AzureStorageShareFileMapOutput) MapIndex(k pulumi.StringInput) AzureStorageShareFileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureStorageShareFile {
		return vs[0].(map[string]*AzureStorageShareFile)[vs[1].(string)]
	}).(AzureStorageShareFileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureStorageShareFileInput)(nil)).Elem(), &AzureStorageShareFile{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureStorageShareFileArrayInput)(nil)).Elem(), AzureStorageShareFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureStorageShareFileMapInput)(nil)).Elem(), AzureStorageShareFileMap{})
	pulumi.RegisterOutputType(AzureStorageShareFileOutput{})
	pulumi.RegisterOutputType(AzureStorageShareFileArrayOutput{})
	pulumi.RegisterOutputType(AzureStorageShareFileMapOutput{})
}
