// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `PlanWaf` retrieves details of a specific waf for a given plan.
func LookupPlanWafV2(ctx *pulumi.Context, args *LookupPlanWafV2Args, opts ...pulumi.InvokeOption) (*LookupPlanWafV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPlanWafV2Result
	err := ctx.Invoke("duplocloud:index/getPlanWafV2:getPlanWafV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlanWafV2.
type LookupPlanWafV2Args struct {
	// Name of the waf  issued
	Name string `pulumi:"name"`
	// The plan ID
	PlanId string `pulumi:"planId"`
}

// A collection of values returned by getPlanWafV2.
type LookupPlanWafV2Result struct {
	// The ARN of the waf
	Arn string `pulumi:"arn"`
	// The dashboard url associated to waf
	DashboardUrl string `pulumi:"dashboardUrl"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the waf  issued
	Name string `pulumi:"name"`
	// The plan ID
	PlanId string `pulumi:"planId"`
}

func LookupPlanWafV2Output(ctx *pulumi.Context, args LookupPlanWafV2OutputArgs, opts ...pulumi.InvokeOption) LookupPlanWafV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPlanWafV2ResultOutput, error) {
			args := v.(LookupPlanWafV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getPlanWafV2:getPlanWafV2", args, LookupPlanWafV2ResultOutput{}, options).(LookupPlanWafV2ResultOutput), nil
		}).(LookupPlanWafV2ResultOutput)
}

// A collection of arguments for invoking getPlanWafV2.
type LookupPlanWafV2OutputArgs struct {
	// Name of the waf  issued
	Name pulumi.StringInput `pulumi:"name"`
	// The plan ID
	PlanId pulumi.StringInput `pulumi:"planId"`
}

func (LookupPlanWafV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanWafV2Args)(nil)).Elem()
}

// A collection of values returned by getPlanWafV2.
type LookupPlanWafV2ResultOutput struct{ *pulumi.OutputState }

func (LookupPlanWafV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanWafV2Result)(nil)).Elem()
}

func (o LookupPlanWafV2ResultOutput) ToLookupPlanWafV2ResultOutput() LookupPlanWafV2ResultOutput {
	return o
}

func (o LookupPlanWafV2ResultOutput) ToLookupPlanWafV2ResultOutputWithContext(ctx context.Context) LookupPlanWafV2ResultOutput {
	return o
}

// The ARN of the waf
func (o LookupPlanWafV2ResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanWafV2Result) string { return v.Arn }).(pulumi.StringOutput)
}

// The dashboard url associated to waf
func (o LookupPlanWafV2ResultOutput) DashboardUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanWafV2Result) string { return v.DashboardUrl }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPlanWafV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanWafV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the waf  issued
func (o LookupPlanWafV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanWafV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// The plan ID
func (o LookupPlanWafV2ResultOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanWafV2Result) string { return v.PlanId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlanWafV2ResultOutput{})
}
