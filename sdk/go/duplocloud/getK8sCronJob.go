// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			job, err := duplocloud.LookupK8sCronJob(ctx, &duplocloud.LookupK8sCronJobArgs{
//				TenantId: tenantId,
//				Metadata: duplocloud.GetK8sCronJobMetadata{
//					Name: "datajob",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("metadata", job.Metadata.Namespace)
//			return nil
//		})
//	}
//
// ```
func LookupK8sCronJob(ctx *pulumi.Context, args *LookupK8sCronJobArgs, opts ...pulumi.InvokeOption) (*LookupK8sCronJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupK8sCronJobResult
	err := ctx.Invoke("duplocloud:index/getK8sCronJob:getK8sCronJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getK8sCronJob.
type LookupK8sCronJobArgs struct {
	// Defaults to `false`.
	IsAnyHostAllowed *bool `pulumi:"isAnyHostAllowed"`
	// Standard cronjob's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata GetK8sCronJobMetadata `pulumi:"metadata"`
	// The GUID of the tenant that the job will be created in.
	TenantId string `pulumi:"tenantId"`
}

// A collection of values returned by getK8sCronJob.
type LookupK8sCronJobResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Defaults to `false`.
	IsAnyHostAllowed *bool `pulumi:"isAnyHostAllowed"`
	// Standard cronjob's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata GetK8sCronJobMetadata `pulumi:"metadata"`
	// Spec of the cron job owned by the cluster
	Specs []GetK8sCronJobSpec `pulumi:"specs"`
	// The GUID of the tenant that the job will be created in.
	TenantId string `pulumi:"tenantId"`
}

func LookupK8sCronJobOutput(ctx *pulumi.Context, args LookupK8sCronJobOutputArgs, opts ...pulumi.InvokeOption) LookupK8sCronJobResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupK8sCronJobResultOutput, error) {
			args := v.(LookupK8sCronJobArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getK8sCronJob:getK8sCronJob", args, LookupK8sCronJobResultOutput{}, options).(LookupK8sCronJobResultOutput), nil
		}).(LookupK8sCronJobResultOutput)
}

// A collection of arguments for invoking getK8sCronJob.
type LookupK8sCronJobOutputArgs struct {
	// Defaults to `false`.
	IsAnyHostAllowed pulumi.BoolPtrInput `pulumi:"isAnyHostAllowed"`
	// Standard cronjob's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata GetK8sCronJobMetadataInput `pulumi:"metadata"`
	// The GUID of the tenant that the job will be created in.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (LookupK8sCronJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupK8sCronJobArgs)(nil)).Elem()
}

// A collection of values returned by getK8sCronJob.
type LookupK8sCronJobResultOutput struct{ *pulumi.OutputState }

func (LookupK8sCronJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupK8sCronJobResult)(nil)).Elem()
}

func (o LookupK8sCronJobResultOutput) ToLookupK8sCronJobResultOutput() LookupK8sCronJobResultOutput {
	return o
}

func (o LookupK8sCronJobResultOutput) ToLookupK8sCronJobResultOutputWithContext(ctx context.Context) LookupK8sCronJobResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupK8sCronJobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupK8sCronJobResult) string { return v.Id }).(pulumi.StringOutput)
}

// Defaults to `false`.
func (o LookupK8sCronJobResultOutput) IsAnyHostAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupK8sCronJobResult) *bool { return v.IsAnyHostAllowed }).(pulumi.BoolPtrOutput)
}

// Standard cronjob's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o LookupK8sCronJobResultOutput) Metadata() GetK8sCronJobMetadataOutput {
	return o.ApplyT(func(v LookupK8sCronJobResult) GetK8sCronJobMetadata { return v.Metadata }).(GetK8sCronJobMetadataOutput)
}

// Spec of the cron job owned by the cluster
func (o LookupK8sCronJobResultOutput) Specs() GetK8sCronJobSpecArrayOutput {
	return o.ApplyT(func(v LookupK8sCronJobResult) []GetK8sCronJobSpec { return v.Specs }).(GetK8sCronJobSpecArrayOutput)
}

// The GUID of the tenant that the job will be created in.
func (o LookupK8sCronJobResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupK8sCronJobResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupK8sCronJobResultOutput{})
}
