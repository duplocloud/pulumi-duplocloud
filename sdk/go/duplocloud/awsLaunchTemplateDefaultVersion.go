// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// duplocloud_aws_launch_template_default_version helps to set or update default version of launch template
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			op := duplocloud.LookupAwsLaunchTemplateOutput(ctx, duplocloud.GetAwsLaunchTemplateOutputArgs{
//				TenantId: myapp.TenantId,
//				Name:     pulumi.String("launch_template_name"),
//			}, nil)
//			_, err = duplocloud.NewAwsLaunchTemplateDefaultVersion(ctx, "name", &duplocloud.AwsLaunchTemplateDefaultVersionArgs{
//				TenantId: pulumi.String(op.ApplyT(func(op duplocloud.GetAwsLaunchTemplateResult) (*string, error) {
//					return &op.TenantId, nil
//				}).(pulumi.StringPtrOutput)),
//				Name: pulumi.String(op.ApplyT(func(op duplocloud.GetAwsLaunchTemplateResult) (*string, error) {
//					return &op.Name, nil
//				}).(pulumi.StringPtrOutput)),
//				DefaultVersion: pulumi.String(op.ApplyT(func(op duplocloud.GetAwsLaunchTemplateResult) (*string, error) {
//					return &op.LatestVersion, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS launch template default version
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *NAME* is the name of the AWS launch template
//
// ```sh
// $ pulumi import duplocloud:index/awsLaunchTemplateDefaultVersion:AwsLaunchTemplateDefaultVersion dlt *TENANT_ID*/launch-template/*NAME*
// ```
type AwsLaunchTemplateDefaultVersion struct {
	pulumi.CustomResourceState

	// The default version of the launch template to be set.
	DefaultVersion pulumi.StringOutput `pulumi:"defaultVersion"`
	// The fullname of the asg group
	Name pulumi.StringOutput `pulumi:"name"`
	// The GUID of the tenant that the launch template will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAwsLaunchTemplateDefaultVersion registers a new resource with the given unique name, arguments, and options.
func NewAwsLaunchTemplateDefaultVersion(ctx *pulumi.Context,
	name string, args *AwsLaunchTemplateDefaultVersionArgs, opts ...pulumi.ResourceOption) (*AwsLaunchTemplateDefaultVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultVersion == nil {
		return nil, errors.New("invalid value for required argument 'DefaultVersion'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsLaunchTemplateDefaultVersion
	err := ctx.RegisterResource("duplocloud:index/awsLaunchTemplateDefaultVersion:AwsLaunchTemplateDefaultVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsLaunchTemplateDefaultVersion gets an existing AwsLaunchTemplateDefaultVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsLaunchTemplateDefaultVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsLaunchTemplateDefaultVersionState, opts ...pulumi.ResourceOption) (*AwsLaunchTemplateDefaultVersion, error) {
	var resource AwsLaunchTemplateDefaultVersion
	err := ctx.ReadResource("duplocloud:index/awsLaunchTemplateDefaultVersion:AwsLaunchTemplateDefaultVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsLaunchTemplateDefaultVersion resources.
type awsLaunchTemplateDefaultVersionState struct {
	// The default version of the launch template to be set.
	DefaultVersion *string `pulumi:"defaultVersion"`
	// The fullname of the asg group
	Name *string `pulumi:"name"`
	// The GUID of the tenant that the launch template will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AwsLaunchTemplateDefaultVersionState struct {
	// The default version of the launch template to be set.
	DefaultVersion pulumi.StringPtrInput
	// The fullname of the asg group
	Name pulumi.StringPtrInput
	// The GUID of the tenant that the launch template will be created in.
	TenantId pulumi.StringPtrInput
}

func (AwsLaunchTemplateDefaultVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLaunchTemplateDefaultVersionState)(nil)).Elem()
}

type awsLaunchTemplateDefaultVersionArgs struct {
	// The default version of the launch template to be set.
	DefaultVersion string `pulumi:"defaultVersion"`
	// The fullname of the asg group
	Name *string `pulumi:"name"`
	// The GUID of the tenant that the launch template will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AwsLaunchTemplateDefaultVersion resource.
type AwsLaunchTemplateDefaultVersionArgs struct {
	// The default version of the launch template to be set.
	DefaultVersion pulumi.StringInput
	// The fullname of the asg group
	Name pulumi.StringPtrInput
	// The GUID of the tenant that the launch template will be created in.
	TenantId pulumi.StringInput
}

func (AwsLaunchTemplateDefaultVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLaunchTemplateDefaultVersionArgs)(nil)).Elem()
}

type AwsLaunchTemplateDefaultVersionInput interface {
	pulumi.Input

	ToAwsLaunchTemplateDefaultVersionOutput() AwsLaunchTemplateDefaultVersionOutput
	ToAwsLaunchTemplateDefaultVersionOutputWithContext(ctx context.Context) AwsLaunchTemplateDefaultVersionOutput
}

func (*AwsLaunchTemplateDefaultVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLaunchTemplateDefaultVersion)(nil)).Elem()
}

func (i *AwsLaunchTemplateDefaultVersion) ToAwsLaunchTemplateDefaultVersionOutput() AwsLaunchTemplateDefaultVersionOutput {
	return i.ToAwsLaunchTemplateDefaultVersionOutputWithContext(context.Background())
}

func (i *AwsLaunchTemplateDefaultVersion) ToAwsLaunchTemplateDefaultVersionOutputWithContext(ctx context.Context) AwsLaunchTemplateDefaultVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLaunchTemplateDefaultVersionOutput)
}

// AwsLaunchTemplateDefaultVersionArrayInput is an input type that accepts AwsLaunchTemplateDefaultVersionArray and AwsLaunchTemplateDefaultVersionArrayOutput values.
// You can construct a concrete instance of `AwsLaunchTemplateDefaultVersionArrayInput` via:
//
//	AwsLaunchTemplateDefaultVersionArray{ AwsLaunchTemplateDefaultVersionArgs{...} }
type AwsLaunchTemplateDefaultVersionArrayInput interface {
	pulumi.Input

	ToAwsLaunchTemplateDefaultVersionArrayOutput() AwsLaunchTemplateDefaultVersionArrayOutput
	ToAwsLaunchTemplateDefaultVersionArrayOutputWithContext(context.Context) AwsLaunchTemplateDefaultVersionArrayOutput
}

type AwsLaunchTemplateDefaultVersionArray []AwsLaunchTemplateDefaultVersionInput

func (AwsLaunchTemplateDefaultVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLaunchTemplateDefaultVersion)(nil)).Elem()
}

func (i AwsLaunchTemplateDefaultVersionArray) ToAwsLaunchTemplateDefaultVersionArrayOutput() AwsLaunchTemplateDefaultVersionArrayOutput {
	return i.ToAwsLaunchTemplateDefaultVersionArrayOutputWithContext(context.Background())
}

func (i AwsLaunchTemplateDefaultVersionArray) ToAwsLaunchTemplateDefaultVersionArrayOutputWithContext(ctx context.Context) AwsLaunchTemplateDefaultVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLaunchTemplateDefaultVersionArrayOutput)
}

// AwsLaunchTemplateDefaultVersionMapInput is an input type that accepts AwsLaunchTemplateDefaultVersionMap and AwsLaunchTemplateDefaultVersionMapOutput values.
// You can construct a concrete instance of `AwsLaunchTemplateDefaultVersionMapInput` via:
//
//	AwsLaunchTemplateDefaultVersionMap{ "key": AwsLaunchTemplateDefaultVersionArgs{...} }
type AwsLaunchTemplateDefaultVersionMapInput interface {
	pulumi.Input

	ToAwsLaunchTemplateDefaultVersionMapOutput() AwsLaunchTemplateDefaultVersionMapOutput
	ToAwsLaunchTemplateDefaultVersionMapOutputWithContext(context.Context) AwsLaunchTemplateDefaultVersionMapOutput
}

type AwsLaunchTemplateDefaultVersionMap map[string]AwsLaunchTemplateDefaultVersionInput

func (AwsLaunchTemplateDefaultVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLaunchTemplateDefaultVersion)(nil)).Elem()
}

func (i AwsLaunchTemplateDefaultVersionMap) ToAwsLaunchTemplateDefaultVersionMapOutput() AwsLaunchTemplateDefaultVersionMapOutput {
	return i.ToAwsLaunchTemplateDefaultVersionMapOutputWithContext(context.Background())
}

func (i AwsLaunchTemplateDefaultVersionMap) ToAwsLaunchTemplateDefaultVersionMapOutputWithContext(ctx context.Context) AwsLaunchTemplateDefaultVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLaunchTemplateDefaultVersionMapOutput)
}

type AwsLaunchTemplateDefaultVersionOutput struct{ *pulumi.OutputState }

func (AwsLaunchTemplateDefaultVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLaunchTemplateDefaultVersion)(nil)).Elem()
}

func (o AwsLaunchTemplateDefaultVersionOutput) ToAwsLaunchTemplateDefaultVersionOutput() AwsLaunchTemplateDefaultVersionOutput {
	return o
}

func (o AwsLaunchTemplateDefaultVersionOutput) ToAwsLaunchTemplateDefaultVersionOutputWithContext(ctx context.Context) AwsLaunchTemplateDefaultVersionOutput {
	return o
}

// The default version of the launch template to be set.
func (o AwsLaunchTemplateDefaultVersionOutput) DefaultVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLaunchTemplateDefaultVersion) pulumi.StringOutput { return v.DefaultVersion }).(pulumi.StringOutput)
}

// The fullname of the asg group
func (o AwsLaunchTemplateDefaultVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLaunchTemplateDefaultVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The GUID of the tenant that the launch template will be created in.
func (o AwsLaunchTemplateDefaultVersionOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLaunchTemplateDefaultVersion) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AwsLaunchTemplateDefaultVersionArrayOutput struct{ *pulumi.OutputState }

func (AwsLaunchTemplateDefaultVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLaunchTemplateDefaultVersion)(nil)).Elem()
}

func (o AwsLaunchTemplateDefaultVersionArrayOutput) ToAwsLaunchTemplateDefaultVersionArrayOutput() AwsLaunchTemplateDefaultVersionArrayOutput {
	return o
}

func (o AwsLaunchTemplateDefaultVersionArrayOutput) ToAwsLaunchTemplateDefaultVersionArrayOutputWithContext(ctx context.Context) AwsLaunchTemplateDefaultVersionArrayOutput {
	return o
}

func (o AwsLaunchTemplateDefaultVersionArrayOutput) Index(i pulumi.IntInput) AwsLaunchTemplateDefaultVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsLaunchTemplateDefaultVersion {
		return vs[0].([]*AwsLaunchTemplateDefaultVersion)[vs[1].(int)]
	}).(AwsLaunchTemplateDefaultVersionOutput)
}

type AwsLaunchTemplateDefaultVersionMapOutput struct{ *pulumi.OutputState }

func (AwsLaunchTemplateDefaultVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLaunchTemplateDefaultVersion)(nil)).Elem()
}

func (o AwsLaunchTemplateDefaultVersionMapOutput) ToAwsLaunchTemplateDefaultVersionMapOutput() AwsLaunchTemplateDefaultVersionMapOutput {
	return o
}

func (o AwsLaunchTemplateDefaultVersionMapOutput) ToAwsLaunchTemplateDefaultVersionMapOutputWithContext(ctx context.Context) AwsLaunchTemplateDefaultVersionMapOutput {
	return o
}

func (o AwsLaunchTemplateDefaultVersionMapOutput) MapIndex(k pulumi.StringInput) AwsLaunchTemplateDefaultVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsLaunchTemplateDefaultVersion {
		return vs[0].(map[string]*AwsLaunchTemplateDefaultVersion)[vs[1].(string)]
	}).(AwsLaunchTemplateDefaultVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLaunchTemplateDefaultVersionInput)(nil)).Elem(), &AwsLaunchTemplateDefaultVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLaunchTemplateDefaultVersionArrayInput)(nil)).Elem(), AwsLaunchTemplateDefaultVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLaunchTemplateDefaultVersionMapInput)(nil)).Elem(), AwsLaunchTemplateDefaultVersionMap{})
	pulumi.RegisterOutputType(AwsLaunchTemplateDefaultVersionOutput{})
	pulumi.RegisterOutputType(AwsLaunchTemplateDefaultVersionArrayOutput{})
	pulumi.RegisterOutputType(AwsLaunchTemplateDefaultVersionMapOutput{})
}
