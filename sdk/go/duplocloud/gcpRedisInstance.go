// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `GcpRedisInstance` manages a GCP redis instance in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewGcpRedisInstance(ctx, "redis-demo", &duplocloud.GcpRedisInstanceArgs{
//				TenantId:     myapp.TenantId,
//				Name:         pulumi.String("redis-demo"),
//				DisplayName:  pulumi.String("redis-demo"),
//				Tier:         pulumi.String("BASIC"),
//				RedisVersion: pulumi.String("REDIS_4_0"),
//				MemorySizeGb: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing GCP RedisInstance
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *NAME* is the  name of the RedisInstance
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/gcpRedisInstance:GcpRedisInstance memory-cache *TENANT_ID*/*NAME*
// ```
type GcpRedisInstance struct {
	pulumi.CustomResourceState

	// Enable OSS Redis AUTH. Defaults to false (AUTH disabled).
	AuthEnabled pulumi.BoolOutput `pulumi:"authEnabled"`
	// User-provided name for the instance.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The full name of the of the Redis instance.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// Resource labels for user-provided metadata.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Redis memory size in GiB.
	MemorySizeGb pulumi.IntOutput `pulumi:"memorySizeGb"`
	// Short name of the Redis instance. Duplo adds a prefix; retrieve the full name from `fullname`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable read replica mode (can only be set during instance creation).
	ReadReplicasEnabled pulumi.BoolOutput `pulumi:"readReplicasEnabled"`
	// Redis configuration parameters. See https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs for supported parameters.
	RedisConfigs pulumi.StringMapOutput `pulumi:"redisConfigs"`
	// Version of Redis software. Defaults to the latest supported version.
	RedisVersion pulumi.StringOutput `pulumi:"redisVersion"`
	// Number of replica nodes. Valid range for Standard Tier with read replicas enabled is [1-5], default is 2. For basic tier, valid value is 0, default is 0. Defaults to `0`.
	ReplicaCount pulumi.IntPtrOutput `pulumi:"replicaCount"`
	// GUID of the tenant the Redis instance will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Service tier. Must be one of ['BASIC', 'STANDARD_HA'].
	Tier pulumi.StringOutput `pulumi:"tier"`
	// Enable TLS for the Redis instance. Defaults to disabled.
	TransitEncryptionEnabled pulumi.BoolOutput `pulumi:"transitEncryptionEnabled"`
	// Whether or not to wait until redis instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrOutput `pulumi:"waitUntilReady"`
}

// NewGcpRedisInstance registers a new resource with the given unique name, arguments, and options.
func NewGcpRedisInstance(ctx *pulumi.Context,
	name string, args *GcpRedisInstanceArgs, opts ...pulumi.ResourceOption) (*GcpRedisInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MemorySizeGb == nil {
		return nil, errors.New("invalid value for required argument 'MemorySizeGb'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	if args.Tier == nil {
		return nil, errors.New("invalid value for required argument 'Tier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GcpRedisInstance
	err := ctx.RegisterResource("duplocloud:index/gcpRedisInstance:GcpRedisInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcpRedisInstance gets an existing GcpRedisInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcpRedisInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcpRedisInstanceState, opts ...pulumi.ResourceOption) (*GcpRedisInstance, error) {
	var resource GcpRedisInstance
	err := ctx.ReadResource("duplocloud:index/gcpRedisInstance:GcpRedisInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcpRedisInstance resources.
type gcpRedisInstanceState struct {
	// Enable OSS Redis AUTH. Defaults to false (AUTH disabled).
	AuthEnabled *bool `pulumi:"authEnabled"`
	// User-provided name for the instance.
	DisplayName *string `pulumi:"displayName"`
	// The full name of the of the Redis instance.
	Fullname *string `pulumi:"fullname"`
	// Resource labels for user-provided metadata.
	Labels map[string]string `pulumi:"labels"`
	// Redis memory size in GiB.
	MemorySizeGb *int `pulumi:"memorySizeGb"`
	// Short name of the Redis instance. Duplo adds a prefix; retrieve the full name from `fullname`.
	Name *string `pulumi:"name"`
	// Enable read replica mode (can only be set during instance creation).
	ReadReplicasEnabled *bool `pulumi:"readReplicasEnabled"`
	// Redis configuration parameters. See https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs for supported parameters.
	RedisConfigs map[string]string `pulumi:"redisConfigs"`
	// Version of Redis software. Defaults to the latest supported version.
	RedisVersion *string `pulumi:"redisVersion"`
	// Number of replica nodes. Valid range for Standard Tier with read replicas enabled is [1-5], default is 2. For basic tier, valid value is 0, default is 0. Defaults to `0`.
	ReplicaCount *int `pulumi:"replicaCount"`
	// GUID of the tenant the Redis instance will be created in.
	TenantId *string `pulumi:"tenantId"`
	// Service tier. Must be one of ['BASIC', 'STANDARD_HA'].
	Tier *string `pulumi:"tier"`
	// Enable TLS for the Redis instance. Defaults to disabled.
	TransitEncryptionEnabled *bool `pulumi:"transitEncryptionEnabled"`
	// Whether or not to wait until redis instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

type GcpRedisInstanceState struct {
	// Enable OSS Redis AUTH. Defaults to false (AUTH disabled).
	AuthEnabled pulumi.BoolPtrInput
	// User-provided name for the instance.
	DisplayName pulumi.StringPtrInput
	// The full name of the of the Redis instance.
	Fullname pulumi.StringPtrInput
	// Resource labels for user-provided metadata.
	Labels pulumi.StringMapInput
	// Redis memory size in GiB.
	MemorySizeGb pulumi.IntPtrInput
	// Short name of the Redis instance. Duplo adds a prefix; retrieve the full name from `fullname`.
	Name pulumi.StringPtrInput
	// Enable read replica mode (can only be set during instance creation).
	ReadReplicasEnabled pulumi.BoolPtrInput
	// Redis configuration parameters. See https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs for supported parameters.
	RedisConfigs pulumi.StringMapInput
	// Version of Redis software. Defaults to the latest supported version.
	RedisVersion pulumi.StringPtrInput
	// Number of replica nodes. Valid range for Standard Tier with read replicas enabled is [1-5], default is 2. For basic tier, valid value is 0, default is 0. Defaults to `0`.
	ReplicaCount pulumi.IntPtrInput
	// GUID of the tenant the Redis instance will be created in.
	TenantId pulumi.StringPtrInput
	// Service tier. Must be one of ['BASIC', 'STANDARD_HA'].
	Tier pulumi.StringPtrInput
	// Enable TLS for the Redis instance. Defaults to disabled.
	TransitEncryptionEnabled pulumi.BoolPtrInput
	// Whether or not to wait until redis instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (GcpRedisInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpRedisInstanceState)(nil)).Elem()
}

type gcpRedisInstanceArgs struct {
	// Enable OSS Redis AUTH. Defaults to false (AUTH disabled).
	AuthEnabled *bool `pulumi:"authEnabled"`
	// User-provided name for the instance.
	DisplayName *string `pulumi:"displayName"`
	// Resource labels for user-provided metadata.
	Labels map[string]string `pulumi:"labels"`
	// Redis memory size in GiB.
	MemorySizeGb int `pulumi:"memorySizeGb"`
	// Short name of the Redis instance. Duplo adds a prefix; retrieve the full name from `fullname`.
	Name *string `pulumi:"name"`
	// Enable read replica mode (can only be set during instance creation).
	ReadReplicasEnabled *bool `pulumi:"readReplicasEnabled"`
	// Redis configuration parameters. See https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs for supported parameters.
	RedisConfigs map[string]string `pulumi:"redisConfigs"`
	// Version of Redis software. Defaults to the latest supported version.
	RedisVersion *string `pulumi:"redisVersion"`
	// Number of replica nodes. Valid range for Standard Tier with read replicas enabled is [1-5], default is 2. For basic tier, valid value is 0, default is 0. Defaults to `0`.
	ReplicaCount *int `pulumi:"replicaCount"`
	// GUID of the tenant the Redis instance will be created in.
	TenantId string `pulumi:"tenantId"`
	// Service tier. Must be one of ['BASIC', 'STANDARD_HA'].
	Tier string `pulumi:"tier"`
	// Enable TLS for the Redis instance. Defaults to disabled.
	TransitEncryptionEnabled *bool `pulumi:"transitEncryptionEnabled"`
	// Whether or not to wait until redis instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

// The set of arguments for constructing a GcpRedisInstance resource.
type GcpRedisInstanceArgs struct {
	// Enable OSS Redis AUTH. Defaults to false (AUTH disabled).
	AuthEnabled pulumi.BoolPtrInput
	// User-provided name for the instance.
	DisplayName pulumi.StringPtrInput
	// Resource labels for user-provided metadata.
	Labels pulumi.StringMapInput
	// Redis memory size in GiB.
	MemorySizeGb pulumi.IntInput
	// Short name of the Redis instance. Duplo adds a prefix; retrieve the full name from `fullname`.
	Name pulumi.StringPtrInput
	// Enable read replica mode (can only be set during instance creation).
	ReadReplicasEnabled pulumi.BoolPtrInput
	// Redis configuration parameters. See https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs for supported parameters.
	RedisConfigs pulumi.StringMapInput
	// Version of Redis software. Defaults to the latest supported version.
	RedisVersion pulumi.StringPtrInput
	// Number of replica nodes. Valid range for Standard Tier with read replicas enabled is [1-5], default is 2. For basic tier, valid value is 0, default is 0. Defaults to `0`.
	ReplicaCount pulumi.IntPtrInput
	// GUID of the tenant the Redis instance will be created in.
	TenantId pulumi.StringInput
	// Service tier. Must be one of ['BASIC', 'STANDARD_HA'].
	Tier pulumi.StringInput
	// Enable TLS for the Redis instance. Defaults to disabled.
	TransitEncryptionEnabled pulumi.BoolPtrInput
	// Whether or not to wait until redis instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (GcpRedisInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpRedisInstanceArgs)(nil)).Elem()
}

type GcpRedisInstanceInput interface {
	pulumi.Input

	ToGcpRedisInstanceOutput() GcpRedisInstanceOutput
	ToGcpRedisInstanceOutputWithContext(ctx context.Context) GcpRedisInstanceOutput
}

func (*GcpRedisInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpRedisInstance)(nil)).Elem()
}

func (i *GcpRedisInstance) ToGcpRedisInstanceOutput() GcpRedisInstanceOutput {
	return i.ToGcpRedisInstanceOutputWithContext(context.Background())
}

func (i *GcpRedisInstance) ToGcpRedisInstanceOutputWithContext(ctx context.Context) GcpRedisInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpRedisInstanceOutput)
}

// GcpRedisInstanceArrayInput is an input type that accepts GcpRedisInstanceArray and GcpRedisInstanceArrayOutput values.
// You can construct a concrete instance of `GcpRedisInstanceArrayInput` via:
//
//	GcpRedisInstanceArray{ GcpRedisInstanceArgs{...} }
type GcpRedisInstanceArrayInput interface {
	pulumi.Input

	ToGcpRedisInstanceArrayOutput() GcpRedisInstanceArrayOutput
	ToGcpRedisInstanceArrayOutputWithContext(context.Context) GcpRedisInstanceArrayOutput
}

type GcpRedisInstanceArray []GcpRedisInstanceInput

func (GcpRedisInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpRedisInstance)(nil)).Elem()
}

func (i GcpRedisInstanceArray) ToGcpRedisInstanceArrayOutput() GcpRedisInstanceArrayOutput {
	return i.ToGcpRedisInstanceArrayOutputWithContext(context.Background())
}

func (i GcpRedisInstanceArray) ToGcpRedisInstanceArrayOutputWithContext(ctx context.Context) GcpRedisInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpRedisInstanceArrayOutput)
}

// GcpRedisInstanceMapInput is an input type that accepts GcpRedisInstanceMap and GcpRedisInstanceMapOutput values.
// You can construct a concrete instance of `GcpRedisInstanceMapInput` via:
//
//	GcpRedisInstanceMap{ "key": GcpRedisInstanceArgs{...} }
type GcpRedisInstanceMapInput interface {
	pulumi.Input

	ToGcpRedisInstanceMapOutput() GcpRedisInstanceMapOutput
	ToGcpRedisInstanceMapOutputWithContext(context.Context) GcpRedisInstanceMapOutput
}

type GcpRedisInstanceMap map[string]GcpRedisInstanceInput

func (GcpRedisInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpRedisInstance)(nil)).Elem()
}

func (i GcpRedisInstanceMap) ToGcpRedisInstanceMapOutput() GcpRedisInstanceMapOutput {
	return i.ToGcpRedisInstanceMapOutputWithContext(context.Background())
}

func (i GcpRedisInstanceMap) ToGcpRedisInstanceMapOutputWithContext(ctx context.Context) GcpRedisInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpRedisInstanceMapOutput)
}

type GcpRedisInstanceOutput struct{ *pulumi.OutputState }

func (GcpRedisInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpRedisInstance)(nil)).Elem()
}

func (o GcpRedisInstanceOutput) ToGcpRedisInstanceOutput() GcpRedisInstanceOutput {
	return o
}

func (o GcpRedisInstanceOutput) ToGcpRedisInstanceOutputWithContext(ctx context.Context) GcpRedisInstanceOutput {
	return o
}

// Enable OSS Redis AUTH. Defaults to false (AUTH disabled).
func (o GcpRedisInstanceOutput) AuthEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.BoolOutput { return v.AuthEnabled }).(pulumi.BoolOutput)
}

// User-provided name for the instance.
func (o GcpRedisInstanceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The full name of the of the Redis instance.
func (o GcpRedisInstanceOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// Resource labels for user-provided metadata.
func (o GcpRedisInstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Redis memory size in GiB.
func (o GcpRedisInstanceOutput) MemorySizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.IntOutput { return v.MemorySizeGb }).(pulumi.IntOutput)
}

// Short name of the Redis instance. Duplo adds a prefix; retrieve the full name from `fullname`.
func (o GcpRedisInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable read replica mode (can only be set during instance creation).
func (o GcpRedisInstanceOutput) ReadReplicasEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.BoolOutput { return v.ReadReplicasEnabled }).(pulumi.BoolOutput)
}

// Redis configuration parameters. See https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs for supported parameters.
func (o GcpRedisInstanceOutput) RedisConfigs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.StringMapOutput { return v.RedisConfigs }).(pulumi.StringMapOutput)
}

// Version of Redis software. Defaults to the latest supported version.
func (o GcpRedisInstanceOutput) RedisVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.StringOutput { return v.RedisVersion }).(pulumi.StringOutput)
}

// Number of replica nodes. Valid range for Standard Tier with read replicas enabled is [1-5], default is 2. For basic tier, valid value is 0, default is 0. Defaults to `0`.
func (o GcpRedisInstanceOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.IntPtrOutput { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

// GUID of the tenant the Redis instance will be created in.
func (o GcpRedisInstanceOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Service tier. Must be one of ['BASIC', 'STANDARD_HA'].
func (o GcpRedisInstanceOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.StringOutput { return v.Tier }).(pulumi.StringOutput)
}

// Enable TLS for the Redis instance. Defaults to disabled.
func (o GcpRedisInstanceOutput) TransitEncryptionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.BoolOutput { return v.TransitEncryptionEnabled }).(pulumi.BoolOutput)
}

// Whether or not to wait until redis instance to be ready, after creation. Defaults to `true`.
func (o GcpRedisInstanceOutput) WaitUntilReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GcpRedisInstance) pulumi.BoolPtrOutput { return v.WaitUntilReady }).(pulumi.BoolPtrOutput)
}

type GcpRedisInstanceArrayOutput struct{ *pulumi.OutputState }

func (GcpRedisInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpRedisInstance)(nil)).Elem()
}

func (o GcpRedisInstanceArrayOutput) ToGcpRedisInstanceArrayOutput() GcpRedisInstanceArrayOutput {
	return o
}

func (o GcpRedisInstanceArrayOutput) ToGcpRedisInstanceArrayOutputWithContext(ctx context.Context) GcpRedisInstanceArrayOutput {
	return o
}

func (o GcpRedisInstanceArrayOutput) Index(i pulumi.IntInput) GcpRedisInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GcpRedisInstance {
		return vs[0].([]*GcpRedisInstance)[vs[1].(int)]
	}).(GcpRedisInstanceOutput)
}

type GcpRedisInstanceMapOutput struct{ *pulumi.OutputState }

func (GcpRedisInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpRedisInstance)(nil)).Elem()
}

func (o GcpRedisInstanceMapOutput) ToGcpRedisInstanceMapOutput() GcpRedisInstanceMapOutput {
	return o
}

func (o GcpRedisInstanceMapOutput) ToGcpRedisInstanceMapOutputWithContext(ctx context.Context) GcpRedisInstanceMapOutput {
	return o
}

func (o GcpRedisInstanceMapOutput) MapIndex(k pulumi.StringInput) GcpRedisInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GcpRedisInstance {
		return vs[0].(map[string]*GcpRedisInstance)[vs[1].(string)]
	}).(GcpRedisInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcpRedisInstanceInput)(nil)).Elem(), &GcpRedisInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpRedisInstanceArrayInput)(nil)).Elem(), GcpRedisInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpRedisInstanceMapInput)(nil)).Elem(), GcpRedisInstanceMap{})
	pulumi.RegisterOutputType(GcpRedisInstanceOutput{})
	pulumi.RegisterOutputType(GcpRedisInstanceArrayOutput{})
	pulumi.RegisterOutputType(GcpRedisInstanceMapOutput{})
}
