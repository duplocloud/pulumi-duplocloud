// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsBatchSchedulingPolicy` manages an aws batch scheduling policy in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsBatchSchedulingPolicy(ctx, "bsp", &duplocloud.AwsBatchSchedulingPolicyArgs{
//				TenantId: myapp.TenantId,
//				Name:     pulumi.String("test"),
//				FairSharePolicy: &duplocloud.AwsBatchSchedulingPolicyFairSharePolicyArgs{
//					ComputeReservation: pulumi.Int(1),
//					ShareDecaySeconds:  pulumi.Int(3600),
//					ShareDistributions: duplocloud.AwsBatchSchedulingPolicyFairSharePolicyShareDistributionArray{
//						&duplocloud.AwsBatchSchedulingPolicyFairSharePolicyShareDistributionArgs{
//							ShareIdentifier: pulumi.String("A1*"),
//							WeightFactor:    pulumi.Float64(0.1),
//						},
//						&duplocloud.AwsBatchSchedulingPolicyFairSharePolicyShareDistributionArgs{
//							ShareIdentifier: pulumi.String("A2"),
//							WeightFactor:    pulumi.Float64(0.2),
//						},
//					},
//				},
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("Example Batch Scheduling Policy"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS Batch Scheduling Policy
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *NAME* is the short name of Scheduling Policy
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsBatchSchedulingPolicy:AwsBatchSchedulingPolicy bsp *TENANT_ID*/*NAME*
// ```
type AwsBatchSchedulingPolicy struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name of the scheduling policy.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A fairshare policy block specifies the `computeReservation`, `shareDelaySeconds`, and `shareDistribution` of the scheduling policy. The `fairsharePolicy block` is documented below.
	FairSharePolicy AwsBatchSchedulingPolicyFairSharePolicyOutput `pulumi:"fairSharePolicy"`
	// The full name of the scheduling policy.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// Specifies the name of the scheduling policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// Key-value map of resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The GUID of the tenant that the aws batch scheduling policy will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAwsBatchSchedulingPolicy registers a new resource with the given unique name, arguments, and options.
func NewAwsBatchSchedulingPolicy(ctx *pulumi.Context,
	name string, args *AwsBatchSchedulingPolicyArgs, opts ...pulumi.ResourceOption) (*AwsBatchSchedulingPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsBatchSchedulingPolicy
	err := ctx.RegisterResource("duplocloud:index/awsBatchSchedulingPolicy:AwsBatchSchedulingPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsBatchSchedulingPolicy gets an existing AwsBatchSchedulingPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsBatchSchedulingPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsBatchSchedulingPolicyState, opts ...pulumi.ResourceOption) (*AwsBatchSchedulingPolicy, error) {
	var resource AwsBatchSchedulingPolicy
	err := ctx.ReadResource("duplocloud:index/awsBatchSchedulingPolicy:AwsBatchSchedulingPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsBatchSchedulingPolicy resources.
type awsBatchSchedulingPolicyState struct {
	// The Amazon Resource Name of the scheduling policy.
	Arn *string `pulumi:"arn"`
	// A fairshare policy block specifies the `computeReservation`, `shareDelaySeconds`, and `shareDistribution` of the scheduling policy. The `fairsharePolicy block` is documented below.
	FairSharePolicy *AwsBatchSchedulingPolicyFairSharePolicy `pulumi:"fairSharePolicy"`
	// The full name of the scheduling policy.
	Fullname *string `pulumi:"fullname"`
	// Specifies the name of the scheduling policy.
	Name *string `pulumi:"name"`
	// Key-value map of resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The GUID of the tenant that the aws batch scheduling policy will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AwsBatchSchedulingPolicyState struct {
	// The Amazon Resource Name of the scheduling policy.
	Arn pulumi.StringPtrInput
	// A fairshare policy block specifies the `computeReservation`, `shareDelaySeconds`, and `shareDistribution` of the scheduling policy. The `fairsharePolicy block` is documented below.
	FairSharePolicy AwsBatchSchedulingPolicyFairSharePolicyPtrInput
	// The full name of the scheduling policy.
	Fullname pulumi.StringPtrInput
	// Specifies the name of the scheduling policy.
	Name pulumi.StringPtrInput
	// Key-value map of resource tags.
	Tags pulumi.StringMapInput
	// The GUID of the tenant that the aws batch scheduling policy will be created in.
	TenantId pulumi.StringPtrInput
}

func (AwsBatchSchedulingPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsBatchSchedulingPolicyState)(nil)).Elem()
}

type awsBatchSchedulingPolicyArgs struct {
	// A fairshare policy block specifies the `computeReservation`, `shareDelaySeconds`, and `shareDistribution` of the scheduling policy. The `fairsharePolicy block` is documented below.
	FairSharePolicy *AwsBatchSchedulingPolicyFairSharePolicy `pulumi:"fairSharePolicy"`
	// Specifies the name of the scheduling policy.
	Name *string `pulumi:"name"`
	// Key-value map of resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The GUID of the tenant that the aws batch scheduling policy will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AwsBatchSchedulingPolicy resource.
type AwsBatchSchedulingPolicyArgs struct {
	// A fairshare policy block specifies the `computeReservation`, `shareDelaySeconds`, and `shareDistribution` of the scheduling policy. The `fairsharePolicy block` is documented below.
	FairSharePolicy AwsBatchSchedulingPolicyFairSharePolicyPtrInput
	// Specifies the name of the scheduling policy.
	Name pulumi.StringPtrInput
	// Key-value map of resource tags.
	Tags pulumi.StringMapInput
	// The GUID of the tenant that the aws batch scheduling policy will be created in.
	TenantId pulumi.StringInput
}

func (AwsBatchSchedulingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsBatchSchedulingPolicyArgs)(nil)).Elem()
}

type AwsBatchSchedulingPolicyInput interface {
	pulumi.Input

	ToAwsBatchSchedulingPolicyOutput() AwsBatchSchedulingPolicyOutput
	ToAwsBatchSchedulingPolicyOutputWithContext(ctx context.Context) AwsBatchSchedulingPolicyOutput
}

func (*AwsBatchSchedulingPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsBatchSchedulingPolicy)(nil)).Elem()
}

func (i *AwsBatchSchedulingPolicy) ToAwsBatchSchedulingPolicyOutput() AwsBatchSchedulingPolicyOutput {
	return i.ToAwsBatchSchedulingPolicyOutputWithContext(context.Background())
}

func (i *AwsBatchSchedulingPolicy) ToAwsBatchSchedulingPolicyOutputWithContext(ctx context.Context) AwsBatchSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsBatchSchedulingPolicyOutput)
}

// AwsBatchSchedulingPolicyArrayInput is an input type that accepts AwsBatchSchedulingPolicyArray and AwsBatchSchedulingPolicyArrayOutput values.
// You can construct a concrete instance of `AwsBatchSchedulingPolicyArrayInput` via:
//
//	AwsBatchSchedulingPolicyArray{ AwsBatchSchedulingPolicyArgs{...} }
type AwsBatchSchedulingPolicyArrayInput interface {
	pulumi.Input

	ToAwsBatchSchedulingPolicyArrayOutput() AwsBatchSchedulingPolicyArrayOutput
	ToAwsBatchSchedulingPolicyArrayOutputWithContext(context.Context) AwsBatchSchedulingPolicyArrayOutput
}

type AwsBatchSchedulingPolicyArray []AwsBatchSchedulingPolicyInput

func (AwsBatchSchedulingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsBatchSchedulingPolicy)(nil)).Elem()
}

func (i AwsBatchSchedulingPolicyArray) ToAwsBatchSchedulingPolicyArrayOutput() AwsBatchSchedulingPolicyArrayOutput {
	return i.ToAwsBatchSchedulingPolicyArrayOutputWithContext(context.Background())
}

func (i AwsBatchSchedulingPolicyArray) ToAwsBatchSchedulingPolicyArrayOutputWithContext(ctx context.Context) AwsBatchSchedulingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsBatchSchedulingPolicyArrayOutput)
}

// AwsBatchSchedulingPolicyMapInput is an input type that accepts AwsBatchSchedulingPolicyMap and AwsBatchSchedulingPolicyMapOutput values.
// You can construct a concrete instance of `AwsBatchSchedulingPolicyMapInput` via:
//
//	AwsBatchSchedulingPolicyMap{ "key": AwsBatchSchedulingPolicyArgs{...} }
type AwsBatchSchedulingPolicyMapInput interface {
	pulumi.Input

	ToAwsBatchSchedulingPolicyMapOutput() AwsBatchSchedulingPolicyMapOutput
	ToAwsBatchSchedulingPolicyMapOutputWithContext(context.Context) AwsBatchSchedulingPolicyMapOutput
}

type AwsBatchSchedulingPolicyMap map[string]AwsBatchSchedulingPolicyInput

func (AwsBatchSchedulingPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsBatchSchedulingPolicy)(nil)).Elem()
}

func (i AwsBatchSchedulingPolicyMap) ToAwsBatchSchedulingPolicyMapOutput() AwsBatchSchedulingPolicyMapOutput {
	return i.ToAwsBatchSchedulingPolicyMapOutputWithContext(context.Background())
}

func (i AwsBatchSchedulingPolicyMap) ToAwsBatchSchedulingPolicyMapOutputWithContext(ctx context.Context) AwsBatchSchedulingPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsBatchSchedulingPolicyMapOutput)
}

type AwsBatchSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (AwsBatchSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsBatchSchedulingPolicy)(nil)).Elem()
}

func (o AwsBatchSchedulingPolicyOutput) ToAwsBatchSchedulingPolicyOutput() AwsBatchSchedulingPolicyOutput {
	return o
}

func (o AwsBatchSchedulingPolicyOutput) ToAwsBatchSchedulingPolicyOutputWithContext(ctx context.Context) AwsBatchSchedulingPolicyOutput {
	return o
}

// The Amazon Resource Name of the scheduling policy.
func (o AwsBatchSchedulingPolicyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchSchedulingPolicy) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// A fairshare policy block specifies the `computeReservation`, `shareDelaySeconds`, and `shareDistribution` of the scheduling policy. The `fairsharePolicy block` is documented below.
func (o AwsBatchSchedulingPolicyOutput) FairSharePolicy() AwsBatchSchedulingPolicyFairSharePolicyOutput {
	return o.ApplyT(func(v *AwsBatchSchedulingPolicy) AwsBatchSchedulingPolicyFairSharePolicyOutput {
		return v.FairSharePolicy
	}).(AwsBatchSchedulingPolicyFairSharePolicyOutput)
}

// The full name of the scheduling policy.
func (o AwsBatchSchedulingPolicyOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchSchedulingPolicy) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// Specifies the name of the scheduling policy.
func (o AwsBatchSchedulingPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchSchedulingPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Key-value map of resource tags.
func (o AwsBatchSchedulingPolicyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsBatchSchedulingPolicy) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The GUID of the tenant that the aws batch scheduling policy will be created in.
func (o AwsBatchSchedulingPolicyOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchSchedulingPolicy) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AwsBatchSchedulingPolicyArrayOutput struct{ *pulumi.OutputState }

func (AwsBatchSchedulingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsBatchSchedulingPolicy)(nil)).Elem()
}

func (o AwsBatchSchedulingPolicyArrayOutput) ToAwsBatchSchedulingPolicyArrayOutput() AwsBatchSchedulingPolicyArrayOutput {
	return o
}

func (o AwsBatchSchedulingPolicyArrayOutput) ToAwsBatchSchedulingPolicyArrayOutputWithContext(ctx context.Context) AwsBatchSchedulingPolicyArrayOutput {
	return o
}

func (o AwsBatchSchedulingPolicyArrayOutput) Index(i pulumi.IntInput) AwsBatchSchedulingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsBatchSchedulingPolicy {
		return vs[0].([]*AwsBatchSchedulingPolicy)[vs[1].(int)]
	}).(AwsBatchSchedulingPolicyOutput)
}

type AwsBatchSchedulingPolicyMapOutput struct{ *pulumi.OutputState }

func (AwsBatchSchedulingPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsBatchSchedulingPolicy)(nil)).Elem()
}

func (o AwsBatchSchedulingPolicyMapOutput) ToAwsBatchSchedulingPolicyMapOutput() AwsBatchSchedulingPolicyMapOutput {
	return o
}

func (o AwsBatchSchedulingPolicyMapOutput) ToAwsBatchSchedulingPolicyMapOutputWithContext(ctx context.Context) AwsBatchSchedulingPolicyMapOutput {
	return o
}

func (o AwsBatchSchedulingPolicyMapOutput) MapIndex(k pulumi.StringInput) AwsBatchSchedulingPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsBatchSchedulingPolicy {
		return vs[0].(map[string]*AwsBatchSchedulingPolicy)[vs[1].(string)]
	}).(AwsBatchSchedulingPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsBatchSchedulingPolicyInput)(nil)).Elem(), &AwsBatchSchedulingPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsBatchSchedulingPolicyArrayInput)(nil)).Elem(), AwsBatchSchedulingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsBatchSchedulingPolicyMapInput)(nil)).Elem(), AwsBatchSchedulingPolicyMap{})
	pulumi.RegisterOutputType(AwsBatchSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(AwsBatchSchedulingPolicyArrayOutput{})
	pulumi.RegisterOutputType(AwsBatchSchedulingPolicyMapOutput{})
}
