// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `InfrastructureSetting` manages a infrastructure's configuration in Duplo.
//
// Infrastructure settings are initially populated by Duplo when an infrastructure is created.  This resource allows you take control of individual configuration settings for a specific infrastructure.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myinfra, err := duplocloud.NewInfrastructure(ctx, "myinfra", &duplocloud.InfrastructureArgs{
//				InfraName:       pulumi.String("myinfra"),
//				Cloud:           pulumi.Int(0),
//				Region:          pulumi.String("us-east-1"),
//				Azcount:         pulumi.Int(2),
//				EnableK8Cluster: pulumi.Bool(true),
//				AddressPrefix:   pulumi.String("10.34.0.0/16"),
//				SubnetCidr:      pulumi.Int(24),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewInfrastructureSetting(ctx, "settings", &duplocloud.InfrastructureSettingArgs{
//				InfraName: myinfra.Name,
//				Settings: duplocloud.InfrastructureSettingSettingArray{
//					&duplocloud.InfrastructureSettingSettingArgs{
//						Key:   pulumi.String("EnableSecretCsiDriver"),
//						Value: pulumi.String("true"),
//					},
//					&duplocloud.InfrastructureSettingSettingArgs{
//						Key:   pulumi.String("EnableAWSEfsVolumes"),
//						Value: pulumi.String("true"),
//					},
//					&duplocloud.InfrastructureSettingSettingArgs{
//						Key:   pulumi.String("EnableAwsAlbIngress"),
//						Value: pulumi.String("true"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing infrastructure setting
//
//   - *NAME* is the infrastructure name
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/infrastructureSetting:InfrastructureSetting settings *NAME*
// ```
type InfrastructureSetting struct {
	pulumi.CustomResourceState

	// A complete list of configuration settings for this infrastructure, even ones not being managed by this resource. The custom*data argument is only applied on creation, and is deprecated in favor of the settings argument.
	//
	// Deprecated: The customData argument is only applied on creation, and is deprecated in favor of the settings argument.
	CustomDatas InfrastructureSettingCustomDataArrayOutput `pulumi:"customDatas"`
	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings pulumi.BoolPtrOutput `pulumi:"deleteUnspecifiedSettings"`
	// The name of the infrastructure to configure.
	InfraName pulumi.StringOutput `pulumi:"infraName"`
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings InfrastructureSettingSettingArrayOutput `pulumi:"settings"`
	// A list of configuration setting key being managed by this resource.
	SpecifiedSettings pulumi.StringArrayOutput `pulumi:"specifiedSettings"`
}

// NewInfrastructureSetting registers a new resource with the given unique name, arguments, and options.
func NewInfrastructureSetting(ctx *pulumi.Context,
	name string, args *InfrastructureSettingArgs, opts ...pulumi.ResourceOption) (*InfrastructureSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InfraName == nil {
		return nil, errors.New("invalid value for required argument 'InfraName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InfrastructureSetting
	err := ctx.RegisterResource("duplocloud:index/infrastructureSetting:InfrastructureSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInfrastructureSetting gets an existing InfrastructureSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInfrastructureSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InfrastructureSettingState, opts ...pulumi.ResourceOption) (*InfrastructureSetting, error) {
	var resource InfrastructureSetting
	err := ctx.ReadResource("duplocloud:index/infrastructureSetting:InfrastructureSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InfrastructureSetting resources.
type infrastructureSettingState struct {
	// A complete list of configuration settings for this infrastructure, even ones not being managed by this resource. The custom*data argument is only applied on creation, and is deprecated in favor of the settings argument.
	//
	// Deprecated: The customData argument is only applied on creation, and is deprecated in favor of the settings argument.
	CustomDatas []InfrastructureSettingCustomData `pulumi:"customDatas"`
	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings *bool `pulumi:"deleteUnspecifiedSettings"`
	// The name of the infrastructure to configure.
	InfraName *string `pulumi:"infraName"`
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings []InfrastructureSettingSetting `pulumi:"settings"`
	// A list of configuration setting key being managed by this resource.
	SpecifiedSettings []string `pulumi:"specifiedSettings"`
}

type InfrastructureSettingState struct {
	// A complete list of configuration settings for this infrastructure, even ones not being managed by this resource. The custom*data argument is only applied on creation, and is deprecated in favor of the settings argument.
	//
	// Deprecated: The customData argument is only applied on creation, and is deprecated in favor of the settings argument.
	CustomDatas InfrastructureSettingCustomDataArrayInput
	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings pulumi.BoolPtrInput
	// The name of the infrastructure to configure.
	InfraName pulumi.StringPtrInput
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings InfrastructureSettingSettingArrayInput
	// A list of configuration setting key being managed by this resource.
	SpecifiedSettings pulumi.StringArrayInput
}

func (InfrastructureSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*infrastructureSettingState)(nil)).Elem()
}

type infrastructureSettingArgs struct {
	// A complete list of configuration settings for this infrastructure, even ones not being managed by this resource. The custom*data argument is only applied on creation, and is deprecated in favor of the settings argument.
	//
	// Deprecated: The customData argument is only applied on creation, and is deprecated in favor of the settings argument.
	CustomDatas []InfrastructureSettingCustomData `pulumi:"customDatas"`
	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings *bool `pulumi:"deleteUnspecifiedSettings"`
	// The name of the infrastructure to configure.
	InfraName string `pulumi:"infraName"`
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings []InfrastructureSettingSetting `pulumi:"settings"`
}

// The set of arguments for constructing a InfrastructureSetting resource.
type InfrastructureSettingArgs struct {
	// A complete list of configuration settings for this infrastructure, even ones not being managed by this resource. The custom*data argument is only applied on creation, and is deprecated in favor of the settings argument.
	//
	// Deprecated: The customData argument is only applied on creation, and is deprecated in favor of the settings argument.
	CustomDatas InfrastructureSettingCustomDataArrayInput
	// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
	DeleteUnspecifiedSettings pulumi.BoolPtrInput
	// The name of the infrastructure to configure.
	InfraName pulumi.StringInput
	// A list of configuration settings to manage, expressed as key / value pairs.
	Settings InfrastructureSettingSettingArrayInput
}

func (InfrastructureSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*infrastructureSettingArgs)(nil)).Elem()
}

type InfrastructureSettingInput interface {
	pulumi.Input

	ToInfrastructureSettingOutput() InfrastructureSettingOutput
	ToInfrastructureSettingOutputWithContext(ctx context.Context) InfrastructureSettingOutput
}

func (*InfrastructureSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureSetting)(nil)).Elem()
}

func (i *InfrastructureSetting) ToInfrastructureSettingOutput() InfrastructureSettingOutput {
	return i.ToInfrastructureSettingOutputWithContext(context.Background())
}

func (i *InfrastructureSetting) ToInfrastructureSettingOutputWithContext(ctx context.Context) InfrastructureSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureSettingOutput)
}

// InfrastructureSettingArrayInput is an input type that accepts InfrastructureSettingArray and InfrastructureSettingArrayOutput values.
// You can construct a concrete instance of `InfrastructureSettingArrayInput` via:
//
//	InfrastructureSettingArray{ InfrastructureSettingArgs{...} }
type InfrastructureSettingArrayInput interface {
	pulumi.Input

	ToInfrastructureSettingArrayOutput() InfrastructureSettingArrayOutput
	ToInfrastructureSettingArrayOutputWithContext(context.Context) InfrastructureSettingArrayOutput
}

type InfrastructureSettingArray []InfrastructureSettingInput

func (InfrastructureSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfrastructureSetting)(nil)).Elem()
}

func (i InfrastructureSettingArray) ToInfrastructureSettingArrayOutput() InfrastructureSettingArrayOutput {
	return i.ToInfrastructureSettingArrayOutputWithContext(context.Background())
}

func (i InfrastructureSettingArray) ToInfrastructureSettingArrayOutputWithContext(ctx context.Context) InfrastructureSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureSettingArrayOutput)
}

// InfrastructureSettingMapInput is an input type that accepts InfrastructureSettingMap and InfrastructureSettingMapOutput values.
// You can construct a concrete instance of `InfrastructureSettingMapInput` via:
//
//	InfrastructureSettingMap{ "key": InfrastructureSettingArgs{...} }
type InfrastructureSettingMapInput interface {
	pulumi.Input

	ToInfrastructureSettingMapOutput() InfrastructureSettingMapOutput
	ToInfrastructureSettingMapOutputWithContext(context.Context) InfrastructureSettingMapOutput
}

type InfrastructureSettingMap map[string]InfrastructureSettingInput

func (InfrastructureSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfrastructureSetting)(nil)).Elem()
}

func (i InfrastructureSettingMap) ToInfrastructureSettingMapOutput() InfrastructureSettingMapOutput {
	return i.ToInfrastructureSettingMapOutputWithContext(context.Background())
}

func (i InfrastructureSettingMap) ToInfrastructureSettingMapOutputWithContext(ctx context.Context) InfrastructureSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureSettingMapOutput)
}

type InfrastructureSettingOutput struct{ *pulumi.OutputState }

func (InfrastructureSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureSetting)(nil)).Elem()
}

func (o InfrastructureSettingOutput) ToInfrastructureSettingOutput() InfrastructureSettingOutput {
	return o
}

func (o InfrastructureSettingOutput) ToInfrastructureSettingOutputWithContext(ctx context.Context) InfrastructureSettingOutput {
	return o
}

// A complete list of configuration settings for this infrastructure, even ones not being managed by this resource. The custom*data argument is only applied on creation, and is deprecated in favor of the settings argument.
//
// Deprecated: The customData argument is only applied on creation, and is deprecated in favor of the settings argument.
func (o InfrastructureSettingOutput) CustomDatas() InfrastructureSettingCustomDataArrayOutput {
	return o.ApplyT(func(v *InfrastructureSetting) InfrastructureSettingCustomDataArrayOutput { return v.CustomDatas }).(InfrastructureSettingCustomDataArrayOutput)
}

// Whether or not this resource should delete any settings not specified by this resource. **WARNING:**  It is not recommended to change the default value of `false`. Defaults to `false`.
func (o InfrastructureSettingOutput) DeleteUnspecifiedSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InfrastructureSetting) pulumi.BoolPtrOutput { return v.DeleteUnspecifiedSettings }).(pulumi.BoolPtrOutput)
}

// The name of the infrastructure to configure.
func (o InfrastructureSettingOutput) InfraName() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureSetting) pulumi.StringOutput { return v.InfraName }).(pulumi.StringOutput)
}

// A list of configuration settings to manage, expressed as key / value pairs.
func (o InfrastructureSettingOutput) Settings() InfrastructureSettingSettingArrayOutput {
	return o.ApplyT(func(v *InfrastructureSetting) InfrastructureSettingSettingArrayOutput { return v.Settings }).(InfrastructureSettingSettingArrayOutput)
}

// A list of configuration setting key being managed by this resource.
func (o InfrastructureSettingOutput) SpecifiedSettings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InfrastructureSetting) pulumi.StringArrayOutput { return v.SpecifiedSettings }).(pulumi.StringArrayOutput)
}

type InfrastructureSettingArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfrastructureSetting)(nil)).Elem()
}

func (o InfrastructureSettingArrayOutput) ToInfrastructureSettingArrayOutput() InfrastructureSettingArrayOutput {
	return o
}

func (o InfrastructureSettingArrayOutput) ToInfrastructureSettingArrayOutputWithContext(ctx context.Context) InfrastructureSettingArrayOutput {
	return o
}

func (o InfrastructureSettingArrayOutput) Index(i pulumi.IntInput) InfrastructureSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InfrastructureSetting {
		return vs[0].([]*InfrastructureSetting)[vs[1].(int)]
	}).(InfrastructureSettingOutput)
}

type InfrastructureSettingMapOutput struct{ *pulumi.OutputState }

func (InfrastructureSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfrastructureSetting)(nil)).Elem()
}

func (o InfrastructureSettingMapOutput) ToInfrastructureSettingMapOutput() InfrastructureSettingMapOutput {
	return o
}

func (o InfrastructureSettingMapOutput) ToInfrastructureSettingMapOutputWithContext(ctx context.Context) InfrastructureSettingMapOutput {
	return o
}

func (o InfrastructureSettingMapOutput) MapIndex(k pulumi.StringInput) InfrastructureSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InfrastructureSetting {
		return vs[0].(map[string]*InfrastructureSetting)[vs[1].(string)]
	}).(InfrastructureSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureSettingInput)(nil)).Elem(), &InfrastructureSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureSettingArrayInput)(nil)).Elem(), InfrastructureSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureSettingMapInput)(nil)).Elem(), InfrastructureSettingMap{})
	pulumi.RegisterOutputType(InfrastructureSettingOutput{})
	pulumi.RegisterOutputType(InfrastructureSettingArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureSettingMapOutput{})
}
