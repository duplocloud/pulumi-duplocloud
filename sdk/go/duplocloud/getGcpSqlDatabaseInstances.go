// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `getGcpSqlDatabaseInstances` retrieves a gcp sql instance in Duplo.
func GetGcpSqlDatabaseInstances(ctx *pulumi.Context, args *GetGcpSqlDatabaseInstancesArgs, opts ...pulumi.InvokeOption) (*GetGcpSqlDatabaseInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGcpSqlDatabaseInstancesResult
	err := ctx.Invoke("duplocloud:index/getGcpSqlDatabaseInstances:getGcpSqlDatabaseInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGcpSqlDatabaseInstances.
type GetGcpSqlDatabaseInstancesArgs struct {
	// The GUID of the tenant that the sql database will be created in.
	TenantId string `pulumi:"tenantId"`
}

// A collection of values returned by getGcpSqlDatabaseInstances.
type GetGcpSqlDatabaseInstancesResult struct {
	Databases []GetGcpSqlDatabaseInstancesDatabase `pulumi:"databases"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The GUID of the tenant that the sql database will be created in.
	TenantId string `pulumi:"tenantId"`
}

func GetGcpSqlDatabaseInstancesOutput(ctx *pulumi.Context, args GetGcpSqlDatabaseInstancesOutputArgs, opts ...pulumi.InvokeOption) GetGcpSqlDatabaseInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetGcpSqlDatabaseInstancesResultOutput, error) {
			args := v.(GetGcpSqlDatabaseInstancesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getGcpSqlDatabaseInstances:getGcpSqlDatabaseInstances", args, GetGcpSqlDatabaseInstancesResultOutput{}, options).(GetGcpSqlDatabaseInstancesResultOutput), nil
		}).(GetGcpSqlDatabaseInstancesResultOutput)
}

// A collection of arguments for invoking getGcpSqlDatabaseInstances.
type GetGcpSqlDatabaseInstancesOutputArgs struct {
	// The GUID of the tenant that the sql database will be created in.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetGcpSqlDatabaseInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpSqlDatabaseInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getGcpSqlDatabaseInstances.
type GetGcpSqlDatabaseInstancesResultOutput struct{ *pulumi.OutputState }

func (GetGcpSqlDatabaseInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpSqlDatabaseInstancesResult)(nil)).Elem()
}

func (o GetGcpSqlDatabaseInstancesResultOutput) ToGetGcpSqlDatabaseInstancesResultOutput() GetGcpSqlDatabaseInstancesResultOutput {
	return o
}

func (o GetGcpSqlDatabaseInstancesResultOutput) ToGetGcpSqlDatabaseInstancesResultOutputWithContext(ctx context.Context) GetGcpSqlDatabaseInstancesResultOutput {
	return o
}

func (o GetGcpSqlDatabaseInstancesResultOutput) Databases() GetGcpSqlDatabaseInstancesDatabaseArrayOutput {
	return o.ApplyT(func(v GetGcpSqlDatabaseInstancesResult) []GetGcpSqlDatabaseInstancesDatabase { return v.Databases }).(GetGcpSqlDatabaseInstancesDatabaseArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGcpSqlDatabaseInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpSqlDatabaseInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The GUID of the tenant that the sql database will be created in.
func (o GetGcpSqlDatabaseInstancesResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpSqlDatabaseInstancesResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGcpSqlDatabaseInstancesResultOutput{})
}
