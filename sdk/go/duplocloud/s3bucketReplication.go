// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource S3BucketReplication is dependent on duplocloud_s3_bucket. This resource sets replication rules for source bucket
//
// ## Import
//
// Example: Importing an existing S3 bucket replication
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SOURCEBUCKETNAME* is the full name of the S3 bucket
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/s3BucketReplication:S3BucketReplication mybucket *TENANT_ID*/*SOURCEBUCKETNAME*
// ```
type S3BucketReplication struct {
	pulumi.CustomResourceState

	// replication rules for source bucket
	Rules S3BucketReplicationRuleArrayOutput `pulumi:"rules"`
	// fullname of the source bucket.
	SourceBucket pulumi.StringOutput `pulumi:"sourceBucket"`
	// The GUID of the tenant that the S3 bucket replication rule will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewS3BucketReplication registers a new resource with the given unique name, arguments, and options.
func NewS3BucketReplication(ctx *pulumi.Context,
	name string, args *S3BucketReplicationArgs, opts ...pulumi.ResourceOption) (*S3BucketReplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.SourceBucket == nil {
		return nil, errors.New("invalid value for required argument 'SourceBucket'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource S3BucketReplication
	err := ctx.RegisterResource("duplocloud:index/s3BucketReplication:S3BucketReplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetS3BucketReplication gets an existing S3BucketReplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetS3BucketReplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *S3BucketReplicationState, opts ...pulumi.ResourceOption) (*S3BucketReplication, error) {
	var resource S3BucketReplication
	err := ctx.ReadResource("duplocloud:index/s3BucketReplication:S3BucketReplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering S3BucketReplication resources.
type s3bucketReplicationState struct {
	// replication rules for source bucket
	Rules []S3BucketReplicationRule `pulumi:"rules"`
	// fullname of the source bucket.
	SourceBucket *string `pulumi:"sourceBucket"`
	// The GUID of the tenant that the S3 bucket replication rule will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type S3BucketReplicationState struct {
	// replication rules for source bucket
	Rules S3BucketReplicationRuleArrayInput
	// fullname of the source bucket.
	SourceBucket pulumi.StringPtrInput
	// The GUID of the tenant that the S3 bucket replication rule will be created in.
	TenantId pulumi.StringPtrInput
}

func (S3BucketReplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*s3bucketReplicationState)(nil)).Elem()
}

type s3bucketReplicationArgs struct {
	// replication rules for source bucket
	Rules []S3BucketReplicationRule `pulumi:"rules"`
	// fullname of the source bucket.
	SourceBucket string `pulumi:"sourceBucket"`
	// The GUID of the tenant that the S3 bucket replication rule will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a S3BucketReplication resource.
type S3BucketReplicationArgs struct {
	// replication rules for source bucket
	Rules S3BucketReplicationRuleArrayInput
	// fullname of the source bucket.
	SourceBucket pulumi.StringInput
	// The GUID of the tenant that the S3 bucket replication rule will be created in.
	TenantId pulumi.StringInput
}

func (S3BucketReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*s3bucketReplicationArgs)(nil)).Elem()
}

type S3BucketReplicationInput interface {
	pulumi.Input

	ToS3BucketReplicationOutput() S3BucketReplicationOutput
	ToS3BucketReplicationOutputWithContext(ctx context.Context) S3BucketReplicationOutput
}

func (*S3BucketReplication) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketReplication)(nil)).Elem()
}

func (i *S3BucketReplication) ToS3BucketReplicationOutput() S3BucketReplicationOutput {
	return i.ToS3BucketReplicationOutputWithContext(context.Background())
}

func (i *S3BucketReplication) ToS3BucketReplicationOutputWithContext(ctx context.Context) S3BucketReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketReplicationOutput)
}

// S3BucketReplicationArrayInput is an input type that accepts S3BucketReplicationArray and S3BucketReplicationArrayOutput values.
// You can construct a concrete instance of `S3BucketReplicationArrayInput` via:
//
//	S3BucketReplicationArray{ S3BucketReplicationArgs{...} }
type S3BucketReplicationArrayInput interface {
	pulumi.Input

	ToS3BucketReplicationArrayOutput() S3BucketReplicationArrayOutput
	ToS3BucketReplicationArrayOutputWithContext(context.Context) S3BucketReplicationArrayOutput
}

type S3BucketReplicationArray []S3BucketReplicationInput

func (S3BucketReplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*S3BucketReplication)(nil)).Elem()
}

func (i S3BucketReplicationArray) ToS3BucketReplicationArrayOutput() S3BucketReplicationArrayOutput {
	return i.ToS3BucketReplicationArrayOutputWithContext(context.Background())
}

func (i S3BucketReplicationArray) ToS3BucketReplicationArrayOutputWithContext(ctx context.Context) S3BucketReplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketReplicationArrayOutput)
}

// S3BucketReplicationMapInput is an input type that accepts S3BucketReplicationMap and S3BucketReplicationMapOutput values.
// You can construct a concrete instance of `S3BucketReplicationMapInput` via:
//
//	S3BucketReplicationMap{ "key": S3BucketReplicationArgs{...} }
type S3BucketReplicationMapInput interface {
	pulumi.Input

	ToS3BucketReplicationMapOutput() S3BucketReplicationMapOutput
	ToS3BucketReplicationMapOutputWithContext(context.Context) S3BucketReplicationMapOutput
}

type S3BucketReplicationMap map[string]S3BucketReplicationInput

func (S3BucketReplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*S3BucketReplication)(nil)).Elem()
}

func (i S3BucketReplicationMap) ToS3BucketReplicationMapOutput() S3BucketReplicationMapOutput {
	return i.ToS3BucketReplicationMapOutputWithContext(context.Background())
}

func (i S3BucketReplicationMap) ToS3BucketReplicationMapOutputWithContext(ctx context.Context) S3BucketReplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketReplicationMapOutput)
}

type S3BucketReplicationOutput struct{ *pulumi.OutputState }

func (S3BucketReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketReplication)(nil)).Elem()
}

func (o S3BucketReplicationOutput) ToS3BucketReplicationOutput() S3BucketReplicationOutput {
	return o
}

func (o S3BucketReplicationOutput) ToS3BucketReplicationOutputWithContext(ctx context.Context) S3BucketReplicationOutput {
	return o
}

// replication rules for source bucket
func (o S3BucketReplicationOutput) Rules() S3BucketReplicationRuleArrayOutput {
	return o.ApplyT(func(v *S3BucketReplication) S3BucketReplicationRuleArrayOutput { return v.Rules }).(S3BucketReplicationRuleArrayOutput)
}

// fullname of the source bucket.
func (o S3BucketReplicationOutput) SourceBucket() pulumi.StringOutput {
	return o.ApplyT(func(v *S3BucketReplication) pulumi.StringOutput { return v.SourceBucket }).(pulumi.StringOutput)
}

// The GUID of the tenant that the S3 bucket replication rule will be created in.
func (o S3BucketReplicationOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *S3BucketReplication) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type S3BucketReplicationArrayOutput struct{ *pulumi.OutputState }

func (S3BucketReplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*S3BucketReplication)(nil)).Elem()
}

func (o S3BucketReplicationArrayOutput) ToS3BucketReplicationArrayOutput() S3BucketReplicationArrayOutput {
	return o
}

func (o S3BucketReplicationArrayOutput) ToS3BucketReplicationArrayOutputWithContext(ctx context.Context) S3BucketReplicationArrayOutput {
	return o
}

func (o S3BucketReplicationArrayOutput) Index(i pulumi.IntInput) S3BucketReplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *S3BucketReplication {
		return vs[0].([]*S3BucketReplication)[vs[1].(int)]
	}).(S3BucketReplicationOutput)
}

type S3BucketReplicationMapOutput struct{ *pulumi.OutputState }

func (S3BucketReplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*S3BucketReplication)(nil)).Elem()
}

func (o S3BucketReplicationMapOutput) ToS3BucketReplicationMapOutput() S3BucketReplicationMapOutput {
	return o
}

func (o S3BucketReplicationMapOutput) ToS3BucketReplicationMapOutputWithContext(ctx context.Context) S3BucketReplicationMapOutput {
	return o
}

func (o S3BucketReplicationMapOutput) MapIndex(k pulumi.StringInput) S3BucketReplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *S3BucketReplication {
		return vs[0].(map[string]*S3BucketReplication)[vs[1].(string)]
	}).(S3BucketReplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketReplicationInput)(nil)).Elem(), &S3BucketReplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketReplicationArrayInput)(nil)).Elem(), S3BucketReplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketReplicationMapInput)(nil)).Elem(), S3BucketReplicationMap{})
	pulumi.RegisterOutputType(S3BucketReplicationOutput{})
	pulumi.RegisterOutputType(S3BucketReplicationArrayOutput{})
	pulumi.RegisterOutputType(S3BucketReplicationMapOutput{})
}
