// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `PlanSettings` manages an plan settings in Duplo.
func LookupPlanSettings(ctx *pulumi.Context, args *LookupPlanSettingsArgs, opts ...pulumi.InvokeOption) (*LookupPlanSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPlanSettingsResult
	err := ctx.Invoke("duplocloud:index/getPlanSettings:getPlanSettings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlanSettings.
type LookupPlanSettingsArgs struct {
	// Defaults to `true`.
	IncludeGlobalDns *bool  `pulumi:"includeGlobalDns"`
	PlanId           string `pulumi:"planId"`
}

// A collection of values returned by getPlanSettings.
type LookupPlanSettingsResult struct {
	DnsSettings []GetPlanSettingsDnsSetting `pulumi:"dnsSettings"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Defaults to `true`.
	IncludeGlobalDns  *bool                     `pulumi:"includeGlobalDns"`
	Metadatas         []GetPlanSettingsMetadata `pulumi:"metadatas"`
	PlanId            string                    `pulumi:"planId"`
	UnrestrictedExtLb bool                      `pulumi:"unrestrictedExtLb"`
}

func LookupPlanSettingsOutput(ctx *pulumi.Context, args LookupPlanSettingsOutputArgs, opts ...pulumi.InvokeOption) LookupPlanSettingsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPlanSettingsResultOutput, error) {
			args := v.(LookupPlanSettingsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getPlanSettings:getPlanSettings", args, LookupPlanSettingsResultOutput{}, options).(LookupPlanSettingsResultOutput), nil
		}).(LookupPlanSettingsResultOutput)
}

// A collection of arguments for invoking getPlanSettings.
type LookupPlanSettingsOutputArgs struct {
	// Defaults to `true`.
	IncludeGlobalDns pulumi.BoolPtrInput `pulumi:"includeGlobalDns"`
	PlanId           pulumi.StringInput  `pulumi:"planId"`
}

func (LookupPlanSettingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanSettingsArgs)(nil)).Elem()
}

// A collection of values returned by getPlanSettings.
type LookupPlanSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupPlanSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanSettingsResult)(nil)).Elem()
}

func (o LookupPlanSettingsResultOutput) ToLookupPlanSettingsResultOutput() LookupPlanSettingsResultOutput {
	return o
}

func (o LookupPlanSettingsResultOutput) ToLookupPlanSettingsResultOutputWithContext(ctx context.Context) LookupPlanSettingsResultOutput {
	return o
}

func (o LookupPlanSettingsResultOutput) DnsSettings() GetPlanSettingsDnsSettingArrayOutput {
	return o.ApplyT(func(v LookupPlanSettingsResult) []GetPlanSettingsDnsSetting { return v.DnsSettings }).(GetPlanSettingsDnsSettingArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPlanSettingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanSettingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Defaults to `true`.
func (o LookupPlanSettingsResultOutput) IncludeGlobalDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPlanSettingsResult) *bool { return v.IncludeGlobalDns }).(pulumi.BoolPtrOutput)
}

func (o LookupPlanSettingsResultOutput) Metadatas() GetPlanSettingsMetadataArrayOutput {
	return o.ApplyT(func(v LookupPlanSettingsResult) []GetPlanSettingsMetadata { return v.Metadatas }).(GetPlanSettingsMetadataArrayOutput)
}

func (o LookupPlanSettingsResultOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanSettingsResult) string { return v.PlanId }).(pulumi.StringOutput)
}

func (o LookupPlanSettingsResultOutput) UnrestrictedExtLb() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPlanSettingsResult) bool { return v.UnrestrictedExtLb }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlanSettingsResultOutput{})
}
