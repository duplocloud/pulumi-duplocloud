// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzurePrivateEndpoint` manages an azure private endpoint in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAzurePrivateEndpoint(ctx, "mssql_server_private_endpoint", &duplocloud.AzurePrivateEndpointArgs{
//				TenantId: myapp.TenantId,
//				Name:     pulumi.String("pe-duplo-tf"),
//				SubnetId: pulumi.String("/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.Network/virtualNetworks/tmerge/subnets/duploinfra-default"),
//				PrivateLinkServiceConnections: duplocloud.AzurePrivateEndpointPrivateLinkServiceConnectionArray{
//					&duplocloud.AzurePrivateEndpointPrivateLinkServiceConnectionArgs{
//						Name:                        pulumi.String("pe-mssql"),
//						PrivateConnectionResourceId: pulumi.String("/subscriptions/<subscription-id>/resourceGroups/duploservices-jee556/providers/Microsoft.Sql/servers/thisistotestprivateendpoint"),
//						GroupIds: pulumi.StringArray{
//							pulumi.String("sqlServer"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAzurePrivateEndpoint(ctx, "storage_server_private_endpoint", &duplocloud.AzurePrivateEndpointArgs{
//				TenantId: myapp.TenantId,
//				Name:     pulumi.String("pe-duplo-tf-storage"),
//				SubnetId: pulumi.String("/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.Network/virtualNetworks/tmerge/subnets/duploinfra-default"),
//				PrivateLinkServiceConnections: duplocloud.AzurePrivateEndpointPrivateLinkServiceConnectionArray{
//					&duplocloud.AzurePrivateEndpointPrivateLinkServiceConnectionArgs{
//						Name:                        pulumi.String("pe-storage"),
//						PrivateConnectionResourceId: pulumi.String("/subscriptions/<subscription-id>/resourceGroups/duploservices-jee556/providers/Microsoft.Storage/storageAccounts/letsfixprivateendpoint"),
//						GroupIds: pulumi.StringArray{
//							pulumi.String("Blob"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing Azure Private Endpoint
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *NAME* is the name of the Azure  Private Endpoint
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/azurePrivateEndpoint:AzurePrivateEndpoint private_endpoint *TENANT_ID*/*NAME*
// ```
type AzurePrivateEndpoint struct {
	pulumi.CustomResourceState

	// Specifies the Name of the Private Endpoint.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies private link service connections.
	PrivateLinkServiceConnections AzurePrivateEndpointPrivateLinkServiceConnectionArrayOutput `pulumi:"privateLinkServiceConnections"`
	// The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// The GUID of the tenant that the azure private endpoint will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAzurePrivateEndpoint registers a new resource with the given unique name, arguments, and options.
func NewAzurePrivateEndpoint(ctx *pulumi.Context,
	name string, args *AzurePrivateEndpointArgs, opts ...pulumi.ResourceOption) (*AzurePrivateEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrivateLinkServiceConnections == nil {
		return nil, errors.New("invalid value for required argument 'PrivateLinkServiceConnections'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzurePrivateEndpoint
	err := ctx.RegisterResource("duplocloud:index/azurePrivateEndpoint:AzurePrivateEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzurePrivateEndpoint gets an existing AzurePrivateEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzurePrivateEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzurePrivateEndpointState, opts ...pulumi.ResourceOption) (*AzurePrivateEndpoint, error) {
	var resource AzurePrivateEndpoint
	err := ctx.ReadResource("duplocloud:index/azurePrivateEndpoint:AzurePrivateEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzurePrivateEndpoint resources.
type azurePrivateEndpointState struct {
	// Specifies the Name of the Private Endpoint.
	Name *string `pulumi:"name"`
	// Specifies private link service connections.
	PrivateLinkServiceConnections []AzurePrivateEndpointPrivateLinkServiceConnection `pulumi:"privateLinkServiceConnections"`
	// The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint.
	SubnetId *string `pulumi:"subnetId"`
	// The GUID of the tenant that the azure private endpoint will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AzurePrivateEndpointState struct {
	// Specifies the Name of the Private Endpoint.
	Name pulumi.StringPtrInput
	// Specifies private link service connections.
	PrivateLinkServiceConnections AzurePrivateEndpointPrivateLinkServiceConnectionArrayInput
	// The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint.
	SubnetId pulumi.StringPtrInput
	// The GUID of the tenant that the azure private endpoint will be created in.
	TenantId pulumi.StringPtrInput
}

func (AzurePrivateEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*azurePrivateEndpointState)(nil)).Elem()
}

type azurePrivateEndpointArgs struct {
	// Specifies the Name of the Private Endpoint.
	Name *string `pulumi:"name"`
	// Specifies private link service connections.
	PrivateLinkServiceConnections []AzurePrivateEndpointPrivateLinkServiceConnection `pulumi:"privateLinkServiceConnections"`
	// The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint.
	SubnetId string `pulumi:"subnetId"`
	// The GUID of the tenant that the azure private endpoint will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AzurePrivateEndpoint resource.
type AzurePrivateEndpointArgs struct {
	// Specifies the Name of the Private Endpoint.
	Name pulumi.StringPtrInput
	// Specifies private link service connections.
	PrivateLinkServiceConnections AzurePrivateEndpointPrivateLinkServiceConnectionArrayInput
	// The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint.
	SubnetId pulumi.StringInput
	// The GUID of the tenant that the azure private endpoint will be created in.
	TenantId pulumi.StringInput
}

func (AzurePrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azurePrivateEndpointArgs)(nil)).Elem()
}

type AzurePrivateEndpointInput interface {
	pulumi.Input

	ToAzurePrivateEndpointOutput() AzurePrivateEndpointOutput
	ToAzurePrivateEndpointOutputWithContext(ctx context.Context) AzurePrivateEndpointOutput
}

func (*AzurePrivateEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**AzurePrivateEndpoint)(nil)).Elem()
}

func (i *AzurePrivateEndpoint) ToAzurePrivateEndpointOutput() AzurePrivateEndpointOutput {
	return i.ToAzurePrivateEndpointOutputWithContext(context.Background())
}

func (i *AzurePrivateEndpoint) ToAzurePrivateEndpointOutputWithContext(ctx context.Context) AzurePrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePrivateEndpointOutput)
}

// AzurePrivateEndpointArrayInput is an input type that accepts AzurePrivateEndpointArray and AzurePrivateEndpointArrayOutput values.
// You can construct a concrete instance of `AzurePrivateEndpointArrayInput` via:
//
//	AzurePrivateEndpointArray{ AzurePrivateEndpointArgs{...} }
type AzurePrivateEndpointArrayInput interface {
	pulumi.Input

	ToAzurePrivateEndpointArrayOutput() AzurePrivateEndpointArrayOutput
	ToAzurePrivateEndpointArrayOutputWithContext(context.Context) AzurePrivateEndpointArrayOutput
}

type AzurePrivateEndpointArray []AzurePrivateEndpointInput

func (AzurePrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzurePrivateEndpoint)(nil)).Elem()
}

func (i AzurePrivateEndpointArray) ToAzurePrivateEndpointArrayOutput() AzurePrivateEndpointArrayOutput {
	return i.ToAzurePrivateEndpointArrayOutputWithContext(context.Background())
}

func (i AzurePrivateEndpointArray) ToAzurePrivateEndpointArrayOutputWithContext(ctx context.Context) AzurePrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePrivateEndpointArrayOutput)
}

// AzurePrivateEndpointMapInput is an input type that accepts AzurePrivateEndpointMap and AzurePrivateEndpointMapOutput values.
// You can construct a concrete instance of `AzurePrivateEndpointMapInput` via:
//
//	AzurePrivateEndpointMap{ "key": AzurePrivateEndpointArgs{...} }
type AzurePrivateEndpointMapInput interface {
	pulumi.Input

	ToAzurePrivateEndpointMapOutput() AzurePrivateEndpointMapOutput
	ToAzurePrivateEndpointMapOutputWithContext(context.Context) AzurePrivateEndpointMapOutput
}

type AzurePrivateEndpointMap map[string]AzurePrivateEndpointInput

func (AzurePrivateEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzurePrivateEndpoint)(nil)).Elem()
}

func (i AzurePrivateEndpointMap) ToAzurePrivateEndpointMapOutput() AzurePrivateEndpointMapOutput {
	return i.ToAzurePrivateEndpointMapOutputWithContext(context.Background())
}

func (i AzurePrivateEndpointMap) ToAzurePrivateEndpointMapOutputWithContext(ctx context.Context) AzurePrivateEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePrivateEndpointMapOutput)
}

type AzurePrivateEndpointOutput struct{ *pulumi.OutputState }

func (AzurePrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzurePrivateEndpoint)(nil)).Elem()
}

func (o AzurePrivateEndpointOutput) ToAzurePrivateEndpointOutput() AzurePrivateEndpointOutput {
	return o
}

func (o AzurePrivateEndpointOutput) ToAzurePrivateEndpointOutputWithContext(ctx context.Context) AzurePrivateEndpointOutput {
	return o
}

// Specifies the Name of the Private Endpoint.
func (o AzurePrivateEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzurePrivateEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies private link service connections.
func (o AzurePrivateEndpointOutput) PrivateLinkServiceConnections() AzurePrivateEndpointPrivateLinkServiceConnectionArrayOutput {
	return o.ApplyT(func(v *AzurePrivateEndpoint) AzurePrivateEndpointPrivateLinkServiceConnectionArrayOutput {
		return v.PrivateLinkServiceConnections
	}).(AzurePrivateEndpointPrivateLinkServiceConnectionArrayOutput)
}

// The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint.
func (o AzurePrivateEndpointOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzurePrivateEndpoint) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// The GUID of the tenant that the azure private endpoint will be created in.
func (o AzurePrivateEndpointOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzurePrivateEndpoint) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AzurePrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (AzurePrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzurePrivateEndpoint)(nil)).Elem()
}

func (o AzurePrivateEndpointArrayOutput) ToAzurePrivateEndpointArrayOutput() AzurePrivateEndpointArrayOutput {
	return o
}

func (o AzurePrivateEndpointArrayOutput) ToAzurePrivateEndpointArrayOutputWithContext(ctx context.Context) AzurePrivateEndpointArrayOutput {
	return o
}

func (o AzurePrivateEndpointArrayOutput) Index(i pulumi.IntInput) AzurePrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzurePrivateEndpoint {
		return vs[0].([]*AzurePrivateEndpoint)[vs[1].(int)]
	}).(AzurePrivateEndpointOutput)
}

type AzurePrivateEndpointMapOutput struct{ *pulumi.OutputState }

func (AzurePrivateEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzurePrivateEndpoint)(nil)).Elem()
}

func (o AzurePrivateEndpointMapOutput) ToAzurePrivateEndpointMapOutput() AzurePrivateEndpointMapOutput {
	return o
}

func (o AzurePrivateEndpointMapOutput) ToAzurePrivateEndpointMapOutputWithContext(ctx context.Context) AzurePrivateEndpointMapOutput {
	return o
}

func (o AzurePrivateEndpointMapOutput) MapIndex(k pulumi.StringInput) AzurePrivateEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzurePrivateEndpoint {
		return vs[0].(map[string]*AzurePrivateEndpoint)[vs[1].(string)]
	}).(AzurePrivateEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzurePrivateEndpointInput)(nil)).Elem(), &AzurePrivateEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzurePrivateEndpointArrayInput)(nil)).Elem(), AzurePrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzurePrivateEndpointMapInput)(nil)).Elem(), AzurePrivateEndpointMap{})
	pulumi.RegisterOutputType(AzurePrivateEndpointOutput{})
	pulumi.RegisterOutputType(AzurePrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(AzurePrivateEndpointMapOutput{})
}
