// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Deploy a host which will be used for DuploCloud platform's native container agent to deploy native containers
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Before creating a host, you must first set up the infrastructure without an eks cluster. Then, you must create a tenant inside the infra. Below is the resource for creating the infrastructure.
//			infra, err := duplocloud.NewInfrastructure(ctx, "infra", &duplocloud.InfrastructureArgs{
//				InfraName:       pulumi.String("dev"),
//				Cloud:           pulumi.Int(0),
//				Region:          pulumi.String("us-east-1"),
//				EnableK8Cluster: pulumi.Bool(false),
//				AddressPrefix:   pulumi.String("10.13.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			// Use the infrastructure name as the 'plan_id' from the 'duplocloud_infrastructure' resource while creating tenant.
//			tenant, err := duplocloud.NewTenant(ctx, "tenant", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("dev"),
//				PlanId:      infra.InfraName,
//			})
//			if err != nil {
//				return err
//			}
//			// Create a data source to retrieve the Machine Image ID to be used by the host
//			image := duplocloud.GetNativeHostImageOutput(ctx, duplocloud.GetNativeHostImageOutputArgs{
//				TenantId:     tenant.TenantId,
//				IsKubernetes: pulumi.Bool(false),
//			}, nil)
//			_, err = duplocloud.NewAwsHost(ctx, "native", &duplocloud.AwsHostArgs{
//				TenantId:     tenant.TenantId,
//				FriendlyName: pulumi.String("host01"),
//				ImageId: pulumi.String(image.ApplyT(func(image duplocloud.GetNativeHostImageResult) (*string, error) {
//					return &image.ImageId, nil
//				}).(pulumi.StringPtrOutput)),
//				Capacity:      pulumi.String("t3a.medium"),
//				AgentPlatform: pulumi.Int(0),
//				Zone:          pulumi.Int(0),
//				UserAccount:   tenant.AccountName,
//				Metadatas: duplocloud.AwsHostMetadataArray{
//					&duplocloud.AwsHostMetadataArgs{
//						Key:   pulumi.String("OsDiskSize"),
//						Value: pulumi.String("20"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Create an EKS worker node for deployment of the Kubernetes applications
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Before creating the EKS worker node, you must first set up the infrastructure with EKS cluster enabled and a tenant. Below is the resource for creating the infrastructure.
//			infra, err := duplocloud.NewInfrastructure(ctx, "infra", &duplocloud.InfrastructureArgs{
//				InfraName:       pulumi.String("dev"),
//				Cloud:           pulumi.Int(0),
//				Region:          pulumi.String("us-east-1"),
//				EnableK8Cluster: pulumi.Bool(true),
//				AddressPrefix:   pulumi.String("10.13.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			// Use the infrastructure name as the 'plan_id' from the 'duplocloud_infrastructure' resource while creating tenant.
//			tenant, err := duplocloud.NewTenant(ctx, "tenant", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("dev"),
//				PlanId:      infra.InfraName,
//			})
//			if err != nil {
//				return err
//			}
//			// Create a data source to retrieve the Machine Image ID to be used by the host
//			image := duplocloud.GetNativeHostImageOutput(ctx, duplocloud.GetNativeHostImageOutputArgs{
//				TenantId:     tenant.TenantId,
//				IsKubernetes: pulumi.Bool(true),
//			}, nil)
//			_, err = duplocloud.NewAwsHost(ctx, "host", &duplocloud.AwsHostArgs{
//				TenantId:     tenant.TenantId,
//				FriendlyName: pulumi.String("host02"),
//				ImageId: pulumi.String(image.ApplyT(func(image duplocloud.GetNativeHostImageResult) (*string, error) {
//					return &image.ImageId, nil
//				}).(pulumi.StringPtrOutput)),
//				Capacity:      pulumi.String("t3a.small"),
//				AgentPlatform: pulumi.Int(7),
//				Zone:          pulumi.Int(0),
//				UserAccount:   tenant.AccountName,
//				KeypairType:   pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Create an EKS worker node inside the 'dev' tenant for deployment of the Kubernetes applications, with instance metadata service
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Ensure the 'dev' tenant is already created before setting up the EKS worker node.
//			tenant, err := duplocloud.LookupTenant(ctx, &duplocloud.LookupTenantArgs{
//				Name: pulumi.StringRef("dev"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			image, err := duplocloud.GetNativeHostImage(ctx, &duplocloud.GetNativeHostImageArgs{
//				TenantId:     tenant.Id,
//				IsKubernetes: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsHost(ctx, "host", &duplocloud.AwsHostArgs{
//				TenantId:      pulumi.String(tenant.Id),
//				FriendlyName:  pulumi.String("host03"),
//				ImageId:       pulumi.String(image.ImageId),
//				Capacity:      pulumi.String("t3.small"),
//				AgentPlatform: pulumi.Int(7),
//				Zone:          pulumi.Int(0),
//				UserAccount:   pulumi.String(tenant.Name),
//				KeypairType:   pulumi.Int(1),
//				Metadatas: duplocloud.AwsHostMetadataArray{
//					&duplocloud.AwsHostMetadataArgs{
//						Key:   pulumi.String("OsDiskSize"),
//						Value: pulumi.String("20"),
//					},
//					&duplocloud.AwsHostMetadataArgs{
//						Key:   pulumi.String("MetadataServiceOption"),
//						Value: pulumi.String("enabled_v2_only"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS host
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *INSTANCE_ID* is the AWS EC2 instance ID
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsHost:AwsHost myhost v2/subscriptions/*TENANT_ID*/NativeHostV2/*INSTANCE_ID*
// ```
type AwsHost struct {
	pulumi.CustomResourceState

	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform pulumi.IntPtrOutput `pulumi:"agentPlatform"`
	// Whether or not to allocate a public IP.
	AllocatedPublicIp pulumi.BoolPtrOutput `pulumi:"allocatedPublicIp"`
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData pulumi.StringOutput `pulumi:"base64UserData"`
	// The AWS EC2 instance type.
	Capacity pulumi.StringOutput `pulumi:"capacity"`
	// The numeric ID of the cloud provider to launch the host in.
	Cloud pulumi.IntPtrOutput `pulumi:"cloud"`
	// Specify the labels to attach to the nodes.
	CustomNodeLabels pulumi.StringMapOutput `pulumi:"customNodeLabels"`
	// The short name of the host.
	FriendlyName pulumi.StringOutput `pulumi:"friendlyName"`
	// The name of the IAM role associated with this host.
	IdentityRole pulumi.StringOutput `pulumi:"identityRole"`
	// The AMI ID to use.
	ImageId               pulumi.StringOutput `pulumi:"imageId"`
	InitialBase64UserData pulumi.StringOutput `pulumi:"initialBase64UserData"`
	// The AWS EC2 instance ID of the host.
	InstanceId     pulumi.StringOutput  `pulumi:"instanceId"`
	IsEbsOptimized pulumi.BoolPtrOutput `pulumi:"isEbsOptimized"`
	IsMinion       pulumi.BoolPtrOutput `pulumi:"isMinion"`
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType pulumi.IntOutput `pulumi:"keypairType"`
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas AwsHostMetadataArrayOutput `pulumi:"metadatas"`
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags AwsHostMinionTagArrayOutput `pulumi:"minionTags"`
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces AwsHostNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData pulumi.BoolPtrOutput `pulumi:"prependUserData"`
	// The primary private IP address assigned to the host.
	PrivateIpAddress pulumi.StringOutput `pulumi:"privateIpAddress"`
	// The primary public IP address assigned to the host.
	PublicIpAddress pulumi.StringOutput `pulumi:"publicIpAddress"`
	// The current status of the host.
	Status pulumi.StringOutput   `pulumi:"status"`
	Tags   AwsHostTagArrayOutput `pulumi:"tags"`
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints AwsHostTaintArrayOutput `pulumi:"taints"`
	// The GUID of the tenant that the host will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The name of the tenant that the host will be created in.
	UserAccount pulumi.StringOutput `pulumi:"userAccount"`
	// Block to specify additional or secondary volume beyond the root device
	Volumes AwsHostVolumeArrayOutput `pulumi:"volumes"`
	// Whether or not to wait until Duplo can connect to the host, after creation.
	WaitUntilConnected pulumi.BoolPtrOutput `pulumi:"waitUntilConnected"`
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	Zone pulumi.IntPtrOutput `pulumi:"zone"`
}

// NewAwsHost registers a new resource with the given unique name, arguments, and options.
func NewAwsHost(ctx *pulumi.Context,
	name string, args *AwsHostArgs, opts ...pulumi.ResourceOption) (*AwsHost, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Capacity == nil {
		return nil, errors.New("invalid value for required argument 'Capacity'")
	}
	if args.FriendlyName == nil {
		return nil, errors.New("invalid value for required argument 'FriendlyName'")
	}
	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsHost
	err := ctx.RegisterResource("duplocloud:index/awsHost:AwsHost", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsHost gets an existing AwsHost resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsHost(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsHostState, opts ...pulumi.ResourceOption) (*AwsHost, error) {
	var resource AwsHost
	err := ctx.ReadResource("duplocloud:index/awsHost:AwsHost", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsHost resources.
type awsHostState struct {
	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform *int `pulumi:"agentPlatform"`
	// Whether or not to allocate a public IP.
	AllocatedPublicIp *bool `pulumi:"allocatedPublicIp"`
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData *string `pulumi:"base64UserData"`
	// The AWS EC2 instance type.
	Capacity *string `pulumi:"capacity"`
	// The numeric ID of the cloud provider to launch the host in.
	Cloud *int `pulumi:"cloud"`
	// Specify the labels to attach to the nodes.
	CustomNodeLabels map[string]string `pulumi:"customNodeLabels"`
	// The short name of the host.
	FriendlyName *string `pulumi:"friendlyName"`
	// The name of the IAM role associated with this host.
	IdentityRole *string `pulumi:"identityRole"`
	// The AMI ID to use.
	ImageId               *string `pulumi:"imageId"`
	InitialBase64UserData *string `pulumi:"initialBase64UserData"`
	// The AWS EC2 instance ID of the host.
	InstanceId     *string `pulumi:"instanceId"`
	IsEbsOptimized *bool   `pulumi:"isEbsOptimized"`
	IsMinion       *bool   `pulumi:"isMinion"`
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType *int `pulumi:"keypairType"`
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas []AwsHostMetadata `pulumi:"metadatas"`
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags []AwsHostMinionTag `pulumi:"minionTags"`
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces []AwsHostNetworkInterface `pulumi:"networkInterfaces"`
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData *bool `pulumi:"prependUserData"`
	// The primary private IP address assigned to the host.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The primary public IP address assigned to the host.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
	// The current status of the host.
	Status *string      `pulumi:"status"`
	Tags   []AwsHostTag `pulumi:"tags"`
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints []AwsHostTaint `pulumi:"taints"`
	// The GUID of the tenant that the host will be created in.
	TenantId *string `pulumi:"tenantId"`
	// The name of the tenant that the host will be created in.
	UserAccount *string `pulumi:"userAccount"`
	// Block to specify additional or secondary volume beyond the root device
	Volumes []AwsHostVolume `pulumi:"volumes"`
	// Whether or not to wait until Duplo can connect to the host, after creation.
	WaitUntilConnected *bool `pulumi:"waitUntilConnected"`
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	Zone *int `pulumi:"zone"`
}

type AwsHostState struct {
	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform pulumi.IntPtrInput
	// Whether or not to allocate a public IP.
	AllocatedPublicIp pulumi.BoolPtrInput
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData pulumi.StringPtrInput
	// The AWS EC2 instance type.
	Capacity pulumi.StringPtrInput
	// The numeric ID of the cloud provider to launch the host in.
	Cloud pulumi.IntPtrInput
	// Specify the labels to attach to the nodes.
	CustomNodeLabels pulumi.StringMapInput
	// The short name of the host.
	FriendlyName pulumi.StringPtrInput
	// The name of the IAM role associated with this host.
	IdentityRole pulumi.StringPtrInput
	// The AMI ID to use.
	ImageId               pulumi.StringPtrInput
	InitialBase64UserData pulumi.StringPtrInput
	// The AWS EC2 instance ID of the host.
	InstanceId     pulumi.StringPtrInput
	IsEbsOptimized pulumi.BoolPtrInput
	IsMinion       pulumi.BoolPtrInput
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType pulumi.IntPtrInput
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas AwsHostMetadataArrayInput
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags AwsHostMinionTagArrayInput
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces AwsHostNetworkInterfaceArrayInput
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData pulumi.BoolPtrInput
	// The primary private IP address assigned to the host.
	PrivateIpAddress pulumi.StringPtrInput
	// The primary public IP address assigned to the host.
	PublicIpAddress pulumi.StringPtrInput
	// The current status of the host.
	Status pulumi.StringPtrInput
	Tags   AwsHostTagArrayInput
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints AwsHostTaintArrayInput
	// The GUID of the tenant that the host will be created in.
	TenantId pulumi.StringPtrInput
	// The name of the tenant that the host will be created in.
	UserAccount pulumi.StringPtrInput
	// Block to specify additional or secondary volume beyond the root device
	Volumes AwsHostVolumeArrayInput
	// Whether or not to wait until Duplo can connect to the host, after creation.
	WaitUntilConnected pulumi.BoolPtrInput
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	Zone pulumi.IntPtrInput
}

func (AwsHostState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsHostState)(nil)).Elem()
}

type awsHostArgs struct {
	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform *int `pulumi:"agentPlatform"`
	// Whether or not to allocate a public IP.
	AllocatedPublicIp *bool `pulumi:"allocatedPublicIp"`
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData *string `pulumi:"base64UserData"`
	// The AWS EC2 instance type.
	Capacity string `pulumi:"capacity"`
	// The numeric ID of the cloud provider to launch the host in.
	Cloud *int `pulumi:"cloud"`
	// Specify the labels to attach to the nodes.
	CustomNodeLabels map[string]string `pulumi:"customNodeLabels"`
	// The short name of the host.
	FriendlyName string `pulumi:"friendlyName"`
	// The AMI ID to use.
	ImageId        string `pulumi:"imageId"`
	IsEbsOptimized *bool  `pulumi:"isEbsOptimized"`
	IsMinion       *bool  `pulumi:"isMinion"`
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType *int `pulumi:"keypairType"`
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas []AwsHostMetadata `pulumi:"metadatas"`
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags []AwsHostMinionTag `pulumi:"minionTags"`
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces []AwsHostNetworkInterface `pulumi:"networkInterfaces"`
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData *bool        `pulumi:"prependUserData"`
	Tags            []AwsHostTag `pulumi:"tags"`
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints []AwsHostTaint `pulumi:"taints"`
	// The GUID of the tenant that the host will be created in.
	TenantId string `pulumi:"tenantId"`
	// The name of the tenant that the host will be created in.
	UserAccount *string `pulumi:"userAccount"`
	// Block to specify additional or secondary volume beyond the root device
	Volumes []AwsHostVolume `pulumi:"volumes"`
	// Whether or not to wait until Duplo can connect to the host, after creation.
	WaitUntilConnected *bool `pulumi:"waitUntilConnected"`
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	Zone *int `pulumi:"zone"`
}

// The set of arguments for constructing a AwsHost resource.
type AwsHostArgs struct {
	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform pulumi.IntPtrInput
	// Whether or not to allocate a public IP.
	AllocatedPublicIp pulumi.BoolPtrInput
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData pulumi.StringPtrInput
	// The AWS EC2 instance type.
	Capacity pulumi.StringInput
	// The numeric ID of the cloud provider to launch the host in.
	Cloud pulumi.IntPtrInput
	// Specify the labels to attach to the nodes.
	CustomNodeLabels pulumi.StringMapInput
	// The short name of the host.
	FriendlyName pulumi.StringInput
	// The AMI ID to use.
	ImageId        pulumi.StringInput
	IsEbsOptimized pulumi.BoolPtrInput
	IsMinion       pulumi.BoolPtrInput
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType pulumi.IntPtrInput
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas AwsHostMetadataArrayInput
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags AwsHostMinionTagArrayInput
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces AwsHostNetworkInterfaceArrayInput
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData pulumi.BoolPtrInput
	Tags            AwsHostTagArrayInput
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints AwsHostTaintArrayInput
	// The GUID of the tenant that the host will be created in.
	TenantId pulumi.StringInput
	// The name of the tenant that the host will be created in.
	UserAccount pulumi.StringPtrInput
	// Block to specify additional or secondary volume beyond the root device
	Volumes AwsHostVolumeArrayInput
	// Whether or not to wait until Duplo can connect to the host, after creation.
	WaitUntilConnected pulumi.BoolPtrInput
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	Zone pulumi.IntPtrInput
}

func (AwsHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsHostArgs)(nil)).Elem()
}

type AwsHostInput interface {
	pulumi.Input

	ToAwsHostOutput() AwsHostOutput
	ToAwsHostOutputWithContext(ctx context.Context) AwsHostOutput
}

func (*AwsHost) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsHost)(nil)).Elem()
}

func (i *AwsHost) ToAwsHostOutput() AwsHostOutput {
	return i.ToAwsHostOutputWithContext(context.Background())
}

func (i *AwsHost) ToAwsHostOutputWithContext(ctx context.Context) AwsHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsHostOutput)
}

// AwsHostArrayInput is an input type that accepts AwsHostArray and AwsHostArrayOutput values.
// You can construct a concrete instance of `AwsHostArrayInput` via:
//
//	AwsHostArray{ AwsHostArgs{...} }
type AwsHostArrayInput interface {
	pulumi.Input

	ToAwsHostArrayOutput() AwsHostArrayOutput
	ToAwsHostArrayOutputWithContext(context.Context) AwsHostArrayOutput
}

type AwsHostArray []AwsHostInput

func (AwsHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsHost)(nil)).Elem()
}

func (i AwsHostArray) ToAwsHostArrayOutput() AwsHostArrayOutput {
	return i.ToAwsHostArrayOutputWithContext(context.Background())
}

func (i AwsHostArray) ToAwsHostArrayOutputWithContext(ctx context.Context) AwsHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsHostArrayOutput)
}

// AwsHostMapInput is an input type that accepts AwsHostMap and AwsHostMapOutput values.
// You can construct a concrete instance of `AwsHostMapInput` via:
//
//	AwsHostMap{ "key": AwsHostArgs{...} }
type AwsHostMapInput interface {
	pulumi.Input

	ToAwsHostMapOutput() AwsHostMapOutput
	ToAwsHostMapOutputWithContext(context.Context) AwsHostMapOutput
}

type AwsHostMap map[string]AwsHostInput

func (AwsHostMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsHost)(nil)).Elem()
}

func (i AwsHostMap) ToAwsHostMapOutput() AwsHostMapOutput {
	return i.ToAwsHostMapOutputWithContext(context.Background())
}

func (i AwsHostMap) ToAwsHostMapOutputWithContext(ctx context.Context) AwsHostMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsHostMapOutput)
}

type AwsHostOutput struct{ *pulumi.OutputState }

func (AwsHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsHost)(nil)).Elem()
}

func (o AwsHostOutput) ToAwsHostOutput() AwsHostOutput {
	return o
}

func (o AwsHostOutput) ToAwsHostOutputWithContext(ctx context.Context) AwsHostOutput {
	return o
}

// The numeric ID of the container agent pool that this host is added to.
func (o AwsHostOutput) AgentPlatform() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.IntPtrOutput { return v.AgentPlatform }).(pulumi.IntPtrOutput)
}

// Whether or not to allocate a public IP.
func (o AwsHostOutput) AllocatedPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.BoolPtrOutput { return v.AllocatedPublicIp }).(pulumi.BoolPtrOutput)
}

// Base64 encoded EC2 user data to associated with the host.
func (o AwsHostOutput) Base64UserData() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.Base64UserData }).(pulumi.StringOutput)
}

// The AWS EC2 instance type.
func (o AwsHostOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.Capacity }).(pulumi.StringOutput)
}

// The numeric ID of the cloud provider to launch the host in.
func (o AwsHostOutput) Cloud() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.IntPtrOutput { return v.Cloud }).(pulumi.IntPtrOutput)
}

// Specify the labels to attach to the nodes.
func (o AwsHostOutput) CustomNodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringMapOutput { return v.CustomNodeLabels }).(pulumi.StringMapOutput)
}

// The short name of the host.
func (o AwsHostOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.FriendlyName }).(pulumi.StringOutput)
}

// The name of the IAM role associated with this host.
func (o AwsHostOutput) IdentityRole() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.IdentityRole }).(pulumi.StringOutput)
}

// The AMI ID to use.
func (o AwsHostOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

func (o AwsHostOutput) InitialBase64UserData() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.InitialBase64UserData }).(pulumi.StringOutput)
}

// The AWS EC2 instance ID of the host.
func (o AwsHostOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o AwsHostOutput) IsEbsOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.BoolPtrOutput { return v.IsEbsOptimized }).(pulumi.BoolPtrOutput)
}

func (o AwsHostOutput) IsMinion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.BoolPtrOutput { return v.IsMinion }).(pulumi.BoolPtrOutput)
}

// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
// - some operating systems no longer support it)
func (o AwsHostOutput) KeypairType() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.IntOutput { return v.KeypairType }).(pulumi.IntOutput)
}

// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
// Key and its size as value, size value should be atleast 10*
func (o AwsHostOutput) Metadatas() AwsHostMetadataArrayOutput {
	return o.ApplyT(func(v *AwsHost) AwsHostMetadataArrayOutput { return v.Metadatas }).(AwsHostMetadataArrayOutput)
}

// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
func (o AwsHostOutput) MinionTags() AwsHostMinionTagArrayOutput {
	return o.ApplyT(func(v *AwsHost) AwsHostMinionTagArrayOutput { return v.MinionTags }).(AwsHostMinionTagArrayOutput)
}

// An optional list of custom network interface configurations to use when creating the host.
func (o AwsHostOutput) NetworkInterfaces() AwsHostNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *AwsHost) AwsHostNetworkInterfaceArrayOutput { return v.NetworkInterfaces }).(AwsHostNetworkInterfaceArrayOutput)
}

// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
func (o AwsHostOutput) PrependUserData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.BoolPtrOutput { return v.PrependUserData }).(pulumi.BoolPtrOutput)
}

// The primary private IP address assigned to the host.
func (o AwsHostOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The primary public IP address assigned to the host.
func (o AwsHostOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The current status of the host.
func (o AwsHostOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o AwsHostOutput) Tags() AwsHostTagArrayOutput {
	return o.ApplyT(func(v *AwsHost) AwsHostTagArrayOutput { return v.Tags }).(AwsHostTagArrayOutput)
}

// Specify taints to attach to the nodes, to repel other nodes with different toleration
func (o AwsHostOutput) Taints() AwsHostTaintArrayOutput {
	return o.ApplyT(func(v *AwsHost) AwsHostTaintArrayOutput { return v.Taints }).(AwsHostTaintArrayOutput)
}

// The GUID of the tenant that the host will be created in.
func (o AwsHostOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The name of the tenant that the host will be created in.
func (o AwsHostOutput) UserAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.StringOutput { return v.UserAccount }).(pulumi.StringOutput)
}

// Block to specify additional or secondary volume beyond the root device
func (o AwsHostOutput) Volumes() AwsHostVolumeArrayOutput {
	return o.ApplyT(func(v *AwsHost) AwsHostVolumeArrayOutput { return v.Volumes }).(AwsHostVolumeArrayOutput)
}

// Whether or not to wait until Duplo can connect to the host, after creation.
func (o AwsHostOutput) WaitUntilConnected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.BoolPtrOutput { return v.WaitUntilConnected }).(pulumi.BoolPtrOutput)
}

// The availability zone to launch the host in, expressed as a number and starting at 0.
func (o AwsHostOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsHost) pulumi.IntPtrOutput { return v.Zone }).(pulumi.IntPtrOutput)
}

type AwsHostArrayOutput struct{ *pulumi.OutputState }

func (AwsHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsHost)(nil)).Elem()
}

func (o AwsHostArrayOutput) ToAwsHostArrayOutput() AwsHostArrayOutput {
	return o
}

func (o AwsHostArrayOutput) ToAwsHostArrayOutputWithContext(ctx context.Context) AwsHostArrayOutput {
	return o
}

func (o AwsHostArrayOutput) Index(i pulumi.IntInput) AwsHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsHost {
		return vs[0].([]*AwsHost)[vs[1].(int)]
	}).(AwsHostOutput)
}

type AwsHostMapOutput struct{ *pulumi.OutputState }

func (AwsHostMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsHost)(nil)).Elem()
}

func (o AwsHostMapOutput) ToAwsHostMapOutput() AwsHostMapOutput {
	return o
}

func (o AwsHostMapOutput) ToAwsHostMapOutputWithContext(ctx context.Context) AwsHostMapOutput {
	return o
}

func (o AwsHostMapOutput) MapIndex(k pulumi.StringInput) AwsHostOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsHost {
		return vs[0].(map[string]*AwsHost)[vs[1].(string)]
	}).(AwsHostOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsHostInput)(nil)).Elem(), &AwsHost{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsHostArrayInput)(nil)).Elem(), AwsHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsHostMapInput)(nil)).Elem(), AwsHostMap{})
	pulumi.RegisterOutputType(AwsHostOutput{})
	pulumi.RegisterOutputType(AwsHostArrayOutput{})
	pulumi.RegisterOutputType(AwsHostMapOutput{})
}
