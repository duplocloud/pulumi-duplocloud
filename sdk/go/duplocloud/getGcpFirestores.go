// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			app, err := duplocloud.GetGcpFirestores(ctx, &duplocloud.GetGcpFirestoresArgs{
//				TenantId: "tenant_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("out", []duplocloud.GetGcpFirestoresFirestoreMap{
//				"firestores": app.Firestores,
//			})
//			return nil
//		})
//	}
//
// ```
func GetGcpFirestores(ctx *pulumi.Context, args *GetGcpFirestoresArgs, opts ...pulumi.InvokeOption) (*GetGcpFirestoresResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGcpFirestoresResult
	err := ctx.Invoke("duplocloud:index/getGcpFirestores:getGcpFirestores", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGcpFirestores.
type GetGcpFirestoresArgs struct {
	// The GUID of the tenant that the firestore will be created in.
	TenantId string `pulumi:"tenantId"`
}

// A collection of values returned by getGcpFirestores.
type GetGcpFirestoresResult struct {
	Firestores []GetGcpFirestoresFirestore `pulumi:"firestores"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The GUID of the tenant that the firestore will be created in.
	TenantId string `pulumi:"tenantId"`
}

func GetGcpFirestoresOutput(ctx *pulumi.Context, args GetGcpFirestoresOutputArgs, opts ...pulumi.InvokeOption) GetGcpFirestoresResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetGcpFirestoresResultOutput, error) {
			args := v.(GetGcpFirestoresArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getGcpFirestores:getGcpFirestores", args, GetGcpFirestoresResultOutput{}, options).(GetGcpFirestoresResultOutput), nil
		}).(GetGcpFirestoresResultOutput)
}

// A collection of arguments for invoking getGcpFirestores.
type GetGcpFirestoresOutputArgs struct {
	// The GUID of the tenant that the firestore will be created in.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetGcpFirestoresOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpFirestoresArgs)(nil)).Elem()
}

// A collection of values returned by getGcpFirestores.
type GetGcpFirestoresResultOutput struct{ *pulumi.OutputState }

func (GetGcpFirestoresResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpFirestoresResult)(nil)).Elem()
}

func (o GetGcpFirestoresResultOutput) ToGetGcpFirestoresResultOutput() GetGcpFirestoresResultOutput {
	return o
}

func (o GetGcpFirestoresResultOutput) ToGetGcpFirestoresResultOutputWithContext(ctx context.Context) GetGcpFirestoresResultOutput {
	return o
}

func (o GetGcpFirestoresResultOutput) Firestores() GetGcpFirestoresFirestoreArrayOutput {
	return o.ApplyT(func(v GetGcpFirestoresResult) []GetGcpFirestoresFirestore { return v.Firestores }).(GetGcpFirestoresFirestoreArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGcpFirestoresResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpFirestoresResult) string { return v.Id }).(pulumi.StringOutput)
}

// The GUID of the tenant that the firestore will be created in.
func (o GetGcpFirestoresResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpFirestoresResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGcpFirestoresResultOutput{})
}
