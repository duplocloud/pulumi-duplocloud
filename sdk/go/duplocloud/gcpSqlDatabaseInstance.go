// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `GcpSqlDatabaseInstance` manages a GCP SQL Database Instance in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewGcpSqlDatabaseInstance(ctx, "sql_instance", &duplocloud.GcpSqlDatabaseInstanceArgs{
//				TenantId:        myapp.TenantId,
//				Name:            pulumi.String("sqlinstances01"),
//				DatabaseVersion: pulumi.String("MYSQL_8_0"),
//				Tier:            pulumi.String("db-n1-standard-1"),
//				DiskSize:        pulumi.Int(17),
//				Labels: pulumi.StringMap{
//					"managed-by": pulumi.String("duplocloud"),
//					"created-by": pulumi.String("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Backup configuration example
//			_, err = duplocloud.NewGcpSqlDatabaseInstance(ctx, "sql", &duplocloud.GcpSqlDatabaseInstanceArgs{
//				TenantId:        myapp.TenantId,
//				Name:            pulumi.String("mysqlbckp"),
//				DatabaseVersion: pulumi.String("POSTGRES_14"),
//				DiskSize:        pulumi.Int(10),
//				Tier:            pulumi.String("db-f1-micro"),
//				RootPassword:    pulumi.String("qwerty"),
//				NeedBackup:      pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing GCP SQL database instance
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SHORT_NAME* is the short name of the GCP SQL database instance
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/gcpSqlDatabaseInstance:GcpSqlDatabaseInstance sql_instance *TENANT_ID*/*SHORT_NAME*
// ```
type GcpSqlDatabaseInstance struct {
	pulumi.CustomResourceState

	// Connection name of the database.
	ConnectionName pulumi.StringOutput `pulumi:"connectionName"`
	// The MySQL, PostgreSQL or SQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`,`POSTGRES_16`,`POSTGRES_17`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`,`SQLSERVER_2022_WEB`,`SQLSERVER_2022_EXPRESS`,`SQLSERVER_2022_ENTERPRISE`,`SQLSERVER_2022_STANDARD`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions) includes an up-to-date reference of supported versions.
	DatabaseVersion pulumi.StringOutput `pulumi:"databaseVersion"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
	DiskSize pulumi.IntOutput `pulumi:"diskSize"`
	// The full name of the sql database.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// List of IP addresses of the database.
	IpAddresses pulumi.StringArrayOutput `pulumi:"ipAddresses"`
	// Map of string keys and values that can be used to organize and categorize this resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringOutput `pulumi:"name"`
	// Flag to enable backup process on delete of database Defaults to `true`.
	NeedBackup pulumi.BoolPtrOutput `pulumi:"needBackup"`
	// Provide root password for specific database versions.
	RootPassword pulumi.StringOutput `pulumi:"rootPassword"`
	// The SelfLink of the sql database.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The GUID of the tenant that the sql database will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier pulumi.StringOutput `pulumi:"tier"`
	// Whether or not to wait until sql database instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrOutput `pulumi:"waitUntilReady"`
}

// NewGcpSqlDatabaseInstance registers a new resource with the given unique name, arguments, and options.
func NewGcpSqlDatabaseInstance(ctx *pulumi.Context,
	name string, args *GcpSqlDatabaseInstanceArgs, opts ...pulumi.ResourceOption) (*GcpSqlDatabaseInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseVersion == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseVersion'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	if args.Tier == nil {
		return nil, errors.New("invalid value for required argument 'Tier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GcpSqlDatabaseInstance
	err := ctx.RegisterResource("duplocloud:index/gcpSqlDatabaseInstance:GcpSqlDatabaseInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcpSqlDatabaseInstance gets an existing GcpSqlDatabaseInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcpSqlDatabaseInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcpSqlDatabaseInstanceState, opts ...pulumi.ResourceOption) (*GcpSqlDatabaseInstance, error) {
	var resource GcpSqlDatabaseInstance
	err := ctx.ReadResource("duplocloud:index/gcpSqlDatabaseInstance:GcpSqlDatabaseInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcpSqlDatabaseInstance resources.
type gcpSqlDatabaseInstanceState struct {
	// Connection name of the database.
	ConnectionName *string `pulumi:"connectionName"`
	// The MySQL, PostgreSQL or SQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`,`POSTGRES_16`,`POSTGRES_17`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`,`SQLSERVER_2022_WEB`,`SQLSERVER_2022_EXPRESS`,`SQLSERVER_2022_ENTERPRISE`,`SQLSERVER_2022_STANDARD`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions) includes an up-to-date reference of supported versions.
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
	DiskSize *int `pulumi:"diskSize"`
	// The full name of the sql database.
	Fullname *string `pulumi:"fullname"`
	// List of IP addresses of the database.
	IpAddresses []string `pulumi:"ipAddresses"`
	// Map of string keys and values that can be used to organize and categorize this resource.
	Labels map[string]string `pulumi:"labels"`
	// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name *string `pulumi:"name"`
	// Flag to enable backup process on delete of database Defaults to `true`.
	NeedBackup *bool `pulumi:"needBackup"`
	// Provide root password for specific database versions.
	RootPassword *string `pulumi:"rootPassword"`
	// The SelfLink of the sql database.
	SelfLink *string `pulumi:"selfLink"`
	// The GUID of the tenant that the sql database will be created in.
	TenantId *string `pulumi:"tenantId"`
	// The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier *string `pulumi:"tier"`
	// Whether or not to wait until sql database instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

type GcpSqlDatabaseInstanceState struct {
	// Connection name of the database.
	ConnectionName pulumi.StringPtrInput
	// The MySQL, PostgreSQL or SQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`,`POSTGRES_16`,`POSTGRES_17`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`,`SQLSERVER_2022_WEB`,`SQLSERVER_2022_EXPRESS`,`SQLSERVER_2022_ENTERPRISE`,`SQLSERVER_2022_STANDARD`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions) includes an up-to-date reference of supported versions.
	DatabaseVersion pulumi.StringPtrInput
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
	DiskSize pulumi.IntPtrInput
	// The full name of the sql database.
	Fullname pulumi.StringPtrInput
	// List of IP addresses of the database.
	IpAddresses pulumi.StringArrayInput
	// Map of string keys and values that can be used to organize and categorize this resource.
	Labels pulumi.StringMapInput
	// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringPtrInput
	// Flag to enable backup process on delete of database Defaults to `true`.
	NeedBackup pulumi.BoolPtrInput
	// Provide root password for specific database versions.
	RootPassword pulumi.StringPtrInput
	// The SelfLink of the sql database.
	SelfLink pulumi.StringPtrInput
	// The GUID of the tenant that the sql database will be created in.
	TenantId pulumi.StringPtrInput
	// The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier pulumi.StringPtrInput
	// Whether or not to wait until sql database instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (GcpSqlDatabaseInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpSqlDatabaseInstanceState)(nil)).Elem()
}

type gcpSqlDatabaseInstanceArgs struct {
	// The MySQL, PostgreSQL or SQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`,`POSTGRES_16`,`POSTGRES_17`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`,`SQLSERVER_2022_WEB`,`SQLSERVER_2022_EXPRESS`,`SQLSERVER_2022_ENTERPRISE`,`SQLSERVER_2022_STANDARD`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions) includes an up-to-date reference of supported versions.
	DatabaseVersion string `pulumi:"databaseVersion"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
	DiskSize *int `pulumi:"diskSize"`
	// Map of string keys and values that can be used to organize and categorize this resource.
	Labels map[string]string `pulumi:"labels"`
	// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name *string `pulumi:"name"`
	// Flag to enable backup process on delete of database Defaults to `true`.
	NeedBackup *bool `pulumi:"needBackup"`
	// Provide root password for specific database versions.
	RootPassword *string `pulumi:"rootPassword"`
	// The GUID of the tenant that the sql database will be created in.
	TenantId string `pulumi:"tenantId"`
	// The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier string `pulumi:"tier"`
	// Whether or not to wait until sql database instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

// The set of arguments for constructing a GcpSqlDatabaseInstance resource.
type GcpSqlDatabaseInstanceArgs struct {
	// The MySQL, PostgreSQL or SQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`,`POSTGRES_16`,`POSTGRES_17`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`,`SQLSERVER_2022_WEB`,`SQLSERVER_2022_EXPRESS`,`SQLSERVER_2022_ENTERPRISE`,`SQLSERVER_2022_STANDARD`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions) includes an up-to-date reference of supported versions.
	DatabaseVersion pulumi.StringInput
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
	DiskSize pulumi.IntPtrInput
	// Map of string keys and values that can be used to organize and categorize this resource.
	Labels pulumi.StringMapInput
	// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringPtrInput
	// Flag to enable backup process on delete of database Defaults to `true`.
	NeedBackup pulumi.BoolPtrInput
	// Provide root password for specific database versions.
	RootPassword pulumi.StringPtrInput
	// The GUID of the tenant that the sql database will be created in.
	TenantId pulumi.StringInput
	// The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier pulumi.StringInput
	// Whether or not to wait until sql database instance to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (GcpSqlDatabaseInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpSqlDatabaseInstanceArgs)(nil)).Elem()
}

type GcpSqlDatabaseInstanceInput interface {
	pulumi.Input

	ToGcpSqlDatabaseInstanceOutput() GcpSqlDatabaseInstanceOutput
	ToGcpSqlDatabaseInstanceOutputWithContext(ctx context.Context) GcpSqlDatabaseInstanceOutput
}

func (*GcpSqlDatabaseInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSqlDatabaseInstance)(nil)).Elem()
}

func (i *GcpSqlDatabaseInstance) ToGcpSqlDatabaseInstanceOutput() GcpSqlDatabaseInstanceOutput {
	return i.ToGcpSqlDatabaseInstanceOutputWithContext(context.Background())
}

func (i *GcpSqlDatabaseInstance) ToGcpSqlDatabaseInstanceOutputWithContext(ctx context.Context) GcpSqlDatabaseInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSqlDatabaseInstanceOutput)
}

// GcpSqlDatabaseInstanceArrayInput is an input type that accepts GcpSqlDatabaseInstanceArray and GcpSqlDatabaseInstanceArrayOutput values.
// You can construct a concrete instance of `GcpSqlDatabaseInstanceArrayInput` via:
//
//	GcpSqlDatabaseInstanceArray{ GcpSqlDatabaseInstanceArgs{...} }
type GcpSqlDatabaseInstanceArrayInput interface {
	pulumi.Input

	ToGcpSqlDatabaseInstanceArrayOutput() GcpSqlDatabaseInstanceArrayOutput
	ToGcpSqlDatabaseInstanceArrayOutputWithContext(context.Context) GcpSqlDatabaseInstanceArrayOutput
}

type GcpSqlDatabaseInstanceArray []GcpSqlDatabaseInstanceInput

func (GcpSqlDatabaseInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpSqlDatabaseInstance)(nil)).Elem()
}

func (i GcpSqlDatabaseInstanceArray) ToGcpSqlDatabaseInstanceArrayOutput() GcpSqlDatabaseInstanceArrayOutput {
	return i.ToGcpSqlDatabaseInstanceArrayOutputWithContext(context.Background())
}

func (i GcpSqlDatabaseInstanceArray) ToGcpSqlDatabaseInstanceArrayOutputWithContext(ctx context.Context) GcpSqlDatabaseInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSqlDatabaseInstanceArrayOutput)
}

// GcpSqlDatabaseInstanceMapInput is an input type that accepts GcpSqlDatabaseInstanceMap and GcpSqlDatabaseInstanceMapOutput values.
// You can construct a concrete instance of `GcpSqlDatabaseInstanceMapInput` via:
//
//	GcpSqlDatabaseInstanceMap{ "key": GcpSqlDatabaseInstanceArgs{...} }
type GcpSqlDatabaseInstanceMapInput interface {
	pulumi.Input

	ToGcpSqlDatabaseInstanceMapOutput() GcpSqlDatabaseInstanceMapOutput
	ToGcpSqlDatabaseInstanceMapOutputWithContext(context.Context) GcpSqlDatabaseInstanceMapOutput
}

type GcpSqlDatabaseInstanceMap map[string]GcpSqlDatabaseInstanceInput

func (GcpSqlDatabaseInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpSqlDatabaseInstance)(nil)).Elem()
}

func (i GcpSqlDatabaseInstanceMap) ToGcpSqlDatabaseInstanceMapOutput() GcpSqlDatabaseInstanceMapOutput {
	return i.ToGcpSqlDatabaseInstanceMapOutputWithContext(context.Background())
}

func (i GcpSqlDatabaseInstanceMap) ToGcpSqlDatabaseInstanceMapOutputWithContext(ctx context.Context) GcpSqlDatabaseInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSqlDatabaseInstanceMapOutput)
}

type GcpSqlDatabaseInstanceOutput struct{ *pulumi.OutputState }

func (GcpSqlDatabaseInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSqlDatabaseInstance)(nil)).Elem()
}

func (o GcpSqlDatabaseInstanceOutput) ToGcpSqlDatabaseInstanceOutput() GcpSqlDatabaseInstanceOutput {
	return o
}

func (o GcpSqlDatabaseInstanceOutput) ToGcpSqlDatabaseInstanceOutputWithContext(ctx context.Context) GcpSqlDatabaseInstanceOutput {
	return o
}

// Connection name of the database.
func (o GcpSqlDatabaseInstanceOutput) ConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringOutput { return v.ConnectionName }).(pulumi.StringOutput)
}

// The MySQL, PostgreSQL or SQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`,`POSTGRES_16`,`POSTGRES_17`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`,`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`,`SQLSERVER_2022_WEB`,`SQLSERVER_2022_EXPRESS`,`SQLSERVER_2022_ENTERPRISE`,`SQLSERVER_2022_STANDARD`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions) includes an up-to-date reference of supported versions.
func (o GcpSqlDatabaseInstanceOutput) DatabaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringOutput { return v.DatabaseVersion }).(pulumi.StringOutput)
}

// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
func (o GcpSqlDatabaseInstanceOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.IntOutput { return v.DiskSize }).(pulumi.IntOutput)
}

// The full name of the sql database.
func (o GcpSqlDatabaseInstanceOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// List of IP addresses of the database.
func (o GcpSqlDatabaseInstanceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringArrayOutput { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Map of string keys and values that can be used to organize and categorize this resource.
func (o GcpSqlDatabaseInstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
func (o GcpSqlDatabaseInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Flag to enable backup process on delete of database Defaults to `true`.
func (o GcpSqlDatabaseInstanceOutput) NeedBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.BoolPtrOutput { return v.NeedBackup }).(pulumi.BoolPtrOutput)
}

// Provide root password for specific database versions.
func (o GcpSqlDatabaseInstanceOutput) RootPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringOutput { return v.RootPassword }).(pulumi.StringOutput)
}

// The SelfLink of the sql database.
func (o GcpSqlDatabaseInstanceOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The GUID of the tenant that the sql database will be created in.
func (o GcpSqlDatabaseInstanceOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
func (o GcpSqlDatabaseInstanceOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.StringOutput { return v.Tier }).(pulumi.StringOutput)
}

// Whether or not to wait until sql database instance to be ready, after creation. Defaults to `true`.
func (o GcpSqlDatabaseInstanceOutput) WaitUntilReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GcpSqlDatabaseInstance) pulumi.BoolPtrOutput { return v.WaitUntilReady }).(pulumi.BoolPtrOutput)
}

type GcpSqlDatabaseInstanceArrayOutput struct{ *pulumi.OutputState }

func (GcpSqlDatabaseInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpSqlDatabaseInstance)(nil)).Elem()
}

func (o GcpSqlDatabaseInstanceArrayOutput) ToGcpSqlDatabaseInstanceArrayOutput() GcpSqlDatabaseInstanceArrayOutput {
	return o
}

func (o GcpSqlDatabaseInstanceArrayOutput) ToGcpSqlDatabaseInstanceArrayOutputWithContext(ctx context.Context) GcpSqlDatabaseInstanceArrayOutput {
	return o
}

func (o GcpSqlDatabaseInstanceArrayOutput) Index(i pulumi.IntInput) GcpSqlDatabaseInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GcpSqlDatabaseInstance {
		return vs[0].([]*GcpSqlDatabaseInstance)[vs[1].(int)]
	}).(GcpSqlDatabaseInstanceOutput)
}

type GcpSqlDatabaseInstanceMapOutput struct{ *pulumi.OutputState }

func (GcpSqlDatabaseInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpSqlDatabaseInstance)(nil)).Elem()
}

func (o GcpSqlDatabaseInstanceMapOutput) ToGcpSqlDatabaseInstanceMapOutput() GcpSqlDatabaseInstanceMapOutput {
	return o
}

func (o GcpSqlDatabaseInstanceMapOutput) ToGcpSqlDatabaseInstanceMapOutputWithContext(ctx context.Context) GcpSqlDatabaseInstanceMapOutput {
	return o
}

func (o GcpSqlDatabaseInstanceMapOutput) MapIndex(k pulumi.StringInput) GcpSqlDatabaseInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GcpSqlDatabaseInstance {
		return vs[0].(map[string]*GcpSqlDatabaseInstance)[vs[1].(string)]
	}).(GcpSqlDatabaseInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSqlDatabaseInstanceInput)(nil)).Elem(), &GcpSqlDatabaseInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSqlDatabaseInstanceArrayInput)(nil)).Elem(), GcpSqlDatabaseInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSqlDatabaseInstanceMapInput)(nil)).Elem(), GcpSqlDatabaseInstanceMap{})
	pulumi.RegisterOutputType(GcpSqlDatabaseInstanceOutput{})
	pulumi.RegisterOutputType(GcpSqlDatabaseInstanceArrayOutput{})
	pulumi.RegisterOutputType(GcpSqlDatabaseInstanceMapOutput{})
}
