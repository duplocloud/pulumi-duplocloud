// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `DuploServiceLbconfigs` retrieves load balancer configuration(s) for container-based service(s) in Duplo.
//
// NOTE: For Amazon ECS services, see the `getEcsServices` data source.
func LookupDuploServiceLbconfigs(ctx *pulumi.Context, args *LookupDuploServiceLbconfigsArgs, opts ...pulumi.InvokeOption) (*LookupDuploServiceLbconfigsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDuploServiceLbconfigsResult
	err := ctx.Invoke("duplocloud:index/getDuploServiceLbconfigs:getDuploServiceLbconfigs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDuploServiceLbconfigs.
type LookupDuploServiceLbconfigsArgs struct {
	// The name of the duplo service.
	Name *string `pulumi:"name"`
	// The GUID of the tenant that hosts the duplo service.
	TenantId string `pulumi:"tenantId"`
}

// A collection of values returned by getDuploServiceLbconfigs.
type LookupDuploServiceLbconfigsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the duplo service.
	Name     *string                           `pulumi:"name"`
	Services []GetDuploServiceLbconfigsService `pulumi:"services"`
	// The GUID of the tenant that hosts the duplo service.
	TenantId string `pulumi:"tenantId"`
}

func LookupDuploServiceLbconfigsOutput(ctx *pulumi.Context, args LookupDuploServiceLbconfigsOutputArgs, opts ...pulumi.InvokeOption) LookupDuploServiceLbconfigsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDuploServiceLbconfigsResultOutput, error) {
			args := v.(LookupDuploServiceLbconfigsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getDuploServiceLbconfigs:getDuploServiceLbconfigs", args, LookupDuploServiceLbconfigsResultOutput{}, options).(LookupDuploServiceLbconfigsResultOutput), nil
		}).(LookupDuploServiceLbconfigsResultOutput)
}

// A collection of arguments for invoking getDuploServiceLbconfigs.
type LookupDuploServiceLbconfigsOutputArgs struct {
	// The name of the duplo service.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The GUID of the tenant that hosts the duplo service.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (LookupDuploServiceLbconfigsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDuploServiceLbconfigsArgs)(nil)).Elem()
}

// A collection of values returned by getDuploServiceLbconfigs.
type LookupDuploServiceLbconfigsResultOutput struct{ *pulumi.OutputState }

func (LookupDuploServiceLbconfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDuploServiceLbconfigsResult)(nil)).Elem()
}

func (o LookupDuploServiceLbconfigsResultOutput) ToLookupDuploServiceLbconfigsResultOutput() LookupDuploServiceLbconfigsResultOutput {
	return o
}

func (o LookupDuploServiceLbconfigsResultOutput) ToLookupDuploServiceLbconfigsResultOutputWithContext(ctx context.Context) LookupDuploServiceLbconfigsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDuploServiceLbconfigsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDuploServiceLbconfigsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the duplo service.
func (o LookupDuploServiceLbconfigsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDuploServiceLbconfigsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupDuploServiceLbconfigsResultOutput) Services() GetDuploServiceLbconfigsServiceArrayOutput {
	return o.ApplyT(func(v LookupDuploServiceLbconfigsResult) []GetDuploServiceLbconfigsService { return v.Services }).(GetDuploServiceLbconfigsServiceArrayOutput)
}

// The GUID of the tenant that hosts the duplo service.
func (o LookupDuploServiceLbconfigsResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDuploServiceLbconfigsResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDuploServiceLbconfigsResultOutput{})
}
