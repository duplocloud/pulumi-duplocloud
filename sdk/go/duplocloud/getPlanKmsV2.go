// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `PlanKms` retrieves details of a specific kms for a given plan.
func LookupPlanKmsV2(ctx *pulumi.Context, args *LookupPlanKmsV2Args, opts ...pulumi.InvokeOption) (*LookupPlanKmsV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPlanKmsV2Result
	err := ctx.Invoke("duplocloud:index/getPlanKmsV2:getPlanKmsV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlanKmsV2.
type LookupPlanKmsV2Args struct {
	Name string `pulumi:"name"`
	// The plan ID
	PlanId string `pulumi:"planId"`
}

// A collection of values returned by getPlanKmsV2.
type LookupPlanKmsV2Result struct {
	Arn string `pulumi:"arn"`
	// The ID of this resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// The plan ID
	PlanId string `pulumi:"planId"`
}

func LookupPlanKmsV2Output(ctx *pulumi.Context, args LookupPlanKmsV2OutputArgs, opts ...pulumi.InvokeOption) LookupPlanKmsV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPlanKmsV2ResultOutput, error) {
			args := v.(LookupPlanKmsV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getPlanKmsV2:getPlanKmsV2", args, LookupPlanKmsV2ResultOutput{}, options).(LookupPlanKmsV2ResultOutput), nil
		}).(LookupPlanKmsV2ResultOutput)
}

// A collection of arguments for invoking getPlanKmsV2.
type LookupPlanKmsV2OutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	// The plan ID
	PlanId pulumi.StringInput `pulumi:"planId"`
}

func (LookupPlanKmsV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanKmsV2Args)(nil)).Elem()
}

// A collection of values returned by getPlanKmsV2.
type LookupPlanKmsV2ResultOutput struct{ *pulumi.OutputState }

func (LookupPlanKmsV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanKmsV2Result)(nil)).Elem()
}

func (o LookupPlanKmsV2ResultOutput) ToLookupPlanKmsV2ResultOutput() LookupPlanKmsV2ResultOutput {
	return o
}

func (o LookupPlanKmsV2ResultOutput) ToLookupPlanKmsV2ResultOutputWithContext(ctx context.Context) LookupPlanKmsV2ResultOutput {
	return o
}

func (o LookupPlanKmsV2ResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanKmsV2Result) string { return v.Arn }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupPlanKmsV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanKmsV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPlanKmsV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanKmsV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// The plan ID
func (o LookupPlanKmsV2ResultOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanKmsV2Result) string { return v.PlanId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlanKmsV2ResultOutput{})
}
