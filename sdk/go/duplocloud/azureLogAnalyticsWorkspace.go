// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureLogAnalyticsWorkspace` manages an Azure Log Analytics Workspace in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := duplocloud.NewAzureLogAnalyticsWorkspace(ctx, "log_analytics_workspace", &duplocloud.AzureLogAnalyticsWorkspaceArgs{
//				InfraName:         pulumi.String("demo"),
//				ResourceGroupName: pulumi.String("duploinfra-demo"),
//				Name:              pulumi.String("test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing Azure Log Analytics Workspace
//
//   - *INFRA_NAME* is the name of duplo infra.
//
//   - *NAME* is the name of the Log Analytics Workspace
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/azureLogAnalyticsWorkspace:AzureLogAnalyticsWorkspace log_analytics_workspace *INFRA_NAME*/*NAME*
// ```
type AzureLogAnalyticsWorkspace struct {
	pulumi.CustomResourceState

	AzureId pulumi.StringOutput `pulumi:"azureId"`
	// The name of the infrastructure. Infrastructure names are globally unique and less than 13 characters.
	InfraName pulumi.StringOutput `pulumi:"infraName"`
	Location  pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Log Analytics Workspace. Workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. Changing this forces a new resource to be created.
	Name                            pulumi.StringOutput `pulumi:"name"`
	PublicNetworkAccessForIngestion pulumi.StringOutput `pulumi:"publicNetworkAccessForIngestion"`
	PublicNetworkAccessForQuery     pulumi.StringOutput `pulumi:"publicNetworkAccessForQuery"`
	// The name of the resource group in which the Log Analytics workspace is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	RetentionInDays   pulumi.IntOutput    `pulumi:"retentionInDays"`
	Sku               pulumi.StringOutput `pulumi:"sku"`
	// Whether or not to wait until Log Analytics Workspace to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrOutput `pulumi:"waitUntilReady"`
}

// NewAzureLogAnalyticsWorkspace registers a new resource with the given unique name, arguments, and options.
func NewAzureLogAnalyticsWorkspace(ctx *pulumi.Context,
	name string, args *AzureLogAnalyticsWorkspaceArgs, opts ...pulumi.ResourceOption) (*AzureLogAnalyticsWorkspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InfraName == nil {
		return nil, errors.New("invalid value for required argument 'InfraName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureLogAnalyticsWorkspace
	err := ctx.RegisterResource("duplocloud:index/azureLogAnalyticsWorkspace:AzureLogAnalyticsWorkspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureLogAnalyticsWorkspace gets an existing AzureLogAnalyticsWorkspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureLogAnalyticsWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureLogAnalyticsWorkspaceState, opts ...pulumi.ResourceOption) (*AzureLogAnalyticsWorkspace, error) {
	var resource AzureLogAnalyticsWorkspace
	err := ctx.ReadResource("duplocloud:index/azureLogAnalyticsWorkspace:AzureLogAnalyticsWorkspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureLogAnalyticsWorkspace resources.
type azureLogAnalyticsWorkspaceState struct {
	AzureId *string `pulumi:"azureId"`
	// The name of the infrastructure. Infrastructure names are globally unique and less than 13 characters.
	InfraName *string `pulumi:"infraName"`
	Location  *string `pulumi:"location"`
	// Specifies the name of the Log Analytics Workspace. Workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. Changing this forces a new resource to be created.
	Name                            *string `pulumi:"name"`
	PublicNetworkAccessForIngestion *string `pulumi:"publicNetworkAccessForIngestion"`
	PublicNetworkAccessForQuery     *string `pulumi:"publicNetworkAccessForQuery"`
	// The name of the resource group in which the Log Analytics workspace is created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	RetentionInDays   *int    `pulumi:"retentionInDays"`
	Sku               *string `pulumi:"sku"`
	// Whether or not to wait until Log Analytics Workspace to be ready, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

type AzureLogAnalyticsWorkspaceState struct {
	AzureId pulumi.StringPtrInput
	// The name of the infrastructure. Infrastructure names are globally unique and less than 13 characters.
	InfraName pulumi.StringPtrInput
	Location  pulumi.StringPtrInput
	// Specifies the name of the Log Analytics Workspace. Workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. Changing this forces a new resource to be created.
	Name                            pulumi.StringPtrInput
	PublicNetworkAccessForIngestion pulumi.StringPtrInput
	PublicNetworkAccessForQuery     pulumi.StringPtrInput
	// The name of the resource group in which the Log Analytics workspace is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	RetentionInDays   pulumi.IntPtrInput
	Sku               pulumi.StringPtrInput
	// Whether or not to wait until Log Analytics Workspace to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (AzureLogAnalyticsWorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureLogAnalyticsWorkspaceState)(nil)).Elem()
}

type azureLogAnalyticsWorkspaceArgs struct {
	// The name of the infrastructure. Infrastructure names are globally unique and less than 13 characters.
	InfraName string `pulumi:"infraName"`
	// Specifies the name of the Log Analytics Workspace. Workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which the Log Analytics workspace is created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Whether or not to wait until Log Analytics Workspace to be ready, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

// The set of arguments for constructing a AzureLogAnalyticsWorkspace resource.
type AzureLogAnalyticsWorkspaceArgs struct {
	// The name of the infrastructure. Infrastructure names are globally unique and less than 13 characters.
	InfraName pulumi.StringInput
	// Specifies the name of the Log Analytics Workspace. Workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which the Log Analytics workspace is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Whether or not to wait until Log Analytics Workspace to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (AzureLogAnalyticsWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureLogAnalyticsWorkspaceArgs)(nil)).Elem()
}

type AzureLogAnalyticsWorkspaceInput interface {
	pulumi.Input

	ToAzureLogAnalyticsWorkspaceOutput() AzureLogAnalyticsWorkspaceOutput
	ToAzureLogAnalyticsWorkspaceOutputWithContext(ctx context.Context) AzureLogAnalyticsWorkspaceOutput
}

func (*AzureLogAnalyticsWorkspace) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureLogAnalyticsWorkspace)(nil)).Elem()
}

func (i *AzureLogAnalyticsWorkspace) ToAzureLogAnalyticsWorkspaceOutput() AzureLogAnalyticsWorkspaceOutput {
	return i.ToAzureLogAnalyticsWorkspaceOutputWithContext(context.Background())
}

func (i *AzureLogAnalyticsWorkspace) ToAzureLogAnalyticsWorkspaceOutputWithContext(ctx context.Context) AzureLogAnalyticsWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureLogAnalyticsWorkspaceOutput)
}

// AzureLogAnalyticsWorkspaceArrayInput is an input type that accepts AzureLogAnalyticsWorkspaceArray and AzureLogAnalyticsWorkspaceArrayOutput values.
// You can construct a concrete instance of `AzureLogAnalyticsWorkspaceArrayInput` via:
//
//	AzureLogAnalyticsWorkspaceArray{ AzureLogAnalyticsWorkspaceArgs{...} }
type AzureLogAnalyticsWorkspaceArrayInput interface {
	pulumi.Input

	ToAzureLogAnalyticsWorkspaceArrayOutput() AzureLogAnalyticsWorkspaceArrayOutput
	ToAzureLogAnalyticsWorkspaceArrayOutputWithContext(context.Context) AzureLogAnalyticsWorkspaceArrayOutput
}

type AzureLogAnalyticsWorkspaceArray []AzureLogAnalyticsWorkspaceInput

func (AzureLogAnalyticsWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureLogAnalyticsWorkspace)(nil)).Elem()
}

func (i AzureLogAnalyticsWorkspaceArray) ToAzureLogAnalyticsWorkspaceArrayOutput() AzureLogAnalyticsWorkspaceArrayOutput {
	return i.ToAzureLogAnalyticsWorkspaceArrayOutputWithContext(context.Background())
}

func (i AzureLogAnalyticsWorkspaceArray) ToAzureLogAnalyticsWorkspaceArrayOutputWithContext(ctx context.Context) AzureLogAnalyticsWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureLogAnalyticsWorkspaceArrayOutput)
}

// AzureLogAnalyticsWorkspaceMapInput is an input type that accepts AzureLogAnalyticsWorkspaceMap and AzureLogAnalyticsWorkspaceMapOutput values.
// You can construct a concrete instance of `AzureLogAnalyticsWorkspaceMapInput` via:
//
//	AzureLogAnalyticsWorkspaceMap{ "key": AzureLogAnalyticsWorkspaceArgs{...} }
type AzureLogAnalyticsWorkspaceMapInput interface {
	pulumi.Input

	ToAzureLogAnalyticsWorkspaceMapOutput() AzureLogAnalyticsWorkspaceMapOutput
	ToAzureLogAnalyticsWorkspaceMapOutputWithContext(context.Context) AzureLogAnalyticsWorkspaceMapOutput
}

type AzureLogAnalyticsWorkspaceMap map[string]AzureLogAnalyticsWorkspaceInput

func (AzureLogAnalyticsWorkspaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureLogAnalyticsWorkspace)(nil)).Elem()
}

func (i AzureLogAnalyticsWorkspaceMap) ToAzureLogAnalyticsWorkspaceMapOutput() AzureLogAnalyticsWorkspaceMapOutput {
	return i.ToAzureLogAnalyticsWorkspaceMapOutputWithContext(context.Background())
}

func (i AzureLogAnalyticsWorkspaceMap) ToAzureLogAnalyticsWorkspaceMapOutputWithContext(ctx context.Context) AzureLogAnalyticsWorkspaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureLogAnalyticsWorkspaceMapOutput)
}

type AzureLogAnalyticsWorkspaceOutput struct{ *pulumi.OutputState }

func (AzureLogAnalyticsWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureLogAnalyticsWorkspace)(nil)).Elem()
}

func (o AzureLogAnalyticsWorkspaceOutput) ToAzureLogAnalyticsWorkspaceOutput() AzureLogAnalyticsWorkspaceOutput {
	return o
}

func (o AzureLogAnalyticsWorkspaceOutput) ToAzureLogAnalyticsWorkspaceOutputWithContext(ctx context.Context) AzureLogAnalyticsWorkspaceOutput {
	return o
}

func (o AzureLogAnalyticsWorkspaceOutput) AzureId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.StringOutput { return v.AzureId }).(pulumi.StringOutput)
}

// The name of the infrastructure. Infrastructure names are globally unique and less than 13 characters.
func (o AzureLogAnalyticsWorkspaceOutput) InfraName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.StringOutput { return v.InfraName }).(pulumi.StringOutput)
}

func (o AzureLogAnalyticsWorkspaceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the Log Analytics Workspace. Workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. Changing this forces a new resource to be created.
func (o AzureLogAnalyticsWorkspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AzureLogAnalyticsWorkspaceOutput) PublicNetworkAccessForIngestion() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.StringOutput { return v.PublicNetworkAccessForIngestion }).(pulumi.StringOutput)
}

func (o AzureLogAnalyticsWorkspaceOutput) PublicNetworkAccessForQuery() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.StringOutput { return v.PublicNetworkAccessForQuery }).(pulumi.StringOutput)
}

// The name of the resource group in which the Log Analytics workspace is created. Changing this forces a new resource to be created.
func (o AzureLogAnalyticsWorkspaceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o AzureLogAnalyticsWorkspaceOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.IntOutput { return v.RetentionInDays }).(pulumi.IntOutput)
}

func (o AzureLogAnalyticsWorkspaceOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.StringOutput { return v.Sku }).(pulumi.StringOutput)
}

// Whether or not to wait until Log Analytics Workspace to be ready, after creation. Defaults to `true`.
func (o AzureLogAnalyticsWorkspaceOutput) WaitUntilReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureLogAnalyticsWorkspace) pulumi.BoolPtrOutput { return v.WaitUntilReady }).(pulumi.BoolPtrOutput)
}

type AzureLogAnalyticsWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (AzureLogAnalyticsWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureLogAnalyticsWorkspace)(nil)).Elem()
}

func (o AzureLogAnalyticsWorkspaceArrayOutput) ToAzureLogAnalyticsWorkspaceArrayOutput() AzureLogAnalyticsWorkspaceArrayOutput {
	return o
}

func (o AzureLogAnalyticsWorkspaceArrayOutput) ToAzureLogAnalyticsWorkspaceArrayOutputWithContext(ctx context.Context) AzureLogAnalyticsWorkspaceArrayOutput {
	return o
}

func (o AzureLogAnalyticsWorkspaceArrayOutput) Index(i pulumi.IntInput) AzureLogAnalyticsWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureLogAnalyticsWorkspace {
		return vs[0].([]*AzureLogAnalyticsWorkspace)[vs[1].(int)]
	}).(AzureLogAnalyticsWorkspaceOutput)
}

type AzureLogAnalyticsWorkspaceMapOutput struct{ *pulumi.OutputState }

func (AzureLogAnalyticsWorkspaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureLogAnalyticsWorkspace)(nil)).Elem()
}

func (o AzureLogAnalyticsWorkspaceMapOutput) ToAzureLogAnalyticsWorkspaceMapOutput() AzureLogAnalyticsWorkspaceMapOutput {
	return o
}

func (o AzureLogAnalyticsWorkspaceMapOutput) ToAzureLogAnalyticsWorkspaceMapOutputWithContext(ctx context.Context) AzureLogAnalyticsWorkspaceMapOutput {
	return o
}

func (o AzureLogAnalyticsWorkspaceMapOutput) MapIndex(k pulumi.StringInput) AzureLogAnalyticsWorkspaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureLogAnalyticsWorkspace {
		return vs[0].(map[string]*AzureLogAnalyticsWorkspace)[vs[1].(string)]
	}).(AzureLogAnalyticsWorkspaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureLogAnalyticsWorkspaceInput)(nil)).Elem(), &AzureLogAnalyticsWorkspace{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureLogAnalyticsWorkspaceArrayInput)(nil)).Elem(), AzureLogAnalyticsWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureLogAnalyticsWorkspaceMapInput)(nil)).Elem(), AzureLogAnalyticsWorkspaceMap{})
	pulumi.RegisterOutputType(AzureLogAnalyticsWorkspaceOutput{})
	pulumi.RegisterOutputType(AzureLogAnalyticsWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(AzureLogAnalyticsWorkspaceMapOutput{})
}
