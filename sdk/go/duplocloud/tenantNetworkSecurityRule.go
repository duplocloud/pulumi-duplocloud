// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `TenantNetworkSecurityRule` manages a single network single rule for a Duplo tenant.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			// Allow the "default" tenant to send HTTPS requests to "myapp"
//			_, err = duplocloud.NewTenantNetworkSecurityRule(ctx, "myrule", &duplocloud.TenantNetworkSecurityRuleArgs{
//				TenantId:     myapp.TenantId,
//				SourceTenant: pulumi.String("default"),
//				Protocol:     pulumi.String("tcp"),
//				FromPort:     pulumi.Int(443),
//				ToPort:       pulumi.Int(443),
//				Description:  pulumi.String("Allow the default tenant to send HTTPS traffic"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example 1: Importing a "source_tenant" rule:
//
//   - TENANT_ID is the target tenant GUID
//
//   - 0 is the rule type
//
//   - SOURCE_TENANT is the source tenant NAME
//
// ```sh
// $ pulumi import duplocloud:index/tenantNetworkSecurityRule:TenantNetworkSecurityRule myrule TENANT_ID/0/SOURCE_TENANT/PROTOCOL/FROM_PORT/TO_PORT
// ```
type TenantNetworkSecurityRule struct {
	pulumi.CustomResourceState

	// A description for this rule.
	Description pulumi.StringOutput `pulumi:"description"`
	// The start of a port range to allow traffic to. Defaults to `0`.
	FromPort pulumi.IntPtrOutput `pulumi:"fromPort"`
	// The network protocol.  Must be one of:  `tcp`, `udp`, `icmp` Defaults to `tcp`.
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// The source CIDR block to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceAddress pulumi.StringPtrOutput `pulumi:"sourceAddress"`
	// The source tenant name (*not* GUID) to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceTenant pulumi.StringPtrOutput `pulumi:"sourceTenant"`
	// The GUID of the tenant that the network security rule will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The end of a port range to allow traffic to. Defaults to `65535`.
	ToPort pulumi.IntPtrOutput `pulumi:"toPort"`
}

// NewTenantNetworkSecurityRule registers a new resource with the given unique name, arguments, and options.
func NewTenantNetworkSecurityRule(ctx *pulumi.Context,
	name string, args *TenantNetworkSecurityRuleArgs, opts ...pulumi.ResourceOption) (*TenantNetworkSecurityRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TenantNetworkSecurityRule
	err := ctx.RegisterResource("duplocloud:index/tenantNetworkSecurityRule:TenantNetworkSecurityRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTenantNetworkSecurityRule gets an existing TenantNetworkSecurityRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTenantNetworkSecurityRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TenantNetworkSecurityRuleState, opts ...pulumi.ResourceOption) (*TenantNetworkSecurityRule, error) {
	var resource TenantNetworkSecurityRule
	err := ctx.ReadResource("duplocloud:index/tenantNetworkSecurityRule:TenantNetworkSecurityRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TenantNetworkSecurityRule resources.
type tenantNetworkSecurityRuleState struct {
	// A description for this rule.
	Description *string `pulumi:"description"`
	// The start of a port range to allow traffic to. Defaults to `0`.
	FromPort *int `pulumi:"fromPort"`
	// The network protocol.  Must be one of:  `tcp`, `udp`, `icmp` Defaults to `tcp`.
	Protocol *string `pulumi:"protocol"`
	// The source CIDR block to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceAddress *string `pulumi:"sourceAddress"`
	// The source tenant name (*not* GUID) to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceTenant *string `pulumi:"sourceTenant"`
	// The GUID of the tenant that the network security rule will be created in.
	TenantId *string `pulumi:"tenantId"`
	// The end of a port range to allow traffic to. Defaults to `65535`.
	ToPort *int `pulumi:"toPort"`
}

type TenantNetworkSecurityRuleState struct {
	// A description for this rule.
	Description pulumi.StringPtrInput
	// The start of a port range to allow traffic to. Defaults to `0`.
	FromPort pulumi.IntPtrInput
	// The network protocol.  Must be one of:  `tcp`, `udp`, `icmp` Defaults to `tcp`.
	Protocol pulumi.StringPtrInput
	// The source CIDR block to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceAddress pulumi.StringPtrInput
	// The source tenant name (*not* GUID) to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceTenant pulumi.StringPtrInput
	// The GUID of the tenant that the network security rule will be created in.
	TenantId pulumi.StringPtrInput
	// The end of a port range to allow traffic to. Defaults to `65535`.
	ToPort pulumi.IntPtrInput
}

func (TenantNetworkSecurityRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantNetworkSecurityRuleState)(nil)).Elem()
}

type tenantNetworkSecurityRuleArgs struct {
	// A description for this rule.
	Description string `pulumi:"description"`
	// The start of a port range to allow traffic to. Defaults to `0`.
	FromPort *int `pulumi:"fromPort"`
	// The network protocol.  Must be one of:  `tcp`, `udp`, `icmp` Defaults to `tcp`.
	Protocol *string `pulumi:"protocol"`
	// The source CIDR block to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceAddress *string `pulumi:"sourceAddress"`
	// The source tenant name (*not* GUID) to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceTenant *string `pulumi:"sourceTenant"`
	// The GUID of the tenant that the network security rule will be created in.
	TenantId string `pulumi:"tenantId"`
	// The end of a port range to allow traffic to. Defaults to `65535`.
	ToPort *int `pulumi:"toPort"`
}

// The set of arguments for constructing a TenantNetworkSecurityRule resource.
type TenantNetworkSecurityRuleArgs struct {
	// A description for this rule.
	Description pulumi.StringInput
	// The start of a port range to allow traffic to. Defaults to `0`.
	FromPort pulumi.IntPtrInput
	// The network protocol.  Must be one of:  `tcp`, `udp`, `icmp` Defaults to `tcp`.
	Protocol pulumi.StringPtrInput
	// The source CIDR block to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceAddress pulumi.StringPtrInput
	// The source tenant name (*not* GUID) to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
	SourceTenant pulumi.StringPtrInput
	// The GUID of the tenant that the network security rule will be created in.
	TenantId pulumi.StringInput
	// The end of a port range to allow traffic to. Defaults to `65535`.
	ToPort pulumi.IntPtrInput
}

func (TenantNetworkSecurityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantNetworkSecurityRuleArgs)(nil)).Elem()
}

type TenantNetworkSecurityRuleInput interface {
	pulumi.Input

	ToTenantNetworkSecurityRuleOutput() TenantNetworkSecurityRuleOutput
	ToTenantNetworkSecurityRuleOutputWithContext(ctx context.Context) TenantNetworkSecurityRuleOutput
}

func (*TenantNetworkSecurityRule) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantNetworkSecurityRule)(nil)).Elem()
}

func (i *TenantNetworkSecurityRule) ToTenantNetworkSecurityRuleOutput() TenantNetworkSecurityRuleOutput {
	return i.ToTenantNetworkSecurityRuleOutputWithContext(context.Background())
}

func (i *TenantNetworkSecurityRule) ToTenantNetworkSecurityRuleOutputWithContext(ctx context.Context) TenantNetworkSecurityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantNetworkSecurityRuleOutput)
}

// TenantNetworkSecurityRuleArrayInput is an input type that accepts TenantNetworkSecurityRuleArray and TenantNetworkSecurityRuleArrayOutput values.
// You can construct a concrete instance of `TenantNetworkSecurityRuleArrayInput` via:
//
//	TenantNetworkSecurityRuleArray{ TenantNetworkSecurityRuleArgs{...} }
type TenantNetworkSecurityRuleArrayInput interface {
	pulumi.Input

	ToTenantNetworkSecurityRuleArrayOutput() TenantNetworkSecurityRuleArrayOutput
	ToTenantNetworkSecurityRuleArrayOutputWithContext(context.Context) TenantNetworkSecurityRuleArrayOutput
}

type TenantNetworkSecurityRuleArray []TenantNetworkSecurityRuleInput

func (TenantNetworkSecurityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TenantNetworkSecurityRule)(nil)).Elem()
}

func (i TenantNetworkSecurityRuleArray) ToTenantNetworkSecurityRuleArrayOutput() TenantNetworkSecurityRuleArrayOutput {
	return i.ToTenantNetworkSecurityRuleArrayOutputWithContext(context.Background())
}

func (i TenantNetworkSecurityRuleArray) ToTenantNetworkSecurityRuleArrayOutputWithContext(ctx context.Context) TenantNetworkSecurityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantNetworkSecurityRuleArrayOutput)
}

// TenantNetworkSecurityRuleMapInput is an input type that accepts TenantNetworkSecurityRuleMap and TenantNetworkSecurityRuleMapOutput values.
// You can construct a concrete instance of `TenantNetworkSecurityRuleMapInput` via:
//
//	TenantNetworkSecurityRuleMap{ "key": TenantNetworkSecurityRuleArgs{...} }
type TenantNetworkSecurityRuleMapInput interface {
	pulumi.Input

	ToTenantNetworkSecurityRuleMapOutput() TenantNetworkSecurityRuleMapOutput
	ToTenantNetworkSecurityRuleMapOutputWithContext(context.Context) TenantNetworkSecurityRuleMapOutput
}

type TenantNetworkSecurityRuleMap map[string]TenantNetworkSecurityRuleInput

func (TenantNetworkSecurityRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TenantNetworkSecurityRule)(nil)).Elem()
}

func (i TenantNetworkSecurityRuleMap) ToTenantNetworkSecurityRuleMapOutput() TenantNetworkSecurityRuleMapOutput {
	return i.ToTenantNetworkSecurityRuleMapOutputWithContext(context.Background())
}

func (i TenantNetworkSecurityRuleMap) ToTenantNetworkSecurityRuleMapOutputWithContext(ctx context.Context) TenantNetworkSecurityRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantNetworkSecurityRuleMapOutput)
}

type TenantNetworkSecurityRuleOutput struct{ *pulumi.OutputState }

func (TenantNetworkSecurityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantNetworkSecurityRule)(nil)).Elem()
}

func (o TenantNetworkSecurityRuleOutput) ToTenantNetworkSecurityRuleOutput() TenantNetworkSecurityRuleOutput {
	return o
}

func (o TenantNetworkSecurityRuleOutput) ToTenantNetworkSecurityRuleOutputWithContext(ctx context.Context) TenantNetworkSecurityRuleOutput {
	return o
}

// A description for this rule.
func (o TenantNetworkSecurityRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *TenantNetworkSecurityRule) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The start of a port range to allow traffic to. Defaults to `0`.
func (o TenantNetworkSecurityRuleOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TenantNetworkSecurityRule) pulumi.IntPtrOutput { return v.FromPort }).(pulumi.IntPtrOutput)
}

// The network protocol.  Must be one of:  `tcp`, `udp`, `icmp` Defaults to `tcp`.
func (o TenantNetworkSecurityRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantNetworkSecurityRule) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The source CIDR block to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
func (o TenantNetworkSecurityRuleOutput) SourceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantNetworkSecurityRule) pulumi.StringPtrOutput { return v.SourceAddress }).(pulumi.StringPtrOutput)
}

// The source tenant name (*not* GUID) to allow traffic from. Only one of `sourceTenant` or `sourceAddress` may be specified.
func (o TenantNetworkSecurityRuleOutput) SourceTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantNetworkSecurityRule) pulumi.StringPtrOutput { return v.SourceTenant }).(pulumi.StringPtrOutput)
}

// The GUID of the tenant that the network security rule will be created in.
func (o TenantNetworkSecurityRuleOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *TenantNetworkSecurityRule) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The end of a port range to allow traffic to. Defaults to `65535`.
func (o TenantNetworkSecurityRuleOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TenantNetworkSecurityRule) pulumi.IntPtrOutput { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TenantNetworkSecurityRuleArrayOutput struct{ *pulumi.OutputState }

func (TenantNetworkSecurityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TenantNetworkSecurityRule)(nil)).Elem()
}

func (o TenantNetworkSecurityRuleArrayOutput) ToTenantNetworkSecurityRuleArrayOutput() TenantNetworkSecurityRuleArrayOutput {
	return o
}

func (o TenantNetworkSecurityRuleArrayOutput) ToTenantNetworkSecurityRuleArrayOutputWithContext(ctx context.Context) TenantNetworkSecurityRuleArrayOutput {
	return o
}

func (o TenantNetworkSecurityRuleArrayOutput) Index(i pulumi.IntInput) TenantNetworkSecurityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TenantNetworkSecurityRule {
		return vs[0].([]*TenantNetworkSecurityRule)[vs[1].(int)]
	}).(TenantNetworkSecurityRuleOutput)
}

type TenantNetworkSecurityRuleMapOutput struct{ *pulumi.OutputState }

func (TenantNetworkSecurityRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TenantNetworkSecurityRule)(nil)).Elem()
}

func (o TenantNetworkSecurityRuleMapOutput) ToTenantNetworkSecurityRuleMapOutput() TenantNetworkSecurityRuleMapOutput {
	return o
}

func (o TenantNetworkSecurityRuleMapOutput) ToTenantNetworkSecurityRuleMapOutputWithContext(ctx context.Context) TenantNetworkSecurityRuleMapOutput {
	return o
}

func (o TenantNetworkSecurityRuleMapOutput) MapIndex(k pulumi.StringInput) TenantNetworkSecurityRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TenantNetworkSecurityRule {
		return vs[0].(map[string]*TenantNetworkSecurityRule)[vs[1].(string)]
	}).(TenantNetworkSecurityRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TenantNetworkSecurityRuleInput)(nil)).Elem(), &TenantNetworkSecurityRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantNetworkSecurityRuleArrayInput)(nil)).Elem(), TenantNetworkSecurityRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantNetworkSecurityRuleMapInput)(nil)).Elem(), TenantNetworkSecurityRuleMap{})
	pulumi.RegisterOutputType(TenantNetworkSecurityRuleOutput{})
	pulumi.RegisterOutputType(TenantNetworkSecurityRuleArrayOutput{})
	pulumi.RegisterOutputType(TenantNetworkSecurityRuleMapOutput{})
}
