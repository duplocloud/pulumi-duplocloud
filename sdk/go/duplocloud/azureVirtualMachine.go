// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureVirtualMachine` manages an Azure virtual machine in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAzureVirtualMachine(ctx, "az_vm", &duplocloud.AzureVirtualMachineArgs{
//				TenantId:      myapp.TenantId,
//				FriendlyName:  pulumi.String("test-vm"),
//				ImageId:       pulumi.String("16.04-LTS;Canonical;UbuntuServer"),
//				Capacity:      pulumi.String("Standard_D2s_v3"),
//				AgentPlatform: pulumi.Int(0),
//				AdminUsername: pulumi.String("azureuser"),
//				AdminPassword: pulumi.String("Root!12345"),
//				DiskSizeGb:    pulumi.Int(50),
//				SubnetId:      pulumi.String("duploinfra-default"),
//				MinionTags: duplocloud.AzureVirtualMachineMinionTagArray{
//					&duplocloud.AzureVirtualMachineMinionTagArgs{
//						Key:   pulumi.String("AllocationTags"),
//						Value: pulumi.String("test-host"),
//					},
//				},
//				Tags: duplocloud.AzureVirtualMachineTagArray{
//					&duplocloud.AzureVirtualMachineTagArgs{
//						Key:   pulumi.String("CreatedBy"),
//						Value: pulumi.String("duplo"),
//					},
//					&duplocloud.AzureVirtualMachineTagArgs{
//						Key:   pulumi.String("Owner"),
//						Value: pulumi.String("duplo"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing Azure Virtual Machine
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SHORT_NAME* is the short name of the Azure Virtual Machine
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/azureVirtualMachine:AzureVirtualMachine myvm *TENANT_ID*/*SHORT_NAME*
// ```
type AzureVirtualMachine struct {
	pulumi.CustomResourceState

	// Specify domain service provided by Microsoft Azure for managing identities and access in the cloud. Valid values are `aadjoin` or `addsjoin`.
	AdDomainType pulumi.StringOutput `pulumi:"adDomainType"`
	// The password associated with the local administrator account.
	AdminPassword pulumi.StringPtrOutput `pulumi:"adminPassword"`
	// Specifies the name of the local administrator account.
	AdminUsername pulumi.StringOutput `pulumi:"adminUsername"`
	// The numeric ID of the container agent pool that this host is added to. Defaults to `0`.
	AgentPlatform pulumi.IntPtrOutput `pulumi:"agentPlatform"`
	// Whether or not to allocate a public IP. Defaults to `false`.
	AllocatedPublicIp pulumi.BoolPtrOutput `pulumi:"allocatedPublicIp"`
	// Specify availability set id to which virtual machine should be added to
	AvailabilitySetId pulumi.StringOutput `pulumi:"availabilitySetId"`
	// Base64 encoded user data to associated with the host.
	Base64UserData pulumi.StringOutput `pulumi:"base64UserData"`
	// Specifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
	Capacity pulumi.StringOutput `pulumi:"capacity"`
	// disk control types refer to the different levels of management and performance control provided for disks attached to virtual machines (VMs)
	DiskControlType pulumi.StringOutput `pulumi:"diskControlType"`
	// Specifies the size of the OS Disk in gigabytes Defaults to `128`.
	DiskSizeGb pulumi.IntPtrOutput `pulumi:"diskSizeGb"`
	// Defaults to `false`.
	EnableEncryptAtHost pulumi.BoolPtrOutput `pulumi:"enableEncryptAtHost"`
	// Enable log analytics on virtual machine. Defaults to `false`.
	EnableLogAnalytics pulumi.BoolPtrOutput `pulumi:"enableLogAnalytics"`
	// Specify to enable Secure Boot for your VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableSecurityBoot pulumi.BoolPtrOutput `pulumi:"enableSecurityBoot"`
	// Specify to enable virtual Trusted Platform Module (vTPM) for Azure VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableVtpm pulumi.BoolPtrOutput `pulumi:"enableVtpm"`
	// Defaults to `false`.
	EncryptDisk pulumi.BoolPtrOutput `pulumi:"encryptDisk"`
	// The short name of the host.
	FriendlyName pulumi.StringOutput `pulumi:"friendlyName"`
	// The full name of the host.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// The Image ID to use to create virtual machine. Provide id as semicolon separated string with sequence of sku, publisher and offer. For example, 16.04-LTS;Canonical;UbuntuServe
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// The Azure Virtual Machine ID of the host.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	IsMinion   pulumi.BoolOutput   `pulumi:"isMinion"`
	// Join a Windows Server virtual machine to an Azure Active Directory Domain Services. Defaults to `false`.
	JoinDomain pulumi.BoolPtrOutput `pulumi:"joinDomain"`
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags AzureVirtualMachineMinionTagArrayOutput `pulumi:"minionTags"`
	// Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_ZRS` or `UltraSSD_LRS`.
	OsDiskType pulumi.StringOutput `pulumi:"osDiskType"`
	// Specify "Standard" or "TrustedLaunch" security type. Defaults to "Standard".
	// 		Use TrustedLaunch for the security of "Generation 2" virtual machines (VMs).
	// 		[Supported Sizes](https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#virtual-machines-sizes)
	// 		 Defaults to `Standard`.
	SecurityType pulumi.StringPtrOutput `pulumi:"securityType"`
	// The current status of the host.
	Status pulumi.StringOutput `pulumi:"status"`
	// Subnet ID which should be associated with the Virtual Machine.
	SubnetId pulumi.StringOutput               `pulumi:"subnetId"`
	Tags     AzureVirtualMachineTagArrayOutput `pulumi:"tags"`
	// The GUID of the tenant that the host will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
	Timezone pulumi.StringPtrOutput `pulumi:"timezone"`
	// The name of the tenant that the host will be created in.
	UserAccount pulumi.StringOutput                  `pulumi:"userAccount"`
	Volumes     AzureVirtualMachineVolumeArrayOutput `pulumi:"volumes"`
	// Whether or not to wait until azure virtual machine to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrOutput `pulumi:"waitUntilReady"`
}

// NewAzureVirtualMachine registers a new resource with the given unique name, arguments, and options.
func NewAzureVirtualMachine(ctx *pulumi.Context,
	name string, args *AzureVirtualMachineArgs, opts ...pulumi.ResourceOption) (*AzureVirtualMachine, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminUsername == nil {
		return nil, errors.New("invalid value for required argument 'AdminUsername'")
	}
	if args.Capacity == nil {
		return nil, errors.New("invalid value for required argument 'Capacity'")
	}
	if args.FriendlyName == nil {
		return nil, errors.New("invalid value for required argument 'FriendlyName'")
	}
	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	if args.AdminPassword != nil {
		args.AdminPassword = pulumi.ToSecret(args.AdminPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"adminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureVirtualMachine
	err := ctx.RegisterResource("duplocloud:index/azureVirtualMachine:AzureVirtualMachine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureVirtualMachine gets an existing AzureVirtualMachine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureVirtualMachine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureVirtualMachineState, opts ...pulumi.ResourceOption) (*AzureVirtualMachine, error) {
	var resource AzureVirtualMachine
	err := ctx.ReadResource("duplocloud:index/azureVirtualMachine:AzureVirtualMachine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureVirtualMachine resources.
type azureVirtualMachineState struct {
	// Specify domain service provided by Microsoft Azure for managing identities and access in the cloud. Valid values are `aadjoin` or `addsjoin`.
	AdDomainType *string `pulumi:"adDomainType"`
	// The password associated with the local administrator account.
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the local administrator account.
	AdminUsername *string `pulumi:"adminUsername"`
	// The numeric ID of the container agent pool that this host is added to. Defaults to `0`.
	AgentPlatform *int `pulumi:"agentPlatform"`
	// Whether or not to allocate a public IP. Defaults to `false`.
	AllocatedPublicIp *bool `pulumi:"allocatedPublicIp"`
	// Specify availability set id to which virtual machine should be added to
	AvailabilitySetId *string `pulumi:"availabilitySetId"`
	// Base64 encoded user data to associated with the host.
	Base64UserData *string `pulumi:"base64UserData"`
	// Specifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
	Capacity *string `pulumi:"capacity"`
	// disk control types refer to the different levels of management and performance control provided for disks attached to virtual machines (VMs)
	DiskControlType *string `pulumi:"diskControlType"`
	// Specifies the size of the OS Disk in gigabytes Defaults to `128`.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Defaults to `false`.
	EnableEncryptAtHost *bool `pulumi:"enableEncryptAtHost"`
	// Enable log analytics on virtual machine. Defaults to `false`.
	EnableLogAnalytics *bool `pulumi:"enableLogAnalytics"`
	// Specify to enable Secure Boot for your VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableSecurityBoot *bool `pulumi:"enableSecurityBoot"`
	// Specify to enable virtual Trusted Platform Module (vTPM) for Azure VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableVtpm *bool `pulumi:"enableVtpm"`
	// Defaults to `false`.
	EncryptDisk *bool `pulumi:"encryptDisk"`
	// The short name of the host.
	FriendlyName *string `pulumi:"friendlyName"`
	// The full name of the host.
	Fullname *string `pulumi:"fullname"`
	// The Image ID to use to create virtual machine. Provide id as semicolon separated string with sequence of sku, publisher and offer. For example, 16.04-LTS;Canonical;UbuntuServe
	ImageId *string `pulumi:"imageId"`
	// The Azure Virtual Machine ID of the host.
	InstanceId *string `pulumi:"instanceId"`
	IsMinion   *bool   `pulumi:"isMinion"`
	// Join a Windows Server virtual machine to an Azure Active Directory Domain Services. Defaults to `false`.
	JoinDomain *bool `pulumi:"joinDomain"`
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags []AzureVirtualMachineMinionTag `pulumi:"minionTags"`
	// Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_ZRS` or `UltraSSD_LRS`.
	OsDiskType *string `pulumi:"osDiskType"`
	// Specify "Standard" or "TrustedLaunch" security type. Defaults to "Standard".
	// 		Use TrustedLaunch for the security of "Generation 2" virtual machines (VMs).
	// 		[Supported Sizes](https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#virtual-machines-sizes)
	// 		 Defaults to `Standard`.
	SecurityType *string `pulumi:"securityType"`
	// The current status of the host.
	Status *string `pulumi:"status"`
	// Subnet ID which should be associated with the Virtual Machine.
	SubnetId *string                  `pulumi:"subnetId"`
	Tags     []AzureVirtualMachineTag `pulumi:"tags"`
	// The GUID of the tenant that the host will be created in.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
	Timezone *string `pulumi:"timezone"`
	// The name of the tenant that the host will be created in.
	UserAccount *string                     `pulumi:"userAccount"`
	Volumes     []AzureVirtualMachineVolume `pulumi:"volumes"`
	// Whether or not to wait until azure virtual machine to be ready, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

type AzureVirtualMachineState struct {
	// Specify domain service provided by Microsoft Azure for managing identities and access in the cloud. Valid values are `aadjoin` or `addsjoin`.
	AdDomainType pulumi.StringPtrInput
	// The password associated with the local administrator account.
	AdminPassword pulumi.StringPtrInput
	// Specifies the name of the local administrator account.
	AdminUsername pulumi.StringPtrInput
	// The numeric ID of the container agent pool that this host is added to. Defaults to `0`.
	AgentPlatform pulumi.IntPtrInput
	// Whether or not to allocate a public IP. Defaults to `false`.
	AllocatedPublicIp pulumi.BoolPtrInput
	// Specify availability set id to which virtual machine should be added to
	AvailabilitySetId pulumi.StringPtrInput
	// Base64 encoded user data to associated with the host.
	Base64UserData pulumi.StringPtrInput
	// Specifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
	Capacity pulumi.StringPtrInput
	// disk control types refer to the different levels of management and performance control provided for disks attached to virtual machines (VMs)
	DiskControlType pulumi.StringPtrInput
	// Specifies the size of the OS Disk in gigabytes Defaults to `128`.
	DiskSizeGb pulumi.IntPtrInput
	// Defaults to `false`.
	EnableEncryptAtHost pulumi.BoolPtrInput
	// Enable log analytics on virtual machine. Defaults to `false`.
	EnableLogAnalytics pulumi.BoolPtrInput
	// Specify to enable Secure Boot for your VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableSecurityBoot pulumi.BoolPtrInput
	// Specify to enable virtual Trusted Platform Module (vTPM) for Azure VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableVtpm pulumi.BoolPtrInput
	// Defaults to `false`.
	EncryptDisk pulumi.BoolPtrInput
	// The short name of the host.
	FriendlyName pulumi.StringPtrInput
	// The full name of the host.
	Fullname pulumi.StringPtrInput
	// The Image ID to use to create virtual machine. Provide id as semicolon separated string with sequence of sku, publisher and offer. For example, 16.04-LTS;Canonical;UbuntuServe
	ImageId pulumi.StringPtrInput
	// The Azure Virtual Machine ID of the host.
	InstanceId pulumi.StringPtrInput
	IsMinion   pulumi.BoolPtrInput
	// Join a Windows Server virtual machine to an Azure Active Directory Domain Services. Defaults to `false`.
	JoinDomain pulumi.BoolPtrInput
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags AzureVirtualMachineMinionTagArrayInput
	// Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_ZRS` or `UltraSSD_LRS`.
	OsDiskType pulumi.StringPtrInput
	// Specify "Standard" or "TrustedLaunch" security type. Defaults to "Standard".
	// 		Use TrustedLaunch for the security of "Generation 2" virtual machines (VMs).
	// 		[Supported Sizes](https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#virtual-machines-sizes)
	// 		 Defaults to `Standard`.
	SecurityType pulumi.StringPtrInput
	// The current status of the host.
	Status pulumi.StringPtrInput
	// Subnet ID which should be associated with the Virtual Machine.
	SubnetId pulumi.StringPtrInput
	Tags     AzureVirtualMachineTagArrayInput
	// The GUID of the tenant that the host will be created in.
	TenantId pulumi.StringPtrInput
	// Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
	Timezone pulumi.StringPtrInput
	// The name of the tenant that the host will be created in.
	UserAccount pulumi.StringPtrInput
	Volumes     AzureVirtualMachineVolumeArrayInput
	// Whether or not to wait until azure virtual machine to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (AzureVirtualMachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureVirtualMachineState)(nil)).Elem()
}

type azureVirtualMachineArgs struct {
	// Specify domain service provided by Microsoft Azure for managing identities and access in the cloud. Valid values are `aadjoin` or `addsjoin`.
	AdDomainType *string `pulumi:"adDomainType"`
	// The password associated with the local administrator account.
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the local administrator account.
	AdminUsername string `pulumi:"adminUsername"`
	// The numeric ID of the container agent pool that this host is added to. Defaults to `0`.
	AgentPlatform *int `pulumi:"agentPlatform"`
	// Whether or not to allocate a public IP. Defaults to `false`.
	AllocatedPublicIp *bool `pulumi:"allocatedPublicIp"`
	// Specify availability set id to which virtual machine should be added to
	AvailabilitySetId *string `pulumi:"availabilitySetId"`
	// Base64 encoded user data to associated with the host.
	Base64UserData *string `pulumi:"base64UserData"`
	// Specifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
	Capacity string `pulumi:"capacity"`
	// disk control types refer to the different levels of management and performance control provided for disks attached to virtual machines (VMs)
	DiskControlType *string `pulumi:"diskControlType"`
	// Specifies the size of the OS Disk in gigabytes Defaults to `128`.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Defaults to `false`.
	EnableEncryptAtHost *bool `pulumi:"enableEncryptAtHost"`
	// Enable log analytics on virtual machine. Defaults to `false`.
	EnableLogAnalytics *bool `pulumi:"enableLogAnalytics"`
	// Specify to enable Secure Boot for your VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableSecurityBoot *bool `pulumi:"enableSecurityBoot"`
	// Specify to enable virtual Trusted Platform Module (vTPM) for Azure VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableVtpm *bool `pulumi:"enableVtpm"`
	// Defaults to `false`.
	EncryptDisk *bool `pulumi:"encryptDisk"`
	// The short name of the host.
	FriendlyName string `pulumi:"friendlyName"`
	// The Image ID to use to create virtual machine. Provide id as semicolon separated string with sequence of sku, publisher and offer. For example, 16.04-LTS;Canonical;UbuntuServe
	ImageId  string `pulumi:"imageId"`
	IsMinion *bool  `pulumi:"isMinion"`
	// Join a Windows Server virtual machine to an Azure Active Directory Domain Services. Defaults to `false`.
	JoinDomain *bool `pulumi:"joinDomain"`
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags []AzureVirtualMachineMinionTag `pulumi:"minionTags"`
	// Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_ZRS` or `UltraSSD_LRS`.
	OsDiskType *string `pulumi:"osDiskType"`
	// Specify "Standard" or "TrustedLaunch" security type. Defaults to "Standard".
	// 		Use TrustedLaunch for the security of "Generation 2" virtual machines (VMs).
	// 		[Supported Sizes](https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#virtual-machines-sizes)
	// 		 Defaults to `Standard`.
	SecurityType *string `pulumi:"securityType"`
	// Subnet ID which should be associated with the Virtual Machine.
	SubnetId string                   `pulumi:"subnetId"`
	Tags     []AzureVirtualMachineTag `pulumi:"tags"`
	// The GUID of the tenant that the host will be created in.
	TenantId string `pulumi:"tenantId"`
	// Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
	Timezone *string                     `pulumi:"timezone"`
	Volumes  []AzureVirtualMachineVolume `pulumi:"volumes"`
	// Whether or not to wait until azure virtual machine to be ready, after creation. Defaults to `true`.
	WaitUntilReady *bool `pulumi:"waitUntilReady"`
}

// The set of arguments for constructing a AzureVirtualMachine resource.
type AzureVirtualMachineArgs struct {
	// Specify domain service provided by Microsoft Azure for managing identities and access in the cloud. Valid values are `aadjoin` or `addsjoin`.
	AdDomainType pulumi.StringPtrInput
	// The password associated with the local administrator account.
	AdminPassword pulumi.StringPtrInput
	// Specifies the name of the local administrator account.
	AdminUsername pulumi.StringInput
	// The numeric ID of the container agent pool that this host is added to. Defaults to `0`.
	AgentPlatform pulumi.IntPtrInput
	// Whether or not to allocate a public IP. Defaults to `false`.
	AllocatedPublicIp pulumi.BoolPtrInput
	// Specify availability set id to which virtual machine should be added to
	AvailabilitySetId pulumi.StringPtrInput
	// Base64 encoded user data to associated with the host.
	Base64UserData pulumi.StringPtrInput
	// Specifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
	Capacity pulumi.StringInput
	// disk control types refer to the different levels of management and performance control provided for disks attached to virtual machines (VMs)
	DiskControlType pulumi.StringPtrInput
	// Specifies the size of the OS Disk in gigabytes Defaults to `128`.
	DiskSizeGb pulumi.IntPtrInput
	// Defaults to `false`.
	EnableEncryptAtHost pulumi.BoolPtrInput
	// Enable log analytics on virtual machine. Defaults to `false`.
	EnableLogAnalytics pulumi.BoolPtrInput
	// Specify to enable Secure Boot for your VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableSecurityBoot pulumi.BoolPtrInput
	// Specify to enable virtual Trusted Platform Module (vTPM) for Azure VM. Used with security_type=TrustedLaunch Defaults to `true`.
	EnableVtpm pulumi.BoolPtrInput
	// Defaults to `false`.
	EncryptDisk pulumi.BoolPtrInput
	// The short name of the host.
	FriendlyName pulumi.StringInput
	// The Image ID to use to create virtual machine. Provide id as semicolon separated string with sequence of sku, publisher and offer. For example, 16.04-LTS;Canonical;UbuntuServe
	ImageId  pulumi.StringInput
	IsMinion pulumi.BoolPtrInput
	// Join a Windows Server virtual machine to an Azure Active Directory Domain Services. Defaults to `false`.
	JoinDomain pulumi.BoolPtrInput
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags AzureVirtualMachineMinionTagArrayInput
	// Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_ZRS` or `UltraSSD_LRS`.
	OsDiskType pulumi.StringPtrInput
	// Specify "Standard" or "TrustedLaunch" security type. Defaults to "Standard".
	// 		Use TrustedLaunch for the security of "Generation 2" virtual machines (VMs).
	// 		[Supported Sizes](https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#virtual-machines-sizes)
	// 		 Defaults to `Standard`.
	SecurityType pulumi.StringPtrInput
	// Subnet ID which should be associated with the Virtual Machine.
	SubnetId pulumi.StringInput
	Tags     AzureVirtualMachineTagArrayInput
	// The GUID of the tenant that the host will be created in.
	TenantId pulumi.StringInput
	// Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
	Timezone pulumi.StringPtrInput
	Volumes  AzureVirtualMachineVolumeArrayInput
	// Whether or not to wait until azure virtual machine to be ready, after creation. Defaults to `true`.
	WaitUntilReady pulumi.BoolPtrInput
}

func (AzureVirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureVirtualMachineArgs)(nil)).Elem()
}

type AzureVirtualMachineInput interface {
	pulumi.Input

	ToAzureVirtualMachineOutput() AzureVirtualMachineOutput
	ToAzureVirtualMachineOutputWithContext(ctx context.Context) AzureVirtualMachineOutput
}

func (*AzureVirtualMachine) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVirtualMachine)(nil)).Elem()
}

func (i *AzureVirtualMachine) ToAzureVirtualMachineOutput() AzureVirtualMachineOutput {
	return i.ToAzureVirtualMachineOutputWithContext(context.Background())
}

func (i *AzureVirtualMachine) ToAzureVirtualMachineOutputWithContext(ctx context.Context) AzureVirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVirtualMachineOutput)
}

// AzureVirtualMachineArrayInput is an input type that accepts AzureVirtualMachineArray and AzureVirtualMachineArrayOutput values.
// You can construct a concrete instance of `AzureVirtualMachineArrayInput` via:
//
//	AzureVirtualMachineArray{ AzureVirtualMachineArgs{...} }
type AzureVirtualMachineArrayInput interface {
	pulumi.Input

	ToAzureVirtualMachineArrayOutput() AzureVirtualMachineArrayOutput
	ToAzureVirtualMachineArrayOutputWithContext(context.Context) AzureVirtualMachineArrayOutput
}

type AzureVirtualMachineArray []AzureVirtualMachineInput

func (AzureVirtualMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureVirtualMachine)(nil)).Elem()
}

func (i AzureVirtualMachineArray) ToAzureVirtualMachineArrayOutput() AzureVirtualMachineArrayOutput {
	return i.ToAzureVirtualMachineArrayOutputWithContext(context.Background())
}

func (i AzureVirtualMachineArray) ToAzureVirtualMachineArrayOutputWithContext(ctx context.Context) AzureVirtualMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVirtualMachineArrayOutput)
}

// AzureVirtualMachineMapInput is an input type that accepts AzureVirtualMachineMap and AzureVirtualMachineMapOutput values.
// You can construct a concrete instance of `AzureVirtualMachineMapInput` via:
//
//	AzureVirtualMachineMap{ "key": AzureVirtualMachineArgs{...} }
type AzureVirtualMachineMapInput interface {
	pulumi.Input

	ToAzureVirtualMachineMapOutput() AzureVirtualMachineMapOutput
	ToAzureVirtualMachineMapOutputWithContext(context.Context) AzureVirtualMachineMapOutput
}

type AzureVirtualMachineMap map[string]AzureVirtualMachineInput

func (AzureVirtualMachineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureVirtualMachine)(nil)).Elem()
}

func (i AzureVirtualMachineMap) ToAzureVirtualMachineMapOutput() AzureVirtualMachineMapOutput {
	return i.ToAzureVirtualMachineMapOutputWithContext(context.Background())
}

func (i AzureVirtualMachineMap) ToAzureVirtualMachineMapOutputWithContext(ctx context.Context) AzureVirtualMachineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVirtualMachineMapOutput)
}

type AzureVirtualMachineOutput struct{ *pulumi.OutputState }

func (AzureVirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVirtualMachine)(nil)).Elem()
}

func (o AzureVirtualMachineOutput) ToAzureVirtualMachineOutput() AzureVirtualMachineOutput {
	return o
}

func (o AzureVirtualMachineOutput) ToAzureVirtualMachineOutputWithContext(ctx context.Context) AzureVirtualMachineOutput {
	return o
}

// Specify domain service provided by Microsoft Azure for managing identities and access in the cloud. Valid values are `aadjoin` or `addsjoin`.
func (o AzureVirtualMachineOutput) AdDomainType() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.AdDomainType }).(pulumi.StringOutput)
}

// The password associated with the local administrator account.
func (o AzureVirtualMachineOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringPtrOutput { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the local administrator account.
func (o AzureVirtualMachineOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.AdminUsername }).(pulumi.StringOutput)
}

// The numeric ID of the container agent pool that this host is added to. Defaults to `0`.
func (o AzureVirtualMachineOutput) AgentPlatform() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.IntPtrOutput { return v.AgentPlatform }).(pulumi.IntPtrOutput)
}

// Whether or not to allocate a public IP. Defaults to `false`.
func (o AzureVirtualMachineOutput) AllocatedPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.BoolPtrOutput { return v.AllocatedPublicIp }).(pulumi.BoolPtrOutput)
}

// Specify availability set id to which virtual machine should be added to
func (o AzureVirtualMachineOutput) AvailabilitySetId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.AvailabilitySetId }).(pulumi.StringOutput)
}

// Base64 encoded user data to associated with the host.
func (o AzureVirtualMachineOutput) Base64UserData() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.Base64UserData }).(pulumi.StringOutput)
}

// Specifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
func (o AzureVirtualMachineOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.Capacity }).(pulumi.StringOutput)
}

// disk control types refer to the different levels of management and performance control provided for disks attached to virtual machines (VMs)
func (o AzureVirtualMachineOutput) DiskControlType() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.DiskControlType }).(pulumi.StringOutput)
}

// Specifies the size of the OS Disk in gigabytes Defaults to `128`.
func (o AzureVirtualMachineOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.IntPtrOutput { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Defaults to `false`.
func (o AzureVirtualMachineOutput) EnableEncryptAtHost() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.BoolPtrOutput { return v.EnableEncryptAtHost }).(pulumi.BoolPtrOutput)
}

// Enable log analytics on virtual machine. Defaults to `false`.
func (o AzureVirtualMachineOutput) EnableLogAnalytics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.BoolPtrOutput { return v.EnableLogAnalytics }).(pulumi.BoolPtrOutput)
}

// Specify to enable Secure Boot for your VM. Used with security_type=TrustedLaunch Defaults to `true`.
func (o AzureVirtualMachineOutput) EnableSecurityBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.BoolPtrOutput { return v.EnableSecurityBoot }).(pulumi.BoolPtrOutput)
}

// Specify to enable virtual Trusted Platform Module (vTPM) for Azure VM. Used with security_type=TrustedLaunch Defaults to `true`.
func (o AzureVirtualMachineOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.BoolPtrOutput { return v.EnableVtpm }).(pulumi.BoolPtrOutput)
}

// Defaults to `false`.
func (o AzureVirtualMachineOutput) EncryptDisk() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.BoolPtrOutput { return v.EncryptDisk }).(pulumi.BoolPtrOutput)
}

// The short name of the host.
func (o AzureVirtualMachineOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.FriendlyName }).(pulumi.StringOutput)
}

// The full name of the host.
func (o AzureVirtualMachineOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// The Image ID to use to create virtual machine. Provide id as semicolon separated string with sequence of sku, publisher and offer. For example, 16.04-LTS;Canonical;UbuntuServe
func (o AzureVirtualMachineOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// The Azure Virtual Machine ID of the host.
func (o AzureVirtualMachineOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o AzureVirtualMachineOutput) IsMinion() pulumi.BoolOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.BoolOutput { return v.IsMinion }).(pulumi.BoolOutput)
}

// Join a Windows Server virtual machine to an Azure Active Directory Domain Services. Defaults to `false`.
func (o AzureVirtualMachineOutput) JoinDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.BoolPtrOutput { return v.JoinDomain }).(pulumi.BoolPtrOutput)
}

// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
func (o AzureVirtualMachineOutput) MinionTags() AzureVirtualMachineMinionTagArrayOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) AzureVirtualMachineMinionTagArrayOutput { return v.MinionTags }).(AzureVirtualMachineMinionTagArrayOutput)
}

// Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_ZRS` or `UltraSSD_LRS`.
func (o AzureVirtualMachineOutput) OsDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.OsDiskType }).(pulumi.StringOutput)
}

// Specify "Standard" or "TrustedLaunch" security type. Defaults to "Standard".
//
//	Use TrustedLaunch for the security of "Generation 2" virtual machines (VMs).
//	[Supported Sizes](https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#virtual-machines-sizes)
//	 Defaults to `Standard`.
func (o AzureVirtualMachineOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringPtrOutput { return v.SecurityType }).(pulumi.StringPtrOutput)
}

// The current status of the host.
func (o AzureVirtualMachineOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Subnet ID which should be associated with the Virtual Machine.
func (o AzureVirtualMachineOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o AzureVirtualMachineOutput) Tags() AzureVirtualMachineTagArrayOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) AzureVirtualMachineTagArrayOutput { return v.Tags }).(AzureVirtualMachineTagArrayOutput)
}

// The GUID of the tenant that the host will be created in.
func (o AzureVirtualMachineOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
func (o AzureVirtualMachineOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringPtrOutput { return v.Timezone }).(pulumi.StringPtrOutput)
}

// The name of the tenant that the host will be created in.
func (o AzureVirtualMachineOutput) UserAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.StringOutput { return v.UserAccount }).(pulumi.StringOutput)
}

func (o AzureVirtualMachineOutput) Volumes() AzureVirtualMachineVolumeArrayOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) AzureVirtualMachineVolumeArrayOutput { return v.Volumes }).(AzureVirtualMachineVolumeArrayOutput)
}

// Whether or not to wait until azure virtual machine to be ready, after creation. Defaults to `true`.
func (o AzureVirtualMachineOutput) WaitUntilReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVirtualMachine) pulumi.BoolPtrOutput { return v.WaitUntilReady }).(pulumi.BoolPtrOutput)
}

type AzureVirtualMachineArrayOutput struct{ *pulumi.OutputState }

func (AzureVirtualMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureVirtualMachine)(nil)).Elem()
}

func (o AzureVirtualMachineArrayOutput) ToAzureVirtualMachineArrayOutput() AzureVirtualMachineArrayOutput {
	return o
}

func (o AzureVirtualMachineArrayOutput) ToAzureVirtualMachineArrayOutputWithContext(ctx context.Context) AzureVirtualMachineArrayOutput {
	return o
}

func (o AzureVirtualMachineArrayOutput) Index(i pulumi.IntInput) AzureVirtualMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureVirtualMachine {
		return vs[0].([]*AzureVirtualMachine)[vs[1].(int)]
	}).(AzureVirtualMachineOutput)
}

type AzureVirtualMachineMapOutput struct{ *pulumi.OutputState }

func (AzureVirtualMachineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureVirtualMachine)(nil)).Elem()
}

func (o AzureVirtualMachineMapOutput) ToAzureVirtualMachineMapOutput() AzureVirtualMachineMapOutput {
	return o
}

func (o AzureVirtualMachineMapOutput) ToAzureVirtualMachineMapOutputWithContext(ctx context.Context) AzureVirtualMachineMapOutput {
	return o
}

func (o AzureVirtualMachineMapOutput) MapIndex(k pulumi.StringInput) AzureVirtualMachineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureVirtualMachine {
		return vs[0].(map[string]*AzureVirtualMachine)[vs[1].(string)]
	}).(AzureVirtualMachineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureVirtualMachineInput)(nil)).Elem(), &AzureVirtualMachine{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureVirtualMachineArrayInput)(nil)).Elem(), AzureVirtualMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureVirtualMachineMapInput)(nil)).Elem(), AzureVirtualMachineMap{})
	pulumi.RegisterOutputType(AzureVirtualMachineOutput{})
	pulumi.RegisterOutputType(AzureVirtualMachineArrayOutput{})
	pulumi.RegisterOutputType(AzureVirtualMachineMapOutput{})
}
