// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsLambdaFunctionEventConfig` manages an AWS lambda function in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("nondefault"),
//			})
//			if err != nil {
//				return err
//			}
//			myfunction, err := duplocloud.NewAwsLambdaFunction(ctx, "myfunction", &duplocloud.AwsLambdaFunctionArgs{
//				TenantId:    myapp.TenantId,
//				Name:        pulumi.String("myfunction"),
//				Description: pulumi.String("A description of my function"),
//				Runtime:     pulumi.String("java11"),
//				Handler:     pulumi.String("com.example.MyFunction::handleRequest"),
//				S3Bucket:    pulumi.String("my-bucket-name"),
//				S3Key:       pulumi.String("my-function.zip"),
//				Environment: &duplocloud.AwsLambdaFunctionEnvironmentArgs{
//					Variables: pulumi.StringMap{
//						"foo": pulumi.String("bar"),
//					},
//				},
//				Timeout:    pulumi.Int(60),
//				MemorySize: pulumi.Int(512),
//			})
//			if err != nil {
//				return err
//			}
//			failureQueue, err := duplocloud.NewAwsSqsQueue(ctx, "failure_queue", &duplocloud.AwsSqsQueueArgs{
//				TenantId:                  myapp.TenantId,
//				Name:                      pulumi.String("failure_queue"),
//				FifoQueue:                 pulumi.Bool(false),
//				MessageRetentionSeconds:   pulumi.Int(345600),
//				VisibilityTimeoutSeconds:  pulumi.Int(30),
//				ContentBasedDeduplication: pulumi.Bool(false),
//				DelaySeconds:              pulumi.Int(10),
//			})
//			if err != nil {
//				return err
//			}
//			successQueue, err := duplocloud.NewAwsSqsQueue(ctx, "success_queue", &duplocloud.AwsSqsQueueArgs{
//				TenantId:                  myapp.TenantId,
//				Name:                      pulumi.String("success_queue"),
//				FifoQueue:                 pulumi.Bool(false),
//				MessageRetentionSeconds:   pulumi.Int(345600),
//				VisibilityTimeoutSeconds:  pulumi.Int(30),
//				ContentBasedDeduplication: pulumi.Bool(false),
//				DelaySeconds:              pulumi.Int(10),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsLambdaFunctionEventConfig(ctx, "event-invoke-config", &duplocloud.AwsLambdaFunctionEventConfigArgs{
//				TenantId:             myapp.TenantId,
//				FunctionName:         myfunction.Fullname,
//				MaxRetryAttempts:     pulumi.Int(1),
//				MaxEventAgeInSeconds: pulumi.Int(100),
//				DestinationConfig: &duplocloud.AwsLambdaFunctionEventConfigDestinationConfigArgs{
//					OnFailure: &duplocloud.AwsLambdaFunctionEventConfigDestinationConfigOnFailureArgs{
//						Destination: failureQueue.Arn,
//					},
//					OnSuccess: &duplocloud.AwsLambdaFunctionEventConfigDestinationConfigOnSuccessArgs{
//						Destination: successQueue.Arn,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS lambda function event invoke config
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SHORT_NAME* is the short name of the AWS lambda function
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsLambdaFunctionEventConfig:AwsLambdaFunctionEventConfig event-invoke-config *TENANT_ID*/*SHORT_NAME*/eventInvokeConfig
// ```
type AwsLambdaFunctionEventConfig struct {
	pulumi.CustomResourceState

	// A configuration block to specify event destinations
	DestinationConfig AwsLambdaFunctionEventConfigDestinationConfigPtrOutput `pulumi:"destinationConfig"`
	// Name of Lambda function this configuration should apply to
	FunctionName pulumi.StringOutput `pulumi:"functionName"`
	// The maximum age of a request that Lambda sends to a function for processing
	MaxEventAgeInSeconds pulumi.IntPtrOutput `pulumi:"maxEventAgeInSeconds"`
	// Maximum number of attempts a Lambda function may retry in case of error
	MaxRetryAttempts pulumi.IntPtrOutput `pulumi:"maxRetryAttempts"`
	// The qualifier for the lambda event invoke configuration
	Qualifier pulumi.StringPtrOutput `pulumi:"qualifier"`
	// The GUID of the tenant that the lambda asynchronous invocation configuration will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAwsLambdaFunctionEventConfig registers a new resource with the given unique name, arguments, and options.
func NewAwsLambdaFunctionEventConfig(ctx *pulumi.Context,
	name string, args *AwsLambdaFunctionEventConfigArgs, opts ...pulumi.ResourceOption) (*AwsLambdaFunctionEventConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsLambdaFunctionEventConfig
	err := ctx.RegisterResource("duplocloud:index/awsLambdaFunctionEventConfig:AwsLambdaFunctionEventConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsLambdaFunctionEventConfig gets an existing AwsLambdaFunctionEventConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsLambdaFunctionEventConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsLambdaFunctionEventConfigState, opts ...pulumi.ResourceOption) (*AwsLambdaFunctionEventConfig, error) {
	var resource AwsLambdaFunctionEventConfig
	err := ctx.ReadResource("duplocloud:index/awsLambdaFunctionEventConfig:AwsLambdaFunctionEventConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsLambdaFunctionEventConfig resources.
type awsLambdaFunctionEventConfigState struct {
	// A configuration block to specify event destinations
	DestinationConfig *AwsLambdaFunctionEventConfigDestinationConfig `pulumi:"destinationConfig"`
	// Name of Lambda function this configuration should apply to
	FunctionName *string `pulumi:"functionName"`
	// The maximum age of a request that Lambda sends to a function for processing
	MaxEventAgeInSeconds *int `pulumi:"maxEventAgeInSeconds"`
	// Maximum number of attempts a Lambda function may retry in case of error
	MaxRetryAttempts *int `pulumi:"maxRetryAttempts"`
	// The qualifier for the lambda event invoke configuration
	Qualifier *string `pulumi:"qualifier"`
	// The GUID of the tenant that the lambda asynchronous invocation configuration will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AwsLambdaFunctionEventConfigState struct {
	// A configuration block to specify event destinations
	DestinationConfig AwsLambdaFunctionEventConfigDestinationConfigPtrInput
	// Name of Lambda function this configuration should apply to
	FunctionName pulumi.StringPtrInput
	// The maximum age of a request that Lambda sends to a function for processing
	MaxEventAgeInSeconds pulumi.IntPtrInput
	// Maximum number of attempts a Lambda function may retry in case of error
	MaxRetryAttempts pulumi.IntPtrInput
	// The qualifier for the lambda event invoke configuration
	Qualifier pulumi.StringPtrInput
	// The GUID of the tenant that the lambda asynchronous invocation configuration will be created in.
	TenantId pulumi.StringPtrInput
}

func (AwsLambdaFunctionEventConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLambdaFunctionEventConfigState)(nil)).Elem()
}

type awsLambdaFunctionEventConfigArgs struct {
	// A configuration block to specify event destinations
	DestinationConfig *AwsLambdaFunctionEventConfigDestinationConfig `pulumi:"destinationConfig"`
	// Name of Lambda function this configuration should apply to
	FunctionName string `pulumi:"functionName"`
	// The maximum age of a request that Lambda sends to a function for processing
	MaxEventAgeInSeconds *int `pulumi:"maxEventAgeInSeconds"`
	// Maximum number of attempts a Lambda function may retry in case of error
	MaxRetryAttempts *int `pulumi:"maxRetryAttempts"`
	// The qualifier for the lambda event invoke configuration
	Qualifier *string `pulumi:"qualifier"`
	// The GUID of the tenant that the lambda asynchronous invocation configuration will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AwsLambdaFunctionEventConfig resource.
type AwsLambdaFunctionEventConfigArgs struct {
	// A configuration block to specify event destinations
	DestinationConfig AwsLambdaFunctionEventConfigDestinationConfigPtrInput
	// Name of Lambda function this configuration should apply to
	FunctionName pulumi.StringInput
	// The maximum age of a request that Lambda sends to a function for processing
	MaxEventAgeInSeconds pulumi.IntPtrInput
	// Maximum number of attempts a Lambda function may retry in case of error
	MaxRetryAttempts pulumi.IntPtrInput
	// The qualifier for the lambda event invoke configuration
	Qualifier pulumi.StringPtrInput
	// The GUID of the tenant that the lambda asynchronous invocation configuration will be created in.
	TenantId pulumi.StringInput
}

func (AwsLambdaFunctionEventConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLambdaFunctionEventConfigArgs)(nil)).Elem()
}

type AwsLambdaFunctionEventConfigInput interface {
	pulumi.Input

	ToAwsLambdaFunctionEventConfigOutput() AwsLambdaFunctionEventConfigOutput
	ToAwsLambdaFunctionEventConfigOutputWithContext(ctx context.Context) AwsLambdaFunctionEventConfigOutput
}

func (*AwsLambdaFunctionEventConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLambdaFunctionEventConfig)(nil)).Elem()
}

func (i *AwsLambdaFunctionEventConfig) ToAwsLambdaFunctionEventConfigOutput() AwsLambdaFunctionEventConfigOutput {
	return i.ToAwsLambdaFunctionEventConfigOutputWithContext(context.Background())
}

func (i *AwsLambdaFunctionEventConfig) ToAwsLambdaFunctionEventConfigOutputWithContext(ctx context.Context) AwsLambdaFunctionEventConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLambdaFunctionEventConfigOutput)
}

// AwsLambdaFunctionEventConfigArrayInput is an input type that accepts AwsLambdaFunctionEventConfigArray and AwsLambdaFunctionEventConfigArrayOutput values.
// You can construct a concrete instance of `AwsLambdaFunctionEventConfigArrayInput` via:
//
//	AwsLambdaFunctionEventConfigArray{ AwsLambdaFunctionEventConfigArgs{...} }
type AwsLambdaFunctionEventConfigArrayInput interface {
	pulumi.Input

	ToAwsLambdaFunctionEventConfigArrayOutput() AwsLambdaFunctionEventConfigArrayOutput
	ToAwsLambdaFunctionEventConfigArrayOutputWithContext(context.Context) AwsLambdaFunctionEventConfigArrayOutput
}

type AwsLambdaFunctionEventConfigArray []AwsLambdaFunctionEventConfigInput

func (AwsLambdaFunctionEventConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLambdaFunctionEventConfig)(nil)).Elem()
}

func (i AwsLambdaFunctionEventConfigArray) ToAwsLambdaFunctionEventConfigArrayOutput() AwsLambdaFunctionEventConfigArrayOutput {
	return i.ToAwsLambdaFunctionEventConfigArrayOutputWithContext(context.Background())
}

func (i AwsLambdaFunctionEventConfigArray) ToAwsLambdaFunctionEventConfigArrayOutputWithContext(ctx context.Context) AwsLambdaFunctionEventConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLambdaFunctionEventConfigArrayOutput)
}

// AwsLambdaFunctionEventConfigMapInput is an input type that accepts AwsLambdaFunctionEventConfigMap and AwsLambdaFunctionEventConfigMapOutput values.
// You can construct a concrete instance of `AwsLambdaFunctionEventConfigMapInput` via:
//
//	AwsLambdaFunctionEventConfigMap{ "key": AwsLambdaFunctionEventConfigArgs{...} }
type AwsLambdaFunctionEventConfigMapInput interface {
	pulumi.Input

	ToAwsLambdaFunctionEventConfigMapOutput() AwsLambdaFunctionEventConfigMapOutput
	ToAwsLambdaFunctionEventConfigMapOutputWithContext(context.Context) AwsLambdaFunctionEventConfigMapOutput
}

type AwsLambdaFunctionEventConfigMap map[string]AwsLambdaFunctionEventConfigInput

func (AwsLambdaFunctionEventConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLambdaFunctionEventConfig)(nil)).Elem()
}

func (i AwsLambdaFunctionEventConfigMap) ToAwsLambdaFunctionEventConfigMapOutput() AwsLambdaFunctionEventConfigMapOutput {
	return i.ToAwsLambdaFunctionEventConfigMapOutputWithContext(context.Background())
}

func (i AwsLambdaFunctionEventConfigMap) ToAwsLambdaFunctionEventConfigMapOutputWithContext(ctx context.Context) AwsLambdaFunctionEventConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLambdaFunctionEventConfigMapOutput)
}

type AwsLambdaFunctionEventConfigOutput struct{ *pulumi.OutputState }

func (AwsLambdaFunctionEventConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLambdaFunctionEventConfig)(nil)).Elem()
}

func (o AwsLambdaFunctionEventConfigOutput) ToAwsLambdaFunctionEventConfigOutput() AwsLambdaFunctionEventConfigOutput {
	return o
}

func (o AwsLambdaFunctionEventConfigOutput) ToAwsLambdaFunctionEventConfigOutputWithContext(ctx context.Context) AwsLambdaFunctionEventConfigOutput {
	return o
}

// A configuration block to specify event destinations
func (o AwsLambdaFunctionEventConfigOutput) DestinationConfig() AwsLambdaFunctionEventConfigDestinationConfigPtrOutput {
	return o.ApplyT(func(v *AwsLambdaFunctionEventConfig) AwsLambdaFunctionEventConfigDestinationConfigPtrOutput {
		return v.DestinationConfig
	}).(AwsLambdaFunctionEventConfigDestinationConfigPtrOutput)
}

// Name of Lambda function this configuration should apply to
func (o AwsLambdaFunctionEventConfigOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLambdaFunctionEventConfig) pulumi.StringOutput { return v.FunctionName }).(pulumi.StringOutput)
}

// The maximum age of a request that Lambda sends to a function for processing
func (o AwsLambdaFunctionEventConfigOutput) MaxEventAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsLambdaFunctionEventConfig) pulumi.IntPtrOutput { return v.MaxEventAgeInSeconds }).(pulumi.IntPtrOutput)
}

// Maximum number of attempts a Lambda function may retry in case of error
func (o AwsLambdaFunctionEventConfigOutput) MaxRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsLambdaFunctionEventConfig) pulumi.IntPtrOutput { return v.MaxRetryAttempts }).(pulumi.IntPtrOutput)
}

// The qualifier for the lambda event invoke configuration
func (o AwsLambdaFunctionEventConfigOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsLambdaFunctionEventConfig) pulumi.StringPtrOutput { return v.Qualifier }).(pulumi.StringPtrOutput)
}

// The GUID of the tenant that the lambda asynchronous invocation configuration will be created in.
func (o AwsLambdaFunctionEventConfigOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLambdaFunctionEventConfig) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AwsLambdaFunctionEventConfigArrayOutput struct{ *pulumi.OutputState }

func (AwsLambdaFunctionEventConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLambdaFunctionEventConfig)(nil)).Elem()
}

func (o AwsLambdaFunctionEventConfigArrayOutput) ToAwsLambdaFunctionEventConfigArrayOutput() AwsLambdaFunctionEventConfigArrayOutput {
	return o
}

func (o AwsLambdaFunctionEventConfigArrayOutput) ToAwsLambdaFunctionEventConfigArrayOutputWithContext(ctx context.Context) AwsLambdaFunctionEventConfigArrayOutput {
	return o
}

func (o AwsLambdaFunctionEventConfigArrayOutput) Index(i pulumi.IntInput) AwsLambdaFunctionEventConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsLambdaFunctionEventConfig {
		return vs[0].([]*AwsLambdaFunctionEventConfig)[vs[1].(int)]
	}).(AwsLambdaFunctionEventConfigOutput)
}

type AwsLambdaFunctionEventConfigMapOutput struct{ *pulumi.OutputState }

func (AwsLambdaFunctionEventConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLambdaFunctionEventConfig)(nil)).Elem()
}

func (o AwsLambdaFunctionEventConfigMapOutput) ToAwsLambdaFunctionEventConfigMapOutput() AwsLambdaFunctionEventConfigMapOutput {
	return o
}

func (o AwsLambdaFunctionEventConfigMapOutput) ToAwsLambdaFunctionEventConfigMapOutputWithContext(ctx context.Context) AwsLambdaFunctionEventConfigMapOutput {
	return o
}

func (o AwsLambdaFunctionEventConfigMapOutput) MapIndex(k pulumi.StringInput) AwsLambdaFunctionEventConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsLambdaFunctionEventConfig {
		return vs[0].(map[string]*AwsLambdaFunctionEventConfig)[vs[1].(string)]
	}).(AwsLambdaFunctionEventConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLambdaFunctionEventConfigInput)(nil)).Elem(), &AwsLambdaFunctionEventConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLambdaFunctionEventConfigArrayInput)(nil)).Elem(), AwsLambdaFunctionEventConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLambdaFunctionEventConfigMapInput)(nil)).Elem(), AwsLambdaFunctionEventConfigMap{})
	pulumi.RegisterOutputType(AwsLambdaFunctionEventConfigOutput{})
	pulumi.RegisterOutputType(AwsLambdaFunctionEventConfigArrayOutput{})
	pulumi.RegisterOutputType(AwsLambdaFunctionEventConfigMapOutput{})
}
