// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureKeyVaultSecret` manages a Key Vault Secret in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAzureKeyVaultSecret(ctx, "myapp", &duplocloud.AzureKeyVaultSecretArgs{
//				TenantId: myapp.TenantId,
//				Name:     pulumi.String("base01-test"),
//				Value:    pulumi.String("tst"),
//				Type:     pulumi.String("duplo_container_env"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing Azure Key Vault Secret
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SHORT_NAME* is the short name of the Azure Key Vault Secret
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/azureKeyVaultSecret:AzureKeyVaultSecret mykvsecret *TENANT_ID*/*SHORT_NAME*
// ```
type AzureKeyVaultSecret struct {
	pulumi.CustomResourceState

	// Determines whether the object is enabled.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Duplo will generate name of the Key Vault Secret.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// The ID of the Key Vault where the Secret should be created.
	KeyVaultId pulumi.StringPtrOutput `pulumi:"keyVaultId"`
	// Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Reflects the deletion recovery level currently in effect for secrets in the current vault.
	RecoveryLevel pulumi.StringOutput `pulumi:"recoveryLevel"`
	// The GUID of the tenant that the key vault secret will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Specifies the content type for the Key Vault Secret. Defaults to `duploContainerEnv`.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Specifies the value of the Key vault secret.
	Value pulumi.StringOutput `pulumi:"value"`
	// Base URL of the Azure Key Vault
	VaultBaseUrl pulumi.StringOutput `pulumi:"vaultBaseUrl"`
	// The current version of the Key Vault Secret.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewAzureKeyVaultSecret registers a new resource with the given unique name, arguments, and options.
func NewAzureKeyVaultSecret(ctx *pulumi.Context,
	name string, args *AzureKeyVaultSecretArgs, opts ...pulumi.ResourceOption) (*AzureKeyVaultSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	if args.Value != nil {
		args.Value = pulumi.ToSecret(args.Value).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"value",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureKeyVaultSecret
	err := ctx.RegisterResource("duplocloud:index/azureKeyVaultSecret:AzureKeyVaultSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureKeyVaultSecret gets an existing AzureKeyVaultSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureKeyVaultSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureKeyVaultSecretState, opts ...pulumi.ResourceOption) (*AzureKeyVaultSecret, error) {
	var resource AzureKeyVaultSecret
	err := ctx.ReadResource("duplocloud:index/azureKeyVaultSecret:AzureKeyVaultSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureKeyVaultSecret resources.
type azureKeyVaultSecretState struct {
	// Determines whether the object is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Duplo will generate name of the Key Vault Secret.
	Fullname *string `pulumi:"fullname"`
	// The ID of the Key Vault where the Secret should be created.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Reflects the deletion recovery level currently in effect for secrets in the current vault.
	RecoveryLevel *string `pulumi:"recoveryLevel"`
	// The GUID of the tenant that the key vault secret will be created in.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the content type for the Key Vault Secret. Defaults to `duploContainerEnv`.
	Type *string `pulumi:"type"`
	// Specifies the value of the Key vault secret.
	Value *string `pulumi:"value"`
	// Base URL of the Azure Key Vault
	VaultBaseUrl *string `pulumi:"vaultBaseUrl"`
	// The current version of the Key Vault Secret.
	Version *string `pulumi:"version"`
}

type AzureKeyVaultSecretState struct {
	// Determines whether the object is enabled.
	Enabled pulumi.BoolPtrInput
	// Duplo will generate name of the Key Vault Secret.
	Fullname pulumi.StringPtrInput
	// The ID of the Key Vault where the Secret should be created.
	KeyVaultId pulumi.StringPtrInput
	// Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Reflects the deletion recovery level currently in effect for secrets in the current vault.
	RecoveryLevel pulumi.StringPtrInput
	// The GUID of the tenant that the key vault secret will be created in.
	TenantId pulumi.StringPtrInput
	// Specifies the content type for the Key Vault Secret. Defaults to `duploContainerEnv`.
	Type pulumi.StringPtrInput
	// Specifies the value of the Key vault secret.
	Value pulumi.StringPtrInput
	// Base URL of the Azure Key Vault
	VaultBaseUrl pulumi.StringPtrInput
	// The current version of the Key Vault Secret.
	Version pulumi.StringPtrInput
}

func (AzureKeyVaultSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureKeyVaultSecretState)(nil)).Elem()
}

type azureKeyVaultSecretArgs struct {
	// The ID of the Key Vault where the Secret should be created.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The GUID of the tenant that the key vault secret will be created in.
	TenantId string `pulumi:"tenantId"`
	// Specifies the content type for the Key Vault Secret. Defaults to `duploContainerEnv`.
	Type *string `pulumi:"type"`
	// Specifies the value of the Key vault secret.
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a AzureKeyVaultSecret resource.
type AzureKeyVaultSecretArgs struct {
	// The ID of the Key Vault where the Secret should be created.
	KeyVaultId pulumi.StringPtrInput
	// Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The GUID of the tenant that the key vault secret will be created in.
	TenantId pulumi.StringInput
	// Specifies the content type for the Key Vault Secret. Defaults to `duploContainerEnv`.
	Type pulumi.StringPtrInput
	// Specifies the value of the Key vault secret.
	Value pulumi.StringInput
}

func (AzureKeyVaultSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureKeyVaultSecretArgs)(nil)).Elem()
}

type AzureKeyVaultSecretInput interface {
	pulumi.Input

	ToAzureKeyVaultSecretOutput() AzureKeyVaultSecretOutput
	ToAzureKeyVaultSecretOutputWithContext(ctx context.Context) AzureKeyVaultSecretOutput
}

func (*AzureKeyVaultSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultSecret)(nil)).Elem()
}

func (i *AzureKeyVaultSecret) ToAzureKeyVaultSecretOutput() AzureKeyVaultSecretOutput {
	return i.ToAzureKeyVaultSecretOutputWithContext(context.Background())
}

func (i *AzureKeyVaultSecret) ToAzureKeyVaultSecretOutputWithContext(ctx context.Context) AzureKeyVaultSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultSecretOutput)
}

// AzureKeyVaultSecretArrayInput is an input type that accepts AzureKeyVaultSecretArray and AzureKeyVaultSecretArrayOutput values.
// You can construct a concrete instance of `AzureKeyVaultSecretArrayInput` via:
//
//	AzureKeyVaultSecretArray{ AzureKeyVaultSecretArgs{...} }
type AzureKeyVaultSecretArrayInput interface {
	pulumi.Input

	ToAzureKeyVaultSecretArrayOutput() AzureKeyVaultSecretArrayOutput
	ToAzureKeyVaultSecretArrayOutputWithContext(context.Context) AzureKeyVaultSecretArrayOutput
}

type AzureKeyVaultSecretArray []AzureKeyVaultSecretInput

func (AzureKeyVaultSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureKeyVaultSecret)(nil)).Elem()
}

func (i AzureKeyVaultSecretArray) ToAzureKeyVaultSecretArrayOutput() AzureKeyVaultSecretArrayOutput {
	return i.ToAzureKeyVaultSecretArrayOutputWithContext(context.Background())
}

func (i AzureKeyVaultSecretArray) ToAzureKeyVaultSecretArrayOutputWithContext(ctx context.Context) AzureKeyVaultSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultSecretArrayOutput)
}

// AzureKeyVaultSecretMapInput is an input type that accepts AzureKeyVaultSecretMap and AzureKeyVaultSecretMapOutput values.
// You can construct a concrete instance of `AzureKeyVaultSecretMapInput` via:
//
//	AzureKeyVaultSecretMap{ "key": AzureKeyVaultSecretArgs{...} }
type AzureKeyVaultSecretMapInput interface {
	pulumi.Input

	ToAzureKeyVaultSecretMapOutput() AzureKeyVaultSecretMapOutput
	ToAzureKeyVaultSecretMapOutputWithContext(context.Context) AzureKeyVaultSecretMapOutput
}

type AzureKeyVaultSecretMap map[string]AzureKeyVaultSecretInput

func (AzureKeyVaultSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureKeyVaultSecret)(nil)).Elem()
}

func (i AzureKeyVaultSecretMap) ToAzureKeyVaultSecretMapOutput() AzureKeyVaultSecretMapOutput {
	return i.ToAzureKeyVaultSecretMapOutputWithContext(context.Background())
}

func (i AzureKeyVaultSecretMap) ToAzureKeyVaultSecretMapOutputWithContext(ctx context.Context) AzureKeyVaultSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultSecretMapOutput)
}

type AzureKeyVaultSecretOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultSecret)(nil)).Elem()
}

func (o AzureKeyVaultSecretOutput) ToAzureKeyVaultSecretOutput() AzureKeyVaultSecretOutput {
	return o
}

func (o AzureKeyVaultSecretOutput) ToAzureKeyVaultSecretOutputWithContext(ctx context.Context) AzureKeyVaultSecretOutput {
	return o
}

// Determines whether the object is enabled.
func (o AzureKeyVaultSecretOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Duplo will generate name of the Key Vault Secret.
func (o AzureKeyVaultSecretOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// The ID of the Key Vault where the Secret should be created.
func (o AzureKeyVaultSecretOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.StringPtrOutput { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
func (o AzureKeyVaultSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Reflects the deletion recovery level currently in effect for secrets in the current vault.
func (o AzureKeyVaultSecretOutput) RecoveryLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.StringOutput { return v.RecoveryLevel }).(pulumi.StringOutput)
}

// The GUID of the tenant that the key vault secret will be created in.
func (o AzureKeyVaultSecretOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Specifies the content type for the Key Vault Secret. Defaults to `duploContainerEnv`.
func (o AzureKeyVaultSecretOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the value of the Key vault secret.
func (o AzureKeyVaultSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

// Base URL of the Azure Key Vault
func (o AzureKeyVaultSecretOutput) VaultBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.StringOutput { return v.VaultBaseUrl }).(pulumi.StringOutput)
}

// The current version of the Key Vault Secret.
func (o AzureKeyVaultSecretOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecret) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type AzureKeyVaultSecretArrayOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureKeyVaultSecret)(nil)).Elem()
}

func (o AzureKeyVaultSecretArrayOutput) ToAzureKeyVaultSecretArrayOutput() AzureKeyVaultSecretArrayOutput {
	return o
}

func (o AzureKeyVaultSecretArrayOutput) ToAzureKeyVaultSecretArrayOutputWithContext(ctx context.Context) AzureKeyVaultSecretArrayOutput {
	return o
}

func (o AzureKeyVaultSecretArrayOutput) Index(i pulumi.IntInput) AzureKeyVaultSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureKeyVaultSecret {
		return vs[0].([]*AzureKeyVaultSecret)[vs[1].(int)]
	}).(AzureKeyVaultSecretOutput)
}

type AzureKeyVaultSecretMapOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureKeyVaultSecret)(nil)).Elem()
}

func (o AzureKeyVaultSecretMapOutput) ToAzureKeyVaultSecretMapOutput() AzureKeyVaultSecretMapOutput {
	return o
}

func (o AzureKeyVaultSecretMapOutput) ToAzureKeyVaultSecretMapOutputWithContext(ctx context.Context) AzureKeyVaultSecretMapOutput {
	return o
}

func (o AzureKeyVaultSecretMapOutput) MapIndex(k pulumi.StringInput) AzureKeyVaultSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureKeyVaultSecret {
		return vs[0].(map[string]*AzureKeyVaultSecret)[vs[1].(string)]
	}).(AzureKeyVaultSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureKeyVaultSecretInput)(nil)).Elem(), &AzureKeyVaultSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureKeyVaultSecretArrayInput)(nil)).Elem(), AzureKeyVaultSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureKeyVaultSecretMapInput)(nil)).Elem(), AzureKeyVaultSecretMap{})
	pulumi.RegisterOutputType(AzureKeyVaultSecretOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultSecretArrayOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultSecretMapOutput{})
}
