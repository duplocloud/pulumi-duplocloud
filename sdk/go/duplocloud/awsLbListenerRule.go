// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsLbListenerRule` manages an AWS Listener Rule in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tenantId := "053a2efa-d03f-4e1d-b3b5-33c04cbed87e"
//			vpcId := "vpc-0ba0667cfc200f060"
//			certArn := "arn:aws:acm:us-west-2:957282632678:certificate/2e882320-5aa5-4b8d-881f-998050178205"
//			alb, err := duplocloud.NewAwsLoadBalancer(ctx, "alb", &duplocloud.AwsLoadBalancerArgs{
//				TenantId:           pulumi.String(tenantId),
//				Name:               pulumi.String("tst-alb"),
//				IsInternal:         pulumi.Bool(true),
//				EnableAccessLogs:   pulumi.Bool(true),
//				DropInvalidHeaders: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			tg, err := duplocloud.NewAwsLbTargetGroup(ctx, "tg", &duplocloud.AwsLbTargetGroupArgs{
//				TenantId:   pulumi.String(tenantId),
//				Name:       pulumi.String("tg1"),
//				Port:       pulumi.Int(80),
//				Protocol:   pulumi.String("HTTP"),
//				VpcId:      pulumi.String(vpcId),
//				TargetType: pulumi.String("instance"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsLoadBalancerListener(ctx, "alb-listener", &duplocloud.AwsLoadBalancerListenerArgs{
//				TenantId:         pulumi.String(tenantId),
//				LoadBalancerName: alb.Name,
//				Port:             pulumi.Int(8443),
//				Protocol:         pulumi.String("HTTPS"),
//				TargetGroupArn:   tg.Arn,
//				CertificateArn:   pulumi.String(certArn),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsLbListenerRule(ctx, "static", &duplocloud.AwsLbListenerRuleArgs{
//				TenantId:    pulumi.String(tenantId),
//				ListenerArn: alb_listener.Arn,
//				Priority:    pulumi.Int(100),
//				Actions: duplocloud.AwsLbListenerRuleActionArray{
//					&duplocloud.AwsLbListenerRuleActionArgs{
//						Type:           pulumi.String("forward"),
//						TargetGroupArn: tg.Arn,
//					},
//				},
//				Conditions: duplocloud.AwsLbListenerRuleConditionArray{
//					&duplocloud.AwsLbListenerRuleConditionArgs{
//						PathPattern: &duplocloud.AwsLbListenerRuleConditionPathPatternArgs{
//							Values: pulumi.StringArray{
//								pulumi.String("/static/*"),
//							},
//						},
//					},
//					&duplocloud.AwsLbListenerRuleConditionArgs{
//						HostHeader: &duplocloud.AwsLbListenerRuleConditionHostHeaderArgs{
//							Values: pulumi.StringArray{
//								pulumi.String("example.com"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Forward action
//			_, err = duplocloud.NewAwsLbListenerRule(ctx, "host_based_weighted_routing", &duplocloud.AwsLbListenerRuleArgs{
//				TenantId:    pulumi.String(tenantId),
//				ListenerArn: alb_listener.Arn,
//				Priority:    pulumi.Int(99),
//				Actions: duplocloud.AwsLbListenerRuleActionArray{
//					&duplocloud.AwsLbListenerRuleActionArgs{
//						Type:           pulumi.String("forward"),
//						TargetGroupArn: tg.Arn,
//					},
//				},
//				Conditions: duplocloud.AwsLbListenerRuleConditionArray{
//					&duplocloud.AwsLbListenerRuleConditionArgs{
//						HostHeader: &duplocloud.AwsLbListenerRuleConditionHostHeaderArgs{
//							Values: pulumi.StringArray{
//								pulumi.String("my-service.*.terraform.io"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Redirect action
//			_, err = duplocloud.NewAwsLbListenerRule(ctx, "redirect_http_to_https", &duplocloud.AwsLbListenerRuleArgs{
//				TenantId:    pulumi.String(tenantId),
//				ListenerArn: alb_listener.Arn,
//				Priority:    pulumi.Int(98),
//				Actions: duplocloud.AwsLbListenerRuleActionArray{
//					&duplocloud.AwsLbListenerRuleActionArgs{
//						Type: pulumi.String("redirect"),
//						Redirect: &duplocloud.AwsLbListenerRuleActionRedirectArgs{
//							Port:       pulumi.String("443"),
//							Protocol:   pulumi.String("HTTPS"),
//							StatusCode: pulumi.String("HTTP_301"),
//						},
//					},
//				},
//				Conditions: duplocloud.AwsLbListenerRuleConditionArray{
//					&duplocloud.AwsLbListenerRuleConditionArgs{
//						HttpHeader: &duplocloud.AwsLbListenerRuleConditionHttpHeaderArgs{
//							HttpHeaderName: pulumi.String("X-Forwarded-For"),
//							Values: pulumi.StringArray{
//								pulumi.String("192.168.1.*"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Fixed-response action
//			_, err = duplocloud.NewAwsLbListenerRule(ctx, "health_check", &duplocloud.AwsLbListenerRuleArgs{
//				TenantId:    pulumi.String(tenantId),
//				ListenerArn: alb_listener.Arn,
//				Priority:    pulumi.Int(97),
//				Actions: duplocloud.AwsLbListenerRuleActionArray{
//					&duplocloud.AwsLbListenerRuleActionArgs{
//						Type: pulumi.String("fixed-response"),
//						FixedResponse: &duplocloud.AwsLbListenerRuleActionFixedResponseArgs{
//							ContentType: pulumi.String("text/plain"),
//							MessageBody: pulumi.String("HEALTHY"),
//							StatusCode:  pulumi.String("200"),
//						},
//					},
//				},
//				Conditions: duplocloud.AwsLbListenerRuleConditionArray{
//					&duplocloud.AwsLbListenerRuleConditionArgs{
//						QueryStrings: duplocloud.AwsLbListenerRuleConditionQueryStringArray{
//							&duplocloud.AwsLbListenerRuleConditionQueryStringArgs{
//								Key:   pulumi.String("health"),
//								Value: pulumi.String("check"),
//							},
//							&duplocloud.AwsLbListenerRuleConditionQueryStringArgs{
//								Key:   pulumi.String("foo"),
//								Value: pulumi.String("bar"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS AWS LB Listener Rule
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *RULE_ARN* is the ARN of the AWS LB Listener Rule
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsLbListenerRule:AwsLbListenerRule listener_rule *TENANT_ID*/*RULE_ARN*
// ```
type AwsLbListenerRule struct {
	pulumi.CustomResourceState

	Actions AwsLbListenerRuleActionArrayOutput `pulumi:"actions"`
	// The ARN of the rule.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match.
	Conditions AwsLbListenerRuleConditionArrayOutput `pulumi:"conditions"`
	// The ARN of the listener to which to attach the rule.
	ListenerArn pulumi.StringOutput `pulumi:"listenerArn"`
	// The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
	Priority pulumi.IntOutput                `pulumi:"priority"`
	Tags     AwsLbListenerRuleTagArrayOutput `pulumi:"tags"`
	// The GUID of the tenant that the aws lb listener rule will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAwsLbListenerRule registers a new resource with the given unique name, arguments, and options.
func NewAwsLbListenerRule(ctx *pulumi.Context,
	name string, args *AwsLbListenerRuleArgs, opts ...pulumi.ResourceOption) (*AwsLbListenerRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Actions == nil {
		return nil, errors.New("invalid value for required argument 'Actions'")
	}
	if args.Conditions == nil {
		return nil, errors.New("invalid value for required argument 'Conditions'")
	}
	if args.ListenerArn == nil {
		return nil, errors.New("invalid value for required argument 'ListenerArn'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsLbListenerRule
	err := ctx.RegisterResource("duplocloud:index/awsLbListenerRule:AwsLbListenerRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsLbListenerRule gets an existing AwsLbListenerRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsLbListenerRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsLbListenerRuleState, opts ...pulumi.ResourceOption) (*AwsLbListenerRule, error) {
	var resource AwsLbListenerRule
	err := ctx.ReadResource("duplocloud:index/awsLbListenerRule:AwsLbListenerRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsLbListenerRule resources.
type awsLbListenerRuleState struct {
	Actions []AwsLbListenerRuleAction `pulumi:"actions"`
	// The ARN of the rule.
	Arn *string `pulumi:"arn"`
	// A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match.
	Conditions []AwsLbListenerRuleCondition `pulumi:"conditions"`
	// The ARN of the listener to which to attach the rule.
	ListenerArn *string `pulumi:"listenerArn"`
	// The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
	Priority *int                   `pulumi:"priority"`
	Tags     []AwsLbListenerRuleTag `pulumi:"tags"`
	// The GUID of the tenant that the aws lb listener rule will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AwsLbListenerRuleState struct {
	Actions AwsLbListenerRuleActionArrayInput
	// The ARN of the rule.
	Arn pulumi.StringPtrInput
	// A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match.
	Conditions AwsLbListenerRuleConditionArrayInput
	// The ARN of the listener to which to attach the rule.
	ListenerArn pulumi.StringPtrInput
	// The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
	Priority pulumi.IntPtrInput
	Tags     AwsLbListenerRuleTagArrayInput
	// The GUID of the tenant that the aws lb listener rule will be created in.
	TenantId pulumi.StringPtrInput
}

func (AwsLbListenerRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLbListenerRuleState)(nil)).Elem()
}

type awsLbListenerRuleArgs struct {
	Actions []AwsLbListenerRuleAction `pulumi:"actions"`
	// A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match.
	Conditions []AwsLbListenerRuleCondition `pulumi:"conditions"`
	// The ARN of the listener to which to attach the rule.
	ListenerArn string `pulumi:"listenerArn"`
	// The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
	Priority *int                   `pulumi:"priority"`
	Tags     []AwsLbListenerRuleTag `pulumi:"tags"`
	// The GUID of the tenant that the aws lb listener rule will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AwsLbListenerRule resource.
type AwsLbListenerRuleArgs struct {
	Actions AwsLbListenerRuleActionArrayInput
	// A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match.
	Conditions AwsLbListenerRuleConditionArrayInput
	// The ARN of the listener to which to attach the rule.
	ListenerArn pulumi.StringInput
	// The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
	Priority pulumi.IntPtrInput
	Tags     AwsLbListenerRuleTagArrayInput
	// The GUID of the tenant that the aws lb listener rule will be created in.
	TenantId pulumi.StringInput
}

func (AwsLbListenerRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLbListenerRuleArgs)(nil)).Elem()
}

type AwsLbListenerRuleInput interface {
	pulumi.Input

	ToAwsLbListenerRuleOutput() AwsLbListenerRuleOutput
	ToAwsLbListenerRuleOutputWithContext(ctx context.Context) AwsLbListenerRuleOutput
}

func (*AwsLbListenerRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLbListenerRule)(nil)).Elem()
}

func (i *AwsLbListenerRule) ToAwsLbListenerRuleOutput() AwsLbListenerRuleOutput {
	return i.ToAwsLbListenerRuleOutputWithContext(context.Background())
}

func (i *AwsLbListenerRule) ToAwsLbListenerRuleOutputWithContext(ctx context.Context) AwsLbListenerRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLbListenerRuleOutput)
}

// AwsLbListenerRuleArrayInput is an input type that accepts AwsLbListenerRuleArray and AwsLbListenerRuleArrayOutput values.
// You can construct a concrete instance of `AwsLbListenerRuleArrayInput` via:
//
//	AwsLbListenerRuleArray{ AwsLbListenerRuleArgs{...} }
type AwsLbListenerRuleArrayInput interface {
	pulumi.Input

	ToAwsLbListenerRuleArrayOutput() AwsLbListenerRuleArrayOutput
	ToAwsLbListenerRuleArrayOutputWithContext(context.Context) AwsLbListenerRuleArrayOutput
}

type AwsLbListenerRuleArray []AwsLbListenerRuleInput

func (AwsLbListenerRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLbListenerRule)(nil)).Elem()
}

func (i AwsLbListenerRuleArray) ToAwsLbListenerRuleArrayOutput() AwsLbListenerRuleArrayOutput {
	return i.ToAwsLbListenerRuleArrayOutputWithContext(context.Background())
}

func (i AwsLbListenerRuleArray) ToAwsLbListenerRuleArrayOutputWithContext(ctx context.Context) AwsLbListenerRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLbListenerRuleArrayOutput)
}

// AwsLbListenerRuleMapInput is an input type that accepts AwsLbListenerRuleMap and AwsLbListenerRuleMapOutput values.
// You can construct a concrete instance of `AwsLbListenerRuleMapInput` via:
//
//	AwsLbListenerRuleMap{ "key": AwsLbListenerRuleArgs{...} }
type AwsLbListenerRuleMapInput interface {
	pulumi.Input

	ToAwsLbListenerRuleMapOutput() AwsLbListenerRuleMapOutput
	ToAwsLbListenerRuleMapOutputWithContext(context.Context) AwsLbListenerRuleMapOutput
}

type AwsLbListenerRuleMap map[string]AwsLbListenerRuleInput

func (AwsLbListenerRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLbListenerRule)(nil)).Elem()
}

func (i AwsLbListenerRuleMap) ToAwsLbListenerRuleMapOutput() AwsLbListenerRuleMapOutput {
	return i.ToAwsLbListenerRuleMapOutputWithContext(context.Background())
}

func (i AwsLbListenerRuleMap) ToAwsLbListenerRuleMapOutputWithContext(ctx context.Context) AwsLbListenerRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLbListenerRuleMapOutput)
}

type AwsLbListenerRuleOutput struct{ *pulumi.OutputState }

func (AwsLbListenerRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLbListenerRule)(nil)).Elem()
}

func (o AwsLbListenerRuleOutput) ToAwsLbListenerRuleOutput() AwsLbListenerRuleOutput {
	return o
}

func (o AwsLbListenerRuleOutput) ToAwsLbListenerRuleOutputWithContext(ctx context.Context) AwsLbListenerRuleOutput {
	return o
}

func (o AwsLbListenerRuleOutput) Actions() AwsLbListenerRuleActionArrayOutput {
	return o.ApplyT(func(v *AwsLbListenerRule) AwsLbListenerRuleActionArrayOutput { return v.Actions }).(AwsLbListenerRuleActionArrayOutput)
}

// The ARN of the rule.
func (o AwsLbListenerRuleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbListenerRule) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match.
func (o AwsLbListenerRuleOutput) Conditions() AwsLbListenerRuleConditionArrayOutput {
	return o.ApplyT(func(v *AwsLbListenerRule) AwsLbListenerRuleConditionArrayOutput { return v.Conditions }).(AwsLbListenerRuleConditionArrayOutput)
}

// The ARN of the listener to which to attach the rule.
func (o AwsLbListenerRuleOutput) ListenerArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbListenerRule) pulumi.StringOutput { return v.ListenerArn }).(pulumi.StringOutput)
}

// The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
func (o AwsLbListenerRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsLbListenerRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

func (o AwsLbListenerRuleOutput) Tags() AwsLbListenerRuleTagArrayOutput {
	return o.ApplyT(func(v *AwsLbListenerRule) AwsLbListenerRuleTagArrayOutput { return v.Tags }).(AwsLbListenerRuleTagArrayOutput)
}

// The GUID of the tenant that the aws lb listener rule will be created in.
func (o AwsLbListenerRuleOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbListenerRule) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AwsLbListenerRuleArrayOutput struct{ *pulumi.OutputState }

func (AwsLbListenerRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLbListenerRule)(nil)).Elem()
}

func (o AwsLbListenerRuleArrayOutput) ToAwsLbListenerRuleArrayOutput() AwsLbListenerRuleArrayOutput {
	return o
}

func (o AwsLbListenerRuleArrayOutput) ToAwsLbListenerRuleArrayOutputWithContext(ctx context.Context) AwsLbListenerRuleArrayOutput {
	return o
}

func (o AwsLbListenerRuleArrayOutput) Index(i pulumi.IntInput) AwsLbListenerRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsLbListenerRule {
		return vs[0].([]*AwsLbListenerRule)[vs[1].(int)]
	}).(AwsLbListenerRuleOutput)
}

type AwsLbListenerRuleMapOutput struct{ *pulumi.OutputState }

func (AwsLbListenerRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLbListenerRule)(nil)).Elem()
}

func (o AwsLbListenerRuleMapOutput) ToAwsLbListenerRuleMapOutput() AwsLbListenerRuleMapOutput {
	return o
}

func (o AwsLbListenerRuleMapOutput) ToAwsLbListenerRuleMapOutputWithContext(ctx context.Context) AwsLbListenerRuleMapOutput {
	return o
}

func (o AwsLbListenerRuleMapOutput) MapIndex(k pulumi.StringInput) AwsLbListenerRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsLbListenerRule {
		return vs[0].(map[string]*AwsLbListenerRule)[vs[1].(string)]
	}).(AwsLbListenerRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLbListenerRuleInput)(nil)).Elem(), &AwsLbListenerRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLbListenerRuleArrayInput)(nil)).Elem(), AwsLbListenerRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLbListenerRuleMapInput)(nil)).Elem(), AwsLbListenerRuleMap{})
	pulumi.RegisterOutputType(AwsLbListenerRuleOutput{})
	pulumi.RegisterOutputType(AwsLbListenerRuleArrayOutput{})
	pulumi.RegisterOutputType(AwsLbListenerRuleMapOutput{})
}
