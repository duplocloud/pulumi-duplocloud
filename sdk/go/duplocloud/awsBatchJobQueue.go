// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsBatchJobQueue` manages an aws batch Job queue in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tenantId := "d186700c-ad18-4525-9593-aad467c843ff"
//			bsp, err := duplocloud.NewAwsBatchSchedulingPolicy(ctx, "bsp", &duplocloud.AwsBatchSchedulingPolicyArgs{
//				TenantId: pulumi.String(tenantId),
//				Name:     pulumi.String("rtt"),
//				FairSharePolicy: &duplocloud.AwsBatchSchedulingPolicyFairSharePolicyArgs{
//					ComputeReservation: pulumi.Int(2),
//					ShareDecaySeconds:  pulumi.Int(3600),
//					ShareDistributions: duplocloud.AwsBatchSchedulingPolicyFairSharePolicyShareDistributionArray{
//						&duplocloud.AwsBatchSchedulingPolicyFairSharePolicyShareDistributionArgs{
//							ShareIdentifier: pulumi.String("A1*"),
//							WeightFactor:    pulumi.Float64(0.1),
//						},
//						&duplocloud.AwsBatchSchedulingPolicyFairSharePolicyShareDistributionArgs{
//							ShareIdentifier: pulumi.String("A2"),
//							WeightFactor:    pulumi.Float64(0.2),
//						},
//					},
//				},
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("Example Batch Scheduling Policy"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			bce, err := duplocloud.NewAwsBatchComputeEnvironment(ctx, "bce", &duplocloud.AwsBatchComputeEnvironmentArgs{
//				TenantId: pulumi.String(tenantId),
//				Name:     pulumi.String("sample"),
//				ComputeResources: &duplocloud.AwsBatchComputeEnvironmentComputeResourcesArgs{
//					Ec2Configuration: &duplocloud.AwsBatchComputeEnvironmentComputeResourcesEc2ConfigurationArgs{
//						ImageType: pulumi.String("ECS_AL2"),
//					},
//					InstanceTypes: pulumi.StringArray{
//						pulumi.String("optimal"),
//					},
//					AllocationStrategy: pulumi.String("BEST_FIT"),
//					MaxVcpus:           pulumi.Int(8),
//					MinVcpus:           pulumi.Int(1),
//					DesiredVcpus:       pulumi.Int(2),
//					BidPercentage:      pulumi.Int(100),
//					Type:               pulumi.String("EC2"),
//				},
//				Type: pulumi.String("MANAGED"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsBatchJobQueue(ctx, "jq", &duplocloud.AwsBatchJobQueueArgs{
//				TenantId:            pulumi.String(tenantId),
//				Name:                pulumi.String("tf_job_queue"),
//				SchedulingPolicyArn: bsp.Arn,
//				State:               pulumi.String("ENABLED"),
//				Priority:            pulumi.Int(1),
//				ComputeEnvironments: pulumi.StringArray{
//					bce.Arn,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS Batch Job Queue
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *NAME* is the short name of Job Queue
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsBatchJobQueue:AwsBatchJobQueue jq *TENANT_ID*/*NAME*
// ```
type AwsBatchJobQueue struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name of the Job queue.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Specifies the set of compute environments mapped to a job queue and their order. The position of the compute environments in the list will dictate the order.
	ComputeEnvironments pulumi.StringArrayOutput `pulumi:"computeEnvironments"`
	// The full name of the Job queue.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// Specifies the name of the Job queue.
	Name pulumi.StringOutput `pulumi:"name"`
	// The priority of the job queue. Job queues with a higher priority are evaluated first when associated with the same compute environment.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn pulumi.StringOutput `pulumi:"schedulingPolicyArn"`
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State pulumi.StringOutput `pulumi:"state"`
	// Key-value map of resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The GUID of the tenant that the aws batch Job queue will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Defaults to `true`.
	WaitForDeployment pulumi.BoolPtrOutput `pulumi:"waitForDeployment"`
}

// NewAwsBatchJobQueue registers a new resource with the given unique name, arguments, and options.
func NewAwsBatchJobQueue(ctx *pulumi.Context,
	name string, args *AwsBatchJobQueueArgs, opts ...pulumi.ResourceOption) (*AwsBatchJobQueue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ComputeEnvironments == nil {
		return nil, errors.New("invalid value for required argument 'ComputeEnvironments'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.State == nil {
		return nil, errors.New("invalid value for required argument 'State'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsBatchJobQueue
	err := ctx.RegisterResource("duplocloud:index/awsBatchJobQueue:AwsBatchJobQueue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsBatchJobQueue gets an existing AwsBatchJobQueue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsBatchJobQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsBatchJobQueueState, opts ...pulumi.ResourceOption) (*AwsBatchJobQueue, error) {
	var resource AwsBatchJobQueue
	err := ctx.ReadResource("duplocloud:index/awsBatchJobQueue:AwsBatchJobQueue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsBatchJobQueue resources.
type awsBatchJobQueueState struct {
	// The Amazon Resource Name of the Job queue.
	Arn *string `pulumi:"arn"`
	// Specifies the set of compute environments mapped to a job queue and their order. The position of the compute environments in the list will dictate the order.
	ComputeEnvironments []string `pulumi:"computeEnvironments"`
	// The full name of the Job queue.
	Fullname *string `pulumi:"fullname"`
	// Specifies the name of the Job queue.
	Name *string `pulumi:"name"`
	// The priority of the job queue. Job queues with a higher priority are evaluated first when associated with the same compute environment.
	Priority *int `pulumi:"priority"`
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn *string `pulumi:"schedulingPolicyArn"`
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State *string `pulumi:"state"`
	// Key-value map of resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The GUID of the tenant that the aws batch Job queue will be created in.
	TenantId *string `pulumi:"tenantId"`
	// Defaults to `true`.
	WaitForDeployment *bool `pulumi:"waitForDeployment"`
}

type AwsBatchJobQueueState struct {
	// The Amazon Resource Name of the Job queue.
	Arn pulumi.StringPtrInput
	// Specifies the set of compute environments mapped to a job queue and their order. The position of the compute environments in the list will dictate the order.
	ComputeEnvironments pulumi.StringArrayInput
	// The full name of the Job queue.
	Fullname pulumi.StringPtrInput
	// Specifies the name of the Job queue.
	Name pulumi.StringPtrInput
	// The priority of the job queue. Job queues with a higher priority are evaluated first when associated with the same compute environment.
	Priority pulumi.IntPtrInput
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn pulumi.StringPtrInput
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State pulumi.StringPtrInput
	// Key-value map of resource tags.
	Tags pulumi.StringMapInput
	// The GUID of the tenant that the aws batch Job queue will be created in.
	TenantId pulumi.StringPtrInput
	// Defaults to `true`.
	WaitForDeployment pulumi.BoolPtrInput
}

func (AwsBatchJobQueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsBatchJobQueueState)(nil)).Elem()
}

type awsBatchJobQueueArgs struct {
	// Specifies the set of compute environments mapped to a job queue and their order. The position of the compute environments in the list will dictate the order.
	ComputeEnvironments []string `pulumi:"computeEnvironments"`
	// Specifies the name of the Job queue.
	Name *string `pulumi:"name"`
	// The priority of the job queue. Job queues with a higher priority are evaluated first when associated with the same compute environment.
	Priority int `pulumi:"priority"`
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn *string `pulumi:"schedulingPolicyArn"`
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State string `pulumi:"state"`
	// Key-value map of resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The GUID of the tenant that the aws batch Job queue will be created in.
	TenantId string `pulumi:"tenantId"`
	// Defaults to `true`.
	WaitForDeployment *bool `pulumi:"waitForDeployment"`
}

// The set of arguments for constructing a AwsBatchJobQueue resource.
type AwsBatchJobQueueArgs struct {
	// Specifies the set of compute environments mapped to a job queue and their order. The position of the compute environments in the list will dictate the order.
	ComputeEnvironments pulumi.StringArrayInput
	// Specifies the name of the Job queue.
	Name pulumi.StringPtrInput
	// The priority of the job queue. Job queues with a higher priority are evaluated first when associated with the same compute environment.
	Priority pulumi.IntInput
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn pulumi.StringPtrInput
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State pulumi.StringInput
	// Key-value map of resource tags.
	Tags pulumi.StringMapInput
	// The GUID of the tenant that the aws batch Job queue will be created in.
	TenantId pulumi.StringInput
	// Defaults to `true`.
	WaitForDeployment pulumi.BoolPtrInput
}

func (AwsBatchJobQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsBatchJobQueueArgs)(nil)).Elem()
}

type AwsBatchJobQueueInput interface {
	pulumi.Input

	ToAwsBatchJobQueueOutput() AwsBatchJobQueueOutput
	ToAwsBatchJobQueueOutputWithContext(ctx context.Context) AwsBatchJobQueueOutput
}

func (*AwsBatchJobQueue) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsBatchJobQueue)(nil)).Elem()
}

func (i *AwsBatchJobQueue) ToAwsBatchJobQueueOutput() AwsBatchJobQueueOutput {
	return i.ToAwsBatchJobQueueOutputWithContext(context.Background())
}

func (i *AwsBatchJobQueue) ToAwsBatchJobQueueOutputWithContext(ctx context.Context) AwsBatchJobQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsBatchJobQueueOutput)
}

// AwsBatchJobQueueArrayInput is an input type that accepts AwsBatchJobQueueArray and AwsBatchJobQueueArrayOutput values.
// You can construct a concrete instance of `AwsBatchJobQueueArrayInput` via:
//
//	AwsBatchJobQueueArray{ AwsBatchJobQueueArgs{...} }
type AwsBatchJobQueueArrayInput interface {
	pulumi.Input

	ToAwsBatchJobQueueArrayOutput() AwsBatchJobQueueArrayOutput
	ToAwsBatchJobQueueArrayOutputWithContext(context.Context) AwsBatchJobQueueArrayOutput
}

type AwsBatchJobQueueArray []AwsBatchJobQueueInput

func (AwsBatchJobQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsBatchJobQueue)(nil)).Elem()
}

func (i AwsBatchJobQueueArray) ToAwsBatchJobQueueArrayOutput() AwsBatchJobQueueArrayOutput {
	return i.ToAwsBatchJobQueueArrayOutputWithContext(context.Background())
}

func (i AwsBatchJobQueueArray) ToAwsBatchJobQueueArrayOutputWithContext(ctx context.Context) AwsBatchJobQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsBatchJobQueueArrayOutput)
}

// AwsBatchJobQueueMapInput is an input type that accepts AwsBatchJobQueueMap and AwsBatchJobQueueMapOutput values.
// You can construct a concrete instance of `AwsBatchJobQueueMapInput` via:
//
//	AwsBatchJobQueueMap{ "key": AwsBatchJobQueueArgs{...} }
type AwsBatchJobQueueMapInput interface {
	pulumi.Input

	ToAwsBatchJobQueueMapOutput() AwsBatchJobQueueMapOutput
	ToAwsBatchJobQueueMapOutputWithContext(context.Context) AwsBatchJobQueueMapOutput
}

type AwsBatchJobQueueMap map[string]AwsBatchJobQueueInput

func (AwsBatchJobQueueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsBatchJobQueue)(nil)).Elem()
}

func (i AwsBatchJobQueueMap) ToAwsBatchJobQueueMapOutput() AwsBatchJobQueueMapOutput {
	return i.ToAwsBatchJobQueueMapOutputWithContext(context.Background())
}

func (i AwsBatchJobQueueMap) ToAwsBatchJobQueueMapOutputWithContext(ctx context.Context) AwsBatchJobQueueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsBatchJobQueueMapOutput)
}

type AwsBatchJobQueueOutput struct{ *pulumi.OutputState }

func (AwsBatchJobQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsBatchJobQueue)(nil)).Elem()
}

func (o AwsBatchJobQueueOutput) ToAwsBatchJobQueueOutput() AwsBatchJobQueueOutput {
	return o
}

func (o AwsBatchJobQueueOutput) ToAwsBatchJobQueueOutputWithContext(ctx context.Context) AwsBatchJobQueueOutput {
	return o
}

// The Amazon Resource Name of the Job queue.
func (o AwsBatchJobQueueOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Specifies the set of compute environments mapped to a job queue and their order. The position of the compute environments in the list will dictate the order.
func (o AwsBatchJobQueueOutput) ComputeEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.StringArrayOutput { return v.ComputeEnvironments }).(pulumi.StringArrayOutput)
}

// The full name of the Job queue.
func (o AwsBatchJobQueueOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// Specifies the name of the Job queue.
func (o AwsBatchJobQueueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The priority of the job queue. Job queues with a higher priority are evaluated first when associated with the same compute environment.
func (o AwsBatchJobQueueOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
func (o AwsBatchJobQueueOutput) SchedulingPolicyArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.StringOutput { return v.SchedulingPolicyArn }).(pulumi.StringOutput)
}

// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
func (o AwsBatchJobQueueOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Key-value map of resource tags.
func (o AwsBatchJobQueueOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The GUID of the tenant that the aws batch Job queue will be created in.
func (o AwsBatchJobQueueOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Defaults to `true`.
func (o AwsBatchJobQueueOutput) WaitForDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsBatchJobQueue) pulumi.BoolPtrOutput { return v.WaitForDeployment }).(pulumi.BoolPtrOutput)
}

type AwsBatchJobQueueArrayOutput struct{ *pulumi.OutputState }

func (AwsBatchJobQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsBatchJobQueue)(nil)).Elem()
}

func (o AwsBatchJobQueueArrayOutput) ToAwsBatchJobQueueArrayOutput() AwsBatchJobQueueArrayOutput {
	return o
}

func (o AwsBatchJobQueueArrayOutput) ToAwsBatchJobQueueArrayOutputWithContext(ctx context.Context) AwsBatchJobQueueArrayOutput {
	return o
}

func (o AwsBatchJobQueueArrayOutput) Index(i pulumi.IntInput) AwsBatchJobQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsBatchJobQueue {
		return vs[0].([]*AwsBatchJobQueue)[vs[1].(int)]
	}).(AwsBatchJobQueueOutput)
}

type AwsBatchJobQueueMapOutput struct{ *pulumi.OutputState }

func (AwsBatchJobQueueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsBatchJobQueue)(nil)).Elem()
}

func (o AwsBatchJobQueueMapOutput) ToAwsBatchJobQueueMapOutput() AwsBatchJobQueueMapOutput {
	return o
}

func (o AwsBatchJobQueueMapOutput) ToAwsBatchJobQueueMapOutputWithContext(ctx context.Context) AwsBatchJobQueueMapOutput {
	return o
}

func (o AwsBatchJobQueueMapOutput) MapIndex(k pulumi.StringInput) AwsBatchJobQueueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsBatchJobQueue {
		return vs[0].(map[string]*AwsBatchJobQueue)[vs[1].(string)]
	}).(AwsBatchJobQueueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsBatchJobQueueInput)(nil)).Elem(), &AwsBatchJobQueue{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsBatchJobQueueArrayInput)(nil)).Elem(), AwsBatchJobQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsBatchJobQueueMapInput)(nil)).Elem(), AwsBatchJobQueueMap{})
	pulumi.RegisterOutputType(AwsBatchJobQueueOutput{})
	pulumi.RegisterOutputType(AwsBatchJobQueueArrayOutput{})
	pulumi.RegisterOutputType(AwsBatchJobQueueMapOutput{})
}
