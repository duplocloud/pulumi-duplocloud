// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `InfrastructureOnprem` adds support to integrate on premise infra into duplocloud
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// ## Create a DuploCloud onpremise infrastructure named onprem with eks vendor
//			// ## Solution:
//			_, err := duplocloud.NewInfrastructureOnprem(ctx, "infra", &duplocloud.InfrastructureOnpremArgs{
//				InfraName:                       pulumi.String("onprem"),
//				ClusterName:                     pulumi.String("onprem"),
//				Region:                          pulumi.String("us-west-2"),
//				Azcount:                         pulumi.Int(2),
//				EnableK8Cluster:                 pulumi.Bool(true),
//				Vendor:                          pulumi.Int(2),
//				ClusterEndpoint:                 pulumi.String("https://BB3C2589BAE34AD680060B5FDBA12BA1.gr7.us-west-2.eks.amazonaws.com"),
//				ApiToken:                        pulumi.String("<api-token>"),
//				ClusterCertificateAuthorityData: pulumi.String("<certificate-authority-data>"),
//				DataCenter:                      pulumi.String("us"),
//				EksConfig: &duplocloud.InfrastructureOnpremEksConfigArgs{
//					PrivateSubnets: pulumi.StringArray{
//						pulumi.String("subnet-06c1b3a338ace60ce"),
//						pulumi.String("subnet-09252308e1a093bda"),
//					},
//					PublicSubnets: pulumi.StringArray{
//						pulumi.String("subnet-0d5b3c3a3ae9d129f"),
//						pulumi.String("subnet-065ab3e894092dd1c"),
//					},
//					IngressSecurityGroupIds: pulumi.StringArray{
//						pulumi.String("sg-0331e348b886ed796"),
//					},
//					VpcId: pulumi.String("vpc-0961fc6b0903ad63f"),
//				},
//				CustomDatas: duplocloud.InfrastructureOnpremCustomDataArray{
//					&duplocloud.InfrastructureOnpremCustomDataArgs{
//						Key:   pulumi.String("K8sVersion"),
//						Value: pulumi.String("1.31"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing infrastructure
//
//   - *NAME* is the infrastructure name
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/infrastructureOnprem:InfrastructureOnprem myinfra v2/admin/Infrastructure/OnPremises/*NAME*
// ```
type InfrastructureOnprem struct {
	pulumi.CustomResourceState

	// The cloud account ID. Used with GCP cloud
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Token to access cluster API's
	ApiToken pulumi.StringOutput `pulumi:"apiToken"`
	// The number of availability zones.  Must be one of: `2`, `3`, or `4`. This is applicable only for AWS.
	Azcount pulumi.IntPtrOutput `pulumi:"azcount"`
	// Required to validate API server certificates and kubelet client certificates
	ClusterCertificateAuthorityData pulumi.StringOutput `pulumi:"clusterCertificateAuthorityData"`
	// Endpoint URL of K8 cluster
	ClusterEndpoint pulumi.StringOutput `pulumi:"clusterEndpoint"`
	// Name of the on premise k8 cluster
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// A list of configuration settings to apply on creation, expressed as key / value pairs.
	CustomDatas InfrastructureOnpremCustomDataArrayOutput `pulumi:"customDatas"`
	// Datacenter name of the onpremise cluster
	DataCenter pulumi.StringOutput `pulumi:"dataCenter"`
	// EKS configuration for on premise infra if vendor is selected as 2
	EksConfig InfrastructureOnpremEksConfigPtrOutput `pulumi:"eksConfig"`
	// Whether or not to provision a kubernetes cluster.
	EnableK8Cluster pulumi.BoolOutput `pulumi:"enableK8Cluster"`
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName pulumi.StringOutput `pulumi:"infraName"`
	// The cloud provider region.  The Duplo portal must have already been configured to support this region.
	Region pulumi.StringOutput `pulumi:"region"`
	// The status of the infrastructure.
	Status pulumi.StringOutput `pulumi:"status"`
	// Type of on premise vendor \n\n0 - Rancher\n\n1 - Generic\n\n2 - EKS\n\n
	Vendor pulumi.IntOutput `pulumi:"vendor"`
}

// NewInfrastructureOnprem registers a new resource with the given unique name, arguments, and options.
func NewInfrastructureOnprem(ctx *pulumi.Context,
	name string, args *InfrastructureOnpremArgs, opts ...pulumi.ResourceOption) (*InfrastructureOnprem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiToken == nil {
		return nil, errors.New("invalid value for required argument 'ApiToken'")
	}
	if args.ClusterCertificateAuthorityData == nil {
		return nil, errors.New("invalid value for required argument 'ClusterCertificateAuthorityData'")
	}
	if args.ClusterEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'ClusterEndpoint'")
	}
	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.DataCenter == nil {
		return nil, errors.New("invalid value for required argument 'DataCenter'")
	}
	if args.EnableK8Cluster == nil {
		return nil, errors.New("invalid value for required argument 'EnableK8Cluster'")
	}
	if args.InfraName == nil {
		return nil, errors.New("invalid value for required argument 'InfraName'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Vendor == nil {
		return nil, errors.New("invalid value for required argument 'Vendor'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InfrastructureOnprem
	err := ctx.RegisterResource("duplocloud:index/infrastructureOnprem:InfrastructureOnprem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInfrastructureOnprem gets an existing InfrastructureOnprem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInfrastructureOnprem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InfrastructureOnpremState, opts ...pulumi.ResourceOption) (*InfrastructureOnprem, error) {
	var resource InfrastructureOnprem
	err := ctx.ReadResource("duplocloud:index/infrastructureOnprem:InfrastructureOnprem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InfrastructureOnprem resources.
type infrastructureOnpremState struct {
	// The cloud account ID. Used with GCP cloud
	AccountId *string `pulumi:"accountId"`
	// Token to access cluster API's
	ApiToken *string `pulumi:"apiToken"`
	// The number of availability zones.  Must be one of: `2`, `3`, or `4`. This is applicable only for AWS.
	Azcount *int `pulumi:"azcount"`
	// Required to validate API server certificates and kubelet client certificates
	ClusterCertificateAuthorityData *string `pulumi:"clusterCertificateAuthorityData"`
	// Endpoint URL of K8 cluster
	ClusterEndpoint *string `pulumi:"clusterEndpoint"`
	// Name of the on premise k8 cluster
	ClusterName *string `pulumi:"clusterName"`
	// A list of configuration settings to apply on creation, expressed as key / value pairs.
	CustomDatas []InfrastructureOnpremCustomData `pulumi:"customDatas"`
	// Datacenter name of the onpremise cluster
	DataCenter *string `pulumi:"dataCenter"`
	// EKS configuration for on premise infra if vendor is selected as 2
	EksConfig *InfrastructureOnpremEksConfig `pulumi:"eksConfig"`
	// Whether or not to provision a kubernetes cluster.
	EnableK8Cluster *bool `pulumi:"enableK8Cluster"`
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName *string `pulumi:"infraName"`
	// The cloud provider region.  The Duplo portal must have already been configured to support this region.
	Region *string `pulumi:"region"`
	// The status of the infrastructure.
	Status *string `pulumi:"status"`
	// Type of on premise vendor \n\n0 - Rancher\n\n1 - Generic\n\n2 - EKS\n\n
	Vendor *int `pulumi:"vendor"`
}

type InfrastructureOnpremState struct {
	// The cloud account ID. Used with GCP cloud
	AccountId pulumi.StringPtrInput
	// Token to access cluster API's
	ApiToken pulumi.StringPtrInput
	// The number of availability zones.  Must be one of: `2`, `3`, or `4`. This is applicable only for AWS.
	Azcount pulumi.IntPtrInput
	// Required to validate API server certificates and kubelet client certificates
	ClusterCertificateAuthorityData pulumi.StringPtrInput
	// Endpoint URL of K8 cluster
	ClusterEndpoint pulumi.StringPtrInput
	// Name of the on premise k8 cluster
	ClusterName pulumi.StringPtrInput
	// A list of configuration settings to apply on creation, expressed as key / value pairs.
	CustomDatas InfrastructureOnpremCustomDataArrayInput
	// Datacenter name of the onpremise cluster
	DataCenter pulumi.StringPtrInput
	// EKS configuration for on premise infra if vendor is selected as 2
	EksConfig InfrastructureOnpremEksConfigPtrInput
	// Whether or not to provision a kubernetes cluster.
	EnableK8Cluster pulumi.BoolPtrInput
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName pulumi.StringPtrInput
	// The cloud provider region.  The Duplo portal must have already been configured to support this region.
	Region pulumi.StringPtrInput
	// The status of the infrastructure.
	Status pulumi.StringPtrInput
	// Type of on premise vendor \n\n0 - Rancher\n\n1 - Generic\n\n2 - EKS\n\n
	Vendor pulumi.IntPtrInput
}

func (InfrastructureOnpremState) ElementType() reflect.Type {
	return reflect.TypeOf((*infrastructureOnpremState)(nil)).Elem()
}

type infrastructureOnpremArgs struct {
	// The cloud account ID. Used with GCP cloud
	AccountId *string `pulumi:"accountId"`
	// Token to access cluster API's
	ApiToken string `pulumi:"apiToken"`
	// The number of availability zones.  Must be one of: `2`, `3`, or `4`. This is applicable only for AWS.
	Azcount *int `pulumi:"azcount"`
	// Required to validate API server certificates and kubelet client certificates
	ClusterCertificateAuthorityData string `pulumi:"clusterCertificateAuthorityData"`
	// Endpoint URL of K8 cluster
	ClusterEndpoint string `pulumi:"clusterEndpoint"`
	// Name of the on premise k8 cluster
	ClusterName string `pulumi:"clusterName"`
	// A list of configuration settings to apply on creation, expressed as key / value pairs.
	CustomDatas []InfrastructureOnpremCustomData `pulumi:"customDatas"`
	// Datacenter name of the onpremise cluster
	DataCenter string `pulumi:"dataCenter"`
	// EKS configuration for on premise infra if vendor is selected as 2
	EksConfig *InfrastructureOnpremEksConfig `pulumi:"eksConfig"`
	// Whether or not to provision a kubernetes cluster.
	EnableK8Cluster bool `pulumi:"enableK8Cluster"`
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName string `pulumi:"infraName"`
	// The cloud provider region.  The Duplo portal must have already been configured to support this region.
	Region string `pulumi:"region"`
	// Type of on premise vendor \n\n0 - Rancher\n\n1 - Generic\n\n2 - EKS\n\n
	Vendor int `pulumi:"vendor"`
}

// The set of arguments for constructing a InfrastructureOnprem resource.
type InfrastructureOnpremArgs struct {
	// The cloud account ID. Used with GCP cloud
	AccountId pulumi.StringPtrInput
	// Token to access cluster API's
	ApiToken pulumi.StringInput
	// The number of availability zones.  Must be one of: `2`, `3`, or `4`. This is applicable only for AWS.
	Azcount pulumi.IntPtrInput
	// Required to validate API server certificates and kubelet client certificates
	ClusterCertificateAuthorityData pulumi.StringInput
	// Endpoint URL of K8 cluster
	ClusterEndpoint pulumi.StringInput
	// Name of the on premise k8 cluster
	ClusterName pulumi.StringInput
	// A list of configuration settings to apply on creation, expressed as key / value pairs.
	CustomDatas InfrastructureOnpremCustomDataArrayInput
	// Datacenter name of the onpremise cluster
	DataCenter pulumi.StringInput
	// EKS configuration for on premise infra if vendor is selected as 2
	EksConfig InfrastructureOnpremEksConfigPtrInput
	// Whether or not to provision a kubernetes cluster.
	EnableK8Cluster pulumi.BoolInput
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName pulumi.StringInput
	// The cloud provider region.  The Duplo portal must have already been configured to support this region.
	Region pulumi.StringInput
	// Type of on premise vendor \n\n0 - Rancher\n\n1 - Generic\n\n2 - EKS\n\n
	Vendor pulumi.IntInput
}

func (InfrastructureOnpremArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*infrastructureOnpremArgs)(nil)).Elem()
}

type InfrastructureOnpremInput interface {
	pulumi.Input

	ToInfrastructureOnpremOutput() InfrastructureOnpremOutput
	ToInfrastructureOnpremOutputWithContext(ctx context.Context) InfrastructureOnpremOutput
}

func (*InfrastructureOnprem) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureOnprem)(nil)).Elem()
}

func (i *InfrastructureOnprem) ToInfrastructureOnpremOutput() InfrastructureOnpremOutput {
	return i.ToInfrastructureOnpremOutputWithContext(context.Background())
}

func (i *InfrastructureOnprem) ToInfrastructureOnpremOutputWithContext(ctx context.Context) InfrastructureOnpremOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureOnpremOutput)
}

// InfrastructureOnpremArrayInput is an input type that accepts InfrastructureOnpremArray and InfrastructureOnpremArrayOutput values.
// You can construct a concrete instance of `InfrastructureOnpremArrayInput` via:
//
//	InfrastructureOnpremArray{ InfrastructureOnpremArgs{...} }
type InfrastructureOnpremArrayInput interface {
	pulumi.Input

	ToInfrastructureOnpremArrayOutput() InfrastructureOnpremArrayOutput
	ToInfrastructureOnpremArrayOutputWithContext(context.Context) InfrastructureOnpremArrayOutput
}

type InfrastructureOnpremArray []InfrastructureOnpremInput

func (InfrastructureOnpremArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfrastructureOnprem)(nil)).Elem()
}

func (i InfrastructureOnpremArray) ToInfrastructureOnpremArrayOutput() InfrastructureOnpremArrayOutput {
	return i.ToInfrastructureOnpremArrayOutputWithContext(context.Background())
}

func (i InfrastructureOnpremArray) ToInfrastructureOnpremArrayOutputWithContext(ctx context.Context) InfrastructureOnpremArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureOnpremArrayOutput)
}

// InfrastructureOnpremMapInput is an input type that accepts InfrastructureOnpremMap and InfrastructureOnpremMapOutput values.
// You can construct a concrete instance of `InfrastructureOnpremMapInput` via:
//
//	InfrastructureOnpremMap{ "key": InfrastructureOnpremArgs{...} }
type InfrastructureOnpremMapInput interface {
	pulumi.Input

	ToInfrastructureOnpremMapOutput() InfrastructureOnpremMapOutput
	ToInfrastructureOnpremMapOutputWithContext(context.Context) InfrastructureOnpremMapOutput
}

type InfrastructureOnpremMap map[string]InfrastructureOnpremInput

func (InfrastructureOnpremMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfrastructureOnprem)(nil)).Elem()
}

func (i InfrastructureOnpremMap) ToInfrastructureOnpremMapOutput() InfrastructureOnpremMapOutput {
	return i.ToInfrastructureOnpremMapOutputWithContext(context.Background())
}

func (i InfrastructureOnpremMap) ToInfrastructureOnpremMapOutputWithContext(ctx context.Context) InfrastructureOnpremMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureOnpremMapOutput)
}

type InfrastructureOnpremOutput struct{ *pulumi.OutputState }

func (InfrastructureOnpremOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureOnprem)(nil)).Elem()
}

func (o InfrastructureOnpremOutput) ToInfrastructureOnpremOutput() InfrastructureOnpremOutput {
	return o
}

func (o InfrastructureOnpremOutput) ToInfrastructureOnpremOutputWithContext(ctx context.Context) InfrastructureOnpremOutput {
	return o
}

// The cloud account ID. Used with GCP cloud
func (o InfrastructureOnpremOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Token to access cluster API's
func (o InfrastructureOnpremOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.StringOutput { return v.ApiToken }).(pulumi.StringOutput)
}

// The number of availability zones.  Must be one of: `2`, `3`, or `4`. This is applicable only for AWS.
func (o InfrastructureOnpremOutput) Azcount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.IntPtrOutput { return v.Azcount }).(pulumi.IntPtrOutput)
}

// Required to validate API server certificates and kubelet client certificates
func (o InfrastructureOnpremOutput) ClusterCertificateAuthorityData() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.StringOutput { return v.ClusterCertificateAuthorityData }).(pulumi.StringOutput)
}

// Endpoint URL of K8 cluster
func (o InfrastructureOnpremOutput) ClusterEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.StringOutput { return v.ClusterEndpoint }).(pulumi.StringOutput)
}

// Name of the on premise k8 cluster
func (o InfrastructureOnpremOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.StringOutput { return v.ClusterName }).(pulumi.StringOutput)
}

// A list of configuration settings to apply on creation, expressed as key / value pairs.
func (o InfrastructureOnpremOutput) CustomDatas() InfrastructureOnpremCustomDataArrayOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) InfrastructureOnpremCustomDataArrayOutput { return v.CustomDatas }).(InfrastructureOnpremCustomDataArrayOutput)
}

// Datacenter name of the onpremise cluster
func (o InfrastructureOnpremOutput) DataCenter() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.StringOutput { return v.DataCenter }).(pulumi.StringOutput)
}

// EKS configuration for on premise infra if vendor is selected as 2
func (o InfrastructureOnpremOutput) EksConfig() InfrastructureOnpremEksConfigPtrOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) InfrastructureOnpremEksConfigPtrOutput { return v.EksConfig }).(InfrastructureOnpremEksConfigPtrOutput)
}

// Whether or not to provision a kubernetes cluster.
func (o InfrastructureOnpremOutput) EnableK8Cluster() pulumi.BoolOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.BoolOutput { return v.EnableK8Cluster }).(pulumi.BoolOutput)
}

// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
func (o InfrastructureOnpremOutput) InfraName() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.StringOutput { return v.InfraName }).(pulumi.StringOutput)
}

// The cloud provider region.  The Duplo portal must have already been configured to support this region.
func (o InfrastructureOnpremOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The status of the infrastructure.
func (o InfrastructureOnpremOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Type of on premise vendor \n\n0 - Rancher\n\n1 - Generic\n\n2 - EKS\n\n
func (o InfrastructureOnpremOutput) Vendor() pulumi.IntOutput {
	return o.ApplyT(func(v *InfrastructureOnprem) pulumi.IntOutput { return v.Vendor }).(pulumi.IntOutput)
}

type InfrastructureOnpremArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureOnpremArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfrastructureOnprem)(nil)).Elem()
}

func (o InfrastructureOnpremArrayOutput) ToInfrastructureOnpremArrayOutput() InfrastructureOnpremArrayOutput {
	return o
}

func (o InfrastructureOnpremArrayOutput) ToInfrastructureOnpremArrayOutputWithContext(ctx context.Context) InfrastructureOnpremArrayOutput {
	return o
}

func (o InfrastructureOnpremArrayOutput) Index(i pulumi.IntInput) InfrastructureOnpremOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InfrastructureOnprem {
		return vs[0].([]*InfrastructureOnprem)[vs[1].(int)]
	}).(InfrastructureOnpremOutput)
}

type InfrastructureOnpremMapOutput struct{ *pulumi.OutputState }

func (InfrastructureOnpremMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfrastructureOnprem)(nil)).Elem()
}

func (o InfrastructureOnpremMapOutput) ToInfrastructureOnpremMapOutput() InfrastructureOnpremMapOutput {
	return o
}

func (o InfrastructureOnpremMapOutput) ToInfrastructureOnpremMapOutputWithContext(ctx context.Context) InfrastructureOnpremMapOutput {
	return o
}

func (o InfrastructureOnpremMapOutput) MapIndex(k pulumi.StringInput) InfrastructureOnpremOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InfrastructureOnprem {
		return vs[0].(map[string]*InfrastructureOnprem)[vs[1].(string)]
	}).(InfrastructureOnpremOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureOnpremInput)(nil)).Elem(), &InfrastructureOnprem{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureOnpremArrayInput)(nil)).Elem(), InfrastructureOnpremArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureOnpremMapInput)(nil)).Elem(), InfrastructureOnpremMap{})
	pulumi.RegisterOutputType(InfrastructureOnpremOutput{})
	pulumi.RegisterOutputType(InfrastructureOnpremArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureOnpremMapOutput{})
}
