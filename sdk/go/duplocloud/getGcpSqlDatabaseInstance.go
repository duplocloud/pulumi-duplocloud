// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `GcpSqlDatabaseInstance` retrieves a gcp sql instance in Duplo.
func LookupGcpSqlDatabaseInstance(ctx *pulumi.Context, args *LookupGcpSqlDatabaseInstanceArgs, opts ...pulumi.InvokeOption) (*LookupGcpSqlDatabaseInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGcpSqlDatabaseInstanceResult
	err := ctx.Invoke("duplocloud:index/getGcpSqlDatabaseInstance:getGcpSqlDatabaseInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGcpSqlDatabaseInstance.
type LookupGcpSqlDatabaseInstanceArgs struct {
	// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name string `pulumi:"name"`
	// The GUID of the tenant that the sql database will be created in.
	TenantId string `pulumi:"tenantId"`
}

// A collection of values returned by getGcpSqlDatabaseInstance.
type LookupGcpSqlDatabaseInstanceResult struct {
	// Connection name  of the database.
	ConnectionName string `pulumi:"connectionName"`
	// The MySQL, PostgreSQL orSQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`.`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions)includes an up-to-date reference of supported versions.
	DatabaseVersion string `pulumi:"databaseVersion"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
	DiskSize int `pulumi:"diskSize"`
	// The full name of the sql database.
	Fullname string `pulumi:"fullname"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// IP address of the database.
	IpAddresses []string `pulumi:"ipAddresses"`
	// Map of string keys and values that can be used to organize and categorize this resource.
	Labels map[string]string `pulumi:"labels"`
	// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name string `pulumi:"name"`
	// The SelfLink of the sql database.
	SelfLink string `pulumi:"selfLink"`
	// The GUID of the tenant that the sql database will be created in.
	TenantId string `pulumi:"tenantId"`
	// The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier string `pulumi:"tier"`
	// Whether or not to wait until sql database instance to be ready, after creation.
	WaitUntilReady bool `pulumi:"waitUntilReady"`
}

func LookupGcpSqlDatabaseInstanceOutput(ctx *pulumi.Context, args LookupGcpSqlDatabaseInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupGcpSqlDatabaseInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGcpSqlDatabaseInstanceResultOutput, error) {
			args := v.(LookupGcpSqlDatabaseInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getGcpSqlDatabaseInstance:getGcpSqlDatabaseInstance", args, LookupGcpSqlDatabaseInstanceResultOutput{}, options).(LookupGcpSqlDatabaseInstanceResultOutput), nil
		}).(LookupGcpSqlDatabaseInstanceResultOutput)
}

// A collection of arguments for invoking getGcpSqlDatabaseInstance.
type LookupGcpSqlDatabaseInstanceOutputArgs struct {
	// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringInput `pulumi:"name"`
	// The GUID of the tenant that the sql database will be created in.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (LookupGcpSqlDatabaseInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGcpSqlDatabaseInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getGcpSqlDatabaseInstance.
type LookupGcpSqlDatabaseInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupGcpSqlDatabaseInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGcpSqlDatabaseInstanceResult)(nil)).Elem()
}

func (o LookupGcpSqlDatabaseInstanceResultOutput) ToLookupGcpSqlDatabaseInstanceResultOutput() LookupGcpSqlDatabaseInstanceResultOutput {
	return o
}

func (o LookupGcpSqlDatabaseInstanceResultOutput) ToLookupGcpSqlDatabaseInstanceResultOutputWithContext(ctx context.Context) LookupGcpSqlDatabaseInstanceResultOutput {
	return o
}

// Connection name  of the database.
func (o LookupGcpSqlDatabaseInstanceResultOutput) ConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) string { return v.ConnectionName }).(pulumi.StringOutput)
}

// The MySQL, PostgreSQL orSQL Server version to use.Supported values include `MYSQL_5_6`,`MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`,`POSTGRES_11`,`POSTGRES_12`, `POSTGRES_13`, `POSTGRES_14`, `POSTGRES_15`, `SQLSERVER_2017_STANDARD`,`SQLSERVER_2017_ENTERPRISE`,`SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`.`SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`,`SQLSERVER_2019_WEB`.[Database Version Policies](https://cloud.google.com/sql/docs/db-versions)includes an up-to-date reference of supported versions.
func (o LookupGcpSqlDatabaseInstanceResultOutput) DatabaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) string { return v.DatabaseVersion }).(pulumi.StringOutput)
}

// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
func (o LookupGcpSqlDatabaseInstanceResultOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The full name of the sql database.
func (o LookupGcpSqlDatabaseInstanceResultOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) string { return v.Fullname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGcpSqlDatabaseInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// IP address of the database.
func (o LookupGcpSqlDatabaseInstanceResultOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Map of string keys and values that can be used to organize and categorize this resource.
func (o LookupGcpSqlDatabaseInstanceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The short name of the sql database.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
func (o LookupGcpSqlDatabaseInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The SelfLink of the sql database.
func (o LookupGcpSqlDatabaseInstanceResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// The GUID of the tenant that the sql database will be created in.
func (o LookupGcpSqlDatabaseInstanceResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) string { return v.TenantId }).(pulumi.StringOutput)
}

// The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as `db-custom-2-13312`.See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
func (o LookupGcpSqlDatabaseInstanceResultOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) string { return v.Tier }).(pulumi.StringOutput)
}

// Whether or not to wait until sql database instance to be ready, after creation.
func (o LookupGcpSqlDatabaseInstanceResultOutput) WaitUntilReady() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGcpSqlDatabaseInstanceResult) bool { return v.WaitUntilReady }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGcpSqlDatabaseInstanceResultOutput{})
}
