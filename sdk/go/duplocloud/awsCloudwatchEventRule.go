// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsCloudwatchEventRule` manages an AWS cloudwatch event rule in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := duplocloud.NewTenant(ctx, "duplo-app", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("duplo-app"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			// With Schedule Expression
//			_, err = duplocloud.NewAwsCloudwatchEventRule(ctx, "cw_erule", &duplocloud.AwsCloudwatchEventRuleArgs{
//				TenantId:           duplo_app.TenantId,
//				Name:               pulumi.String("cw_erule"),
//				Description:        pulumi.String("this is a test cloudwatch event rule."),
//				ScheduleExpression: pulumi.String("rate(10 minutes)"),
//				State:              pulumi.String("DISABLED"),
//				Tags: duplocloud.AwsCloudwatchEventRuleTagArray{
//					&duplocloud.AwsCloudwatchEventRuleTagArgs{
//						Key:   pulumi.String("CreatedBy"),
//						Value: pulumi.String("Duplo"),
//					},
//					&duplocloud.AwsCloudwatchEventRuleTagArgs{
//						Key:   pulumi.String("CreatedFrom"),
//						Value: pulumi.String("Duplo"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"detail-type": []string{
//					"AWS Console Sign In via CloudTrail",
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			// With Event Pattern
//			_, err = duplocloud.NewAwsCloudwatchEventRule(ctx, "cw_erule2", &duplocloud.AwsCloudwatchEventRuleArgs{
//				TenantId:     duplo_app.TenantId,
//				Name:         pulumi.String("cw_erule2"),
//				Description:  pulumi.String("capture-aws-sign-in."),
//				EventPattern: pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS Cloudwatch Event Rule
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *FRIENDLY_NAME* is the duploservices-<account_name>-<friendly_name>
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsCloudwatchEventRule:AwsCloudwatchEventRule myEventRule *TENANT_ID*/*FRIENDLY_NAME*
// ```
type AwsCloudwatchEventRule struct {
	pulumi.CustomResourceState

	// The ARN of the event rule.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The description of the rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The event bus to associate with this rule. If you omit this, the default event bus is used.
	EventBusName pulumi.StringOutput `pulumi:"eventBusName"`
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required.
	EventPattern pulumi.StringPtrOutput `pulumi:"eventPattern"`
	// The full name of the event rule.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// The short name of the event rule.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required.
	ScheduleExpression pulumi.StringPtrOutput `pulumi:"scheduleExpression"`
	// Whether the rule should be enabled or disabled. Defaults to `ENABLED`.
	State pulumi.StringPtrOutput               `pulumi:"state"`
	Tags  AwsCloudwatchEventRuleTagArrayOutput `pulumi:"tags"`
	// The GUID of the tenant that the cloudwatch event rule will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAwsCloudwatchEventRule registers a new resource with the given unique name, arguments, and options.
func NewAwsCloudwatchEventRule(ctx *pulumi.Context,
	name string, args *AwsCloudwatchEventRuleArgs, opts ...pulumi.ResourceOption) (*AwsCloudwatchEventRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsCloudwatchEventRule
	err := ctx.RegisterResource("duplocloud:index/awsCloudwatchEventRule:AwsCloudwatchEventRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsCloudwatchEventRule gets an existing AwsCloudwatchEventRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsCloudwatchEventRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsCloudwatchEventRuleState, opts ...pulumi.ResourceOption) (*AwsCloudwatchEventRule, error) {
	var resource AwsCloudwatchEventRule
	err := ctx.ReadResource("duplocloud:index/awsCloudwatchEventRule:AwsCloudwatchEventRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsCloudwatchEventRule resources.
type awsCloudwatchEventRuleState struct {
	// The ARN of the event rule.
	Arn *string `pulumi:"arn"`
	// The description of the rule.
	Description *string `pulumi:"description"`
	// The event bus to associate with this rule. If you omit this, the default event bus is used.
	EventBusName *string `pulumi:"eventBusName"`
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required.
	EventPattern *string `pulumi:"eventPattern"`
	// The full name of the event rule.
	Fullname *string `pulumi:"fullname"`
	// The short name of the event rule.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn *string `pulumi:"roleArn"`
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required.
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// Whether the rule should be enabled or disabled. Defaults to `ENABLED`.
	State *string                     `pulumi:"state"`
	Tags  []AwsCloudwatchEventRuleTag `pulumi:"tags"`
	// The GUID of the tenant that the cloudwatch event rule will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AwsCloudwatchEventRuleState struct {
	// The ARN of the event rule.
	Arn pulumi.StringPtrInput
	// The description of the rule.
	Description pulumi.StringPtrInput
	// The event bus to associate with this rule. If you omit this, the default event bus is used.
	EventBusName pulumi.StringPtrInput
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required.
	EventPattern pulumi.StringPtrInput
	// The full name of the event rule.
	Fullname pulumi.StringPtrInput
	// The short name of the event rule.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn pulumi.StringPtrInput
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required.
	ScheduleExpression pulumi.StringPtrInput
	// Whether the rule should be enabled or disabled. Defaults to `ENABLED`.
	State pulumi.StringPtrInput
	Tags  AwsCloudwatchEventRuleTagArrayInput
	// The GUID of the tenant that the cloudwatch event rule will be created in.
	TenantId pulumi.StringPtrInput
}

func (AwsCloudwatchEventRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsCloudwatchEventRuleState)(nil)).Elem()
}

type awsCloudwatchEventRuleArgs struct {
	// The description of the rule.
	Description *string `pulumi:"description"`
	// The event bus to associate with this rule. If you omit this, the default event bus is used.
	EventBusName *string `pulumi:"eventBusName"`
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required.
	EventPattern *string `pulumi:"eventPattern"`
	// The short name of the event rule.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn *string `pulumi:"roleArn"`
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required.
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// Whether the rule should be enabled or disabled. Defaults to `ENABLED`.
	State *string                     `pulumi:"state"`
	Tags  []AwsCloudwatchEventRuleTag `pulumi:"tags"`
	// The GUID of the tenant that the cloudwatch event rule will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AwsCloudwatchEventRule resource.
type AwsCloudwatchEventRuleArgs struct {
	// The description of the rule.
	Description pulumi.StringPtrInput
	// The event bus to associate with this rule. If you omit this, the default event bus is used.
	EventBusName pulumi.StringPtrInput
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required.
	EventPattern pulumi.StringPtrInput
	// The short name of the event rule.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
	Name pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn pulumi.StringPtrInput
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required.
	ScheduleExpression pulumi.StringPtrInput
	// Whether the rule should be enabled or disabled. Defaults to `ENABLED`.
	State pulumi.StringPtrInput
	Tags  AwsCloudwatchEventRuleTagArrayInput
	// The GUID of the tenant that the cloudwatch event rule will be created in.
	TenantId pulumi.StringInput
}

func (AwsCloudwatchEventRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsCloudwatchEventRuleArgs)(nil)).Elem()
}

type AwsCloudwatchEventRuleInput interface {
	pulumi.Input

	ToAwsCloudwatchEventRuleOutput() AwsCloudwatchEventRuleOutput
	ToAwsCloudwatchEventRuleOutputWithContext(ctx context.Context) AwsCloudwatchEventRuleOutput
}

func (*AwsCloudwatchEventRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCloudwatchEventRule)(nil)).Elem()
}

func (i *AwsCloudwatchEventRule) ToAwsCloudwatchEventRuleOutput() AwsCloudwatchEventRuleOutput {
	return i.ToAwsCloudwatchEventRuleOutputWithContext(context.Background())
}

func (i *AwsCloudwatchEventRule) ToAwsCloudwatchEventRuleOutputWithContext(ctx context.Context) AwsCloudwatchEventRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCloudwatchEventRuleOutput)
}

// AwsCloudwatchEventRuleArrayInput is an input type that accepts AwsCloudwatchEventRuleArray and AwsCloudwatchEventRuleArrayOutput values.
// You can construct a concrete instance of `AwsCloudwatchEventRuleArrayInput` via:
//
//	AwsCloudwatchEventRuleArray{ AwsCloudwatchEventRuleArgs{...} }
type AwsCloudwatchEventRuleArrayInput interface {
	pulumi.Input

	ToAwsCloudwatchEventRuleArrayOutput() AwsCloudwatchEventRuleArrayOutput
	ToAwsCloudwatchEventRuleArrayOutputWithContext(context.Context) AwsCloudwatchEventRuleArrayOutput
}

type AwsCloudwatchEventRuleArray []AwsCloudwatchEventRuleInput

func (AwsCloudwatchEventRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsCloudwatchEventRule)(nil)).Elem()
}

func (i AwsCloudwatchEventRuleArray) ToAwsCloudwatchEventRuleArrayOutput() AwsCloudwatchEventRuleArrayOutput {
	return i.ToAwsCloudwatchEventRuleArrayOutputWithContext(context.Background())
}

func (i AwsCloudwatchEventRuleArray) ToAwsCloudwatchEventRuleArrayOutputWithContext(ctx context.Context) AwsCloudwatchEventRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCloudwatchEventRuleArrayOutput)
}

// AwsCloudwatchEventRuleMapInput is an input type that accepts AwsCloudwatchEventRuleMap and AwsCloudwatchEventRuleMapOutput values.
// You can construct a concrete instance of `AwsCloudwatchEventRuleMapInput` via:
//
//	AwsCloudwatchEventRuleMap{ "key": AwsCloudwatchEventRuleArgs{...} }
type AwsCloudwatchEventRuleMapInput interface {
	pulumi.Input

	ToAwsCloudwatchEventRuleMapOutput() AwsCloudwatchEventRuleMapOutput
	ToAwsCloudwatchEventRuleMapOutputWithContext(context.Context) AwsCloudwatchEventRuleMapOutput
}

type AwsCloudwatchEventRuleMap map[string]AwsCloudwatchEventRuleInput

func (AwsCloudwatchEventRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsCloudwatchEventRule)(nil)).Elem()
}

func (i AwsCloudwatchEventRuleMap) ToAwsCloudwatchEventRuleMapOutput() AwsCloudwatchEventRuleMapOutput {
	return i.ToAwsCloudwatchEventRuleMapOutputWithContext(context.Background())
}

func (i AwsCloudwatchEventRuleMap) ToAwsCloudwatchEventRuleMapOutputWithContext(ctx context.Context) AwsCloudwatchEventRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCloudwatchEventRuleMapOutput)
}

type AwsCloudwatchEventRuleOutput struct{ *pulumi.OutputState }

func (AwsCloudwatchEventRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCloudwatchEventRule)(nil)).Elem()
}

func (o AwsCloudwatchEventRuleOutput) ToAwsCloudwatchEventRuleOutput() AwsCloudwatchEventRuleOutput {
	return o
}

func (o AwsCloudwatchEventRuleOutput) ToAwsCloudwatchEventRuleOutputWithContext(ctx context.Context) AwsCloudwatchEventRuleOutput {
	return o
}

// The ARN of the event rule.
func (o AwsCloudwatchEventRuleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The description of the rule.
func (o AwsCloudwatchEventRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The event bus to associate with this rule. If you omit this, the default event bus is used.
func (o AwsCloudwatchEventRuleOutput) EventBusName() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringOutput { return v.EventBusName }).(pulumi.StringOutput)
}

// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required.
func (o AwsCloudwatchEventRuleOutput) EventPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringPtrOutput { return v.EventPattern }).(pulumi.StringPtrOutput)
}

// The full name of the event rule.
func (o AwsCloudwatchEventRuleOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// The short name of the event rule.  Duplo will add a prefix to the name.  You can retrieve the full name from the `fullname` attribute.
func (o AwsCloudwatchEventRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
func (o AwsCloudwatchEventRuleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required.
func (o AwsCloudwatchEventRuleOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringPtrOutput { return v.ScheduleExpression }).(pulumi.StringPtrOutput)
}

// Whether the rule should be enabled or disabled. Defaults to `ENABLED`.
func (o AwsCloudwatchEventRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

func (o AwsCloudwatchEventRuleOutput) Tags() AwsCloudwatchEventRuleTagArrayOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) AwsCloudwatchEventRuleTagArrayOutput { return v.Tags }).(AwsCloudwatchEventRuleTagArrayOutput)
}

// The GUID of the tenant that the cloudwatch event rule will be created in.
func (o AwsCloudwatchEventRuleOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCloudwatchEventRule) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AwsCloudwatchEventRuleArrayOutput struct{ *pulumi.OutputState }

func (AwsCloudwatchEventRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsCloudwatchEventRule)(nil)).Elem()
}

func (o AwsCloudwatchEventRuleArrayOutput) ToAwsCloudwatchEventRuleArrayOutput() AwsCloudwatchEventRuleArrayOutput {
	return o
}

func (o AwsCloudwatchEventRuleArrayOutput) ToAwsCloudwatchEventRuleArrayOutputWithContext(ctx context.Context) AwsCloudwatchEventRuleArrayOutput {
	return o
}

func (o AwsCloudwatchEventRuleArrayOutput) Index(i pulumi.IntInput) AwsCloudwatchEventRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsCloudwatchEventRule {
		return vs[0].([]*AwsCloudwatchEventRule)[vs[1].(int)]
	}).(AwsCloudwatchEventRuleOutput)
}

type AwsCloudwatchEventRuleMapOutput struct{ *pulumi.OutputState }

func (AwsCloudwatchEventRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsCloudwatchEventRule)(nil)).Elem()
}

func (o AwsCloudwatchEventRuleMapOutput) ToAwsCloudwatchEventRuleMapOutput() AwsCloudwatchEventRuleMapOutput {
	return o
}

func (o AwsCloudwatchEventRuleMapOutput) ToAwsCloudwatchEventRuleMapOutputWithContext(ctx context.Context) AwsCloudwatchEventRuleMapOutput {
	return o
}

func (o AwsCloudwatchEventRuleMapOutput) MapIndex(k pulumi.StringInput) AwsCloudwatchEventRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsCloudwatchEventRule {
		return vs[0].(map[string]*AwsCloudwatchEventRule)[vs[1].(string)]
	}).(AwsCloudwatchEventRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCloudwatchEventRuleInput)(nil)).Elem(), &AwsCloudwatchEventRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCloudwatchEventRuleArrayInput)(nil)).Elem(), AwsCloudwatchEventRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCloudwatchEventRuleMapInput)(nil)).Elem(), AwsCloudwatchEventRuleMap{})
	pulumi.RegisterOutputType(AwsCloudwatchEventRuleOutput{})
	pulumi.RegisterOutputType(AwsCloudwatchEventRuleArrayOutput{})
	pulumi.RegisterOutputType(AwsCloudwatchEventRuleMapOutput{})
}
