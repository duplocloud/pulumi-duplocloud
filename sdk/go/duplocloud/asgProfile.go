// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AsgProfile` manages a ASG Profile in Duplo.
//
// ## Import
//
// Example: Importing an existing AWS ASG
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *FRIENDLY_NAME* is the duploservices-<account_name>-<friendly_name>
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/asgProfile:AsgProfile myAsgProfile *TENANT_ID*/*FRIENDLY_NAME*
// ```
type AsgProfile struct {
	pulumi.CustomResourceState

	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform pulumi.IntPtrOutput `pulumi:"agentPlatform"`
	// Whether or not to allocate a public IP.
	AllocatedPublicIp pulumi.BoolPtrOutput `pulumi:"allocatedPublicIp"`
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData pulumi.StringOutput `pulumi:"base64UserData"`
	// Whether or not ASG should leverage duplocloud's scale from 0 feature
	CanScaleFromZero pulumi.BoolOutput `pulumi:"canScaleFromZero"`
	// The AWS EC2 instance type.
	Capacity pulumi.StringOutput `pulumi:"capacity"`
	// The numeric ID of the cloud provider to launch the host in.
	Cloud pulumi.IntPtrOutput `pulumi:"cloud"`
	// Specify the labels to attach to the nodes.
	CustomNodeLabels pulumi.StringMapOutput `pulumi:"customNodeLabels"`
	// List of metrics to collect for the ASG Specify one or more of the following
	// metrics.`GroupMinSize`,`GroupMaxSize`,`GroupDesiredCapacity`,`GroupInServiceInstances`,`GroupPendingInstances`,`GroupStandbyInstances`,`GroupTerminatingInstances`,`GroupTotalInstances`,`GroupInServiceCapacity`,`GroupPendingCapacity`,`GroupStandbyCapacity`,`GroupTerminatingCapacity`,`GroupTotalCapacity`,`WarmPoolDesiredCapacity`,`WarmPoolWarmedCapacity`,`WarmPoolPendingCapacity`,`WarmPoolTerminatingCapacity`,`WarmPoolTotalCapacity`,`GroupAndWarmPoolDesiredCapacity`,`GroupAndWarmPoolTotalCapacity`.
	EnabledMetrics pulumi.StringArrayOutput `pulumi:"enabledMetrics"`
	EncryptDisk    pulumi.BoolPtrOutput     `pulumi:"encryptDisk"`
	// The short name of the host.
	FriendlyName pulumi.StringOutput `pulumi:"friendlyName"`
	// The full name of the ASG profile.
	Fullname pulumi.StringOutput `pulumi:"fullname"`
	// The AMI ID to use.
	ImageId               pulumi.StringOutput `pulumi:"imageId"`
	InitialBase64UserData pulumi.StringOutput `pulumi:"initialBase64UserData"`
	// The number of instances that should be running in the group.
	InstanceCount pulumi.IntOutput `pulumi:"instanceCount"`
	// Whether or not to enable cluster autoscaler.
	IsClusterAutoscaled pulumi.BoolOutput    `pulumi:"isClusterAutoscaled"`
	IsEbsOptimized      pulumi.BoolPtrOutput `pulumi:"isEbsOptimized"`
	IsMinion            pulumi.BoolPtrOutput `pulumi:"isMinion"`
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType pulumi.IntOutput `pulumi:"keypairType"`
	// The maximum size of the Auto Scaling Group.
	MaxInstanceCount pulumi.IntOutput `pulumi:"maxInstanceCount"`
	// Maximum price to pay for a spot instance in dollars per unit hour.
	MaxSpotPrice pulumi.StringPtrOutput `pulumi:"maxSpotPrice"`
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas AsgProfileMetadataArrayOutput `pulumi:"metadatas"`
	// The minimum size of the Auto Scaling Group.
	MinInstanceCount pulumi.IntOutput `pulumi:"minInstanceCount"`
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags AsgProfileMinionTagArrayOutput `pulumi:"minionTags"`
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces AsgProfileNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData pulumi.BoolPtrOutput `pulumi:"prependUserData"`
	// The primary public IP address assigned to the host.
	PublicIpAddress pulumi.StringOutput      `pulumi:"publicIpAddress"`
	Tags            AsgProfileTagArrayOutput `pulumi:"tags"`
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints AsgProfileTaintArrayOutput `pulumi:"taints"`
	// The GUID of the tenant that the host will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Whether or not to use spot instances.
	UseSpotInstances pulumi.BoolPtrOutput `pulumi:"useSpotInstances"`
	// The name of the tenant that the host will be created in.
	UserAccount pulumi.StringOutput `pulumi:"userAccount"`
	// Block to specify additional or secondary volume beyond the root device
	Volumes AsgProfileVolumeArrayOutput `pulumi:"volumes"`
	// Whether or not to wait until ASG instances to be healthy, after creation.
	WaitForCapacity pulumi.BoolPtrOutput `pulumi:"waitForCapacity"`
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	//
	// Deprecated: zone has been deprecated instead use zones
	Zone pulumi.IntPtrOutput `pulumi:"zone"`
	// The multi availability zone to launch the asg in, expressed as a number and starting at 0 - Automatic 1 - Zone A 2 -
	// Zone B
	Zones pulumi.IntArrayOutput `pulumi:"zones"`
}

// NewAsgProfile registers a new resource with the given unique name, arguments, and options.
func NewAsgProfile(ctx *pulumi.Context,
	name string, args *AsgProfileArgs, opts ...pulumi.ResourceOption) (*AsgProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Capacity == nil {
		return nil, errors.New("invalid value for required argument 'Capacity'")
	}
	if args.FriendlyName == nil {
		return nil, errors.New("invalid value for required argument 'FriendlyName'")
	}
	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AsgProfile
	err := ctx.RegisterResource("duplocloud:index/asgProfile:AsgProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAsgProfile gets an existing AsgProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAsgProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AsgProfileState, opts ...pulumi.ResourceOption) (*AsgProfile, error) {
	var resource AsgProfile
	err := ctx.ReadResource("duplocloud:index/asgProfile:AsgProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AsgProfile resources.
type asgProfileState struct {
	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform *int `pulumi:"agentPlatform"`
	// Whether or not to allocate a public IP.
	AllocatedPublicIp *bool `pulumi:"allocatedPublicIp"`
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData *string `pulumi:"base64UserData"`
	// Whether or not ASG should leverage duplocloud's scale from 0 feature
	CanScaleFromZero *bool `pulumi:"canScaleFromZero"`
	// The AWS EC2 instance type.
	Capacity *string `pulumi:"capacity"`
	// The numeric ID of the cloud provider to launch the host in.
	Cloud *int `pulumi:"cloud"`
	// Specify the labels to attach to the nodes.
	CustomNodeLabels map[string]string `pulumi:"customNodeLabels"`
	// List of metrics to collect for the ASG Specify one or more of the following
	// metrics.`GroupMinSize`,`GroupMaxSize`,`GroupDesiredCapacity`,`GroupInServiceInstances`,`GroupPendingInstances`,`GroupStandbyInstances`,`GroupTerminatingInstances`,`GroupTotalInstances`,`GroupInServiceCapacity`,`GroupPendingCapacity`,`GroupStandbyCapacity`,`GroupTerminatingCapacity`,`GroupTotalCapacity`,`WarmPoolDesiredCapacity`,`WarmPoolWarmedCapacity`,`WarmPoolPendingCapacity`,`WarmPoolTerminatingCapacity`,`WarmPoolTotalCapacity`,`GroupAndWarmPoolDesiredCapacity`,`GroupAndWarmPoolTotalCapacity`.
	EnabledMetrics []string `pulumi:"enabledMetrics"`
	EncryptDisk    *bool    `pulumi:"encryptDisk"`
	// The short name of the host.
	FriendlyName *string `pulumi:"friendlyName"`
	// The full name of the ASG profile.
	Fullname *string `pulumi:"fullname"`
	// The AMI ID to use.
	ImageId               *string `pulumi:"imageId"`
	InitialBase64UserData *string `pulumi:"initialBase64UserData"`
	// The number of instances that should be running in the group.
	InstanceCount *int `pulumi:"instanceCount"`
	// Whether or not to enable cluster autoscaler.
	IsClusterAutoscaled *bool `pulumi:"isClusterAutoscaled"`
	IsEbsOptimized      *bool `pulumi:"isEbsOptimized"`
	IsMinion            *bool `pulumi:"isMinion"`
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType *int `pulumi:"keypairType"`
	// The maximum size of the Auto Scaling Group.
	MaxInstanceCount *int `pulumi:"maxInstanceCount"`
	// Maximum price to pay for a spot instance in dollars per unit hour.
	MaxSpotPrice *string `pulumi:"maxSpotPrice"`
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas []AsgProfileMetadata `pulumi:"metadatas"`
	// The minimum size of the Auto Scaling Group.
	MinInstanceCount *int `pulumi:"minInstanceCount"`
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags []AsgProfileMinionTag `pulumi:"minionTags"`
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces []AsgProfileNetworkInterface `pulumi:"networkInterfaces"`
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData *bool `pulumi:"prependUserData"`
	// The primary public IP address assigned to the host.
	PublicIpAddress *string         `pulumi:"publicIpAddress"`
	Tags            []AsgProfileTag `pulumi:"tags"`
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints []AsgProfileTaint `pulumi:"taints"`
	// The GUID of the tenant that the host will be created in.
	TenantId *string `pulumi:"tenantId"`
	// Whether or not to use spot instances.
	UseSpotInstances *bool `pulumi:"useSpotInstances"`
	// The name of the tenant that the host will be created in.
	UserAccount *string `pulumi:"userAccount"`
	// Block to specify additional or secondary volume beyond the root device
	Volumes []AsgProfileVolume `pulumi:"volumes"`
	// Whether or not to wait until ASG instances to be healthy, after creation.
	WaitForCapacity *bool `pulumi:"waitForCapacity"`
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	//
	// Deprecated: zone has been deprecated instead use zones
	Zone *int `pulumi:"zone"`
	// The multi availability zone to launch the asg in, expressed as a number and starting at 0 - Automatic 1 - Zone A 2 -
	// Zone B
	Zones []int `pulumi:"zones"`
}

type AsgProfileState struct {
	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform pulumi.IntPtrInput
	// Whether or not to allocate a public IP.
	AllocatedPublicIp pulumi.BoolPtrInput
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData pulumi.StringPtrInput
	// Whether or not ASG should leverage duplocloud's scale from 0 feature
	CanScaleFromZero pulumi.BoolPtrInput
	// The AWS EC2 instance type.
	Capacity pulumi.StringPtrInput
	// The numeric ID of the cloud provider to launch the host in.
	Cloud pulumi.IntPtrInput
	// Specify the labels to attach to the nodes.
	CustomNodeLabels pulumi.StringMapInput
	// List of metrics to collect for the ASG Specify one or more of the following
	// metrics.`GroupMinSize`,`GroupMaxSize`,`GroupDesiredCapacity`,`GroupInServiceInstances`,`GroupPendingInstances`,`GroupStandbyInstances`,`GroupTerminatingInstances`,`GroupTotalInstances`,`GroupInServiceCapacity`,`GroupPendingCapacity`,`GroupStandbyCapacity`,`GroupTerminatingCapacity`,`GroupTotalCapacity`,`WarmPoolDesiredCapacity`,`WarmPoolWarmedCapacity`,`WarmPoolPendingCapacity`,`WarmPoolTerminatingCapacity`,`WarmPoolTotalCapacity`,`GroupAndWarmPoolDesiredCapacity`,`GroupAndWarmPoolTotalCapacity`.
	EnabledMetrics pulumi.StringArrayInput
	EncryptDisk    pulumi.BoolPtrInput
	// The short name of the host.
	FriendlyName pulumi.StringPtrInput
	// The full name of the ASG profile.
	Fullname pulumi.StringPtrInput
	// The AMI ID to use.
	ImageId               pulumi.StringPtrInput
	InitialBase64UserData pulumi.StringPtrInput
	// The number of instances that should be running in the group.
	InstanceCount pulumi.IntPtrInput
	// Whether or not to enable cluster autoscaler.
	IsClusterAutoscaled pulumi.BoolPtrInput
	IsEbsOptimized      pulumi.BoolPtrInput
	IsMinion            pulumi.BoolPtrInput
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType pulumi.IntPtrInput
	// The maximum size of the Auto Scaling Group.
	MaxInstanceCount pulumi.IntPtrInput
	// Maximum price to pay for a spot instance in dollars per unit hour.
	MaxSpotPrice pulumi.StringPtrInput
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas AsgProfileMetadataArrayInput
	// The minimum size of the Auto Scaling Group.
	MinInstanceCount pulumi.IntPtrInput
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags AsgProfileMinionTagArrayInput
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces AsgProfileNetworkInterfaceArrayInput
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData pulumi.BoolPtrInput
	// The primary public IP address assigned to the host.
	PublicIpAddress pulumi.StringPtrInput
	Tags            AsgProfileTagArrayInput
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints AsgProfileTaintArrayInput
	// The GUID of the tenant that the host will be created in.
	TenantId pulumi.StringPtrInput
	// Whether or not to use spot instances.
	UseSpotInstances pulumi.BoolPtrInput
	// The name of the tenant that the host will be created in.
	UserAccount pulumi.StringPtrInput
	// Block to specify additional or secondary volume beyond the root device
	Volumes AsgProfileVolumeArrayInput
	// Whether or not to wait until ASG instances to be healthy, after creation.
	WaitForCapacity pulumi.BoolPtrInput
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	//
	// Deprecated: zone has been deprecated instead use zones
	Zone pulumi.IntPtrInput
	// The multi availability zone to launch the asg in, expressed as a number and starting at 0 - Automatic 1 - Zone A 2 -
	// Zone B
	Zones pulumi.IntArrayInput
}

func (AsgProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*asgProfileState)(nil)).Elem()
}

type asgProfileArgs struct {
	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform *int `pulumi:"agentPlatform"`
	// Whether or not to allocate a public IP.
	AllocatedPublicIp *bool `pulumi:"allocatedPublicIp"`
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData *string `pulumi:"base64UserData"`
	// Whether or not ASG should leverage duplocloud's scale from 0 feature
	CanScaleFromZero *bool `pulumi:"canScaleFromZero"`
	// The AWS EC2 instance type.
	Capacity string `pulumi:"capacity"`
	// The numeric ID of the cloud provider to launch the host in.
	Cloud *int `pulumi:"cloud"`
	// Specify the labels to attach to the nodes.
	CustomNodeLabels map[string]string `pulumi:"customNodeLabels"`
	// List of metrics to collect for the ASG Specify one or more of the following
	// metrics.`GroupMinSize`,`GroupMaxSize`,`GroupDesiredCapacity`,`GroupInServiceInstances`,`GroupPendingInstances`,`GroupStandbyInstances`,`GroupTerminatingInstances`,`GroupTotalInstances`,`GroupInServiceCapacity`,`GroupPendingCapacity`,`GroupStandbyCapacity`,`GroupTerminatingCapacity`,`GroupTotalCapacity`,`WarmPoolDesiredCapacity`,`WarmPoolWarmedCapacity`,`WarmPoolPendingCapacity`,`WarmPoolTerminatingCapacity`,`WarmPoolTotalCapacity`,`GroupAndWarmPoolDesiredCapacity`,`GroupAndWarmPoolTotalCapacity`.
	EnabledMetrics []string `pulumi:"enabledMetrics"`
	EncryptDisk    *bool    `pulumi:"encryptDisk"`
	// The short name of the host.
	FriendlyName string `pulumi:"friendlyName"`
	// The AMI ID to use.
	ImageId string `pulumi:"imageId"`
	// The number of instances that should be running in the group.
	InstanceCount *int `pulumi:"instanceCount"`
	// Whether or not to enable cluster autoscaler.
	IsClusterAutoscaled *bool `pulumi:"isClusterAutoscaled"`
	IsEbsOptimized      *bool `pulumi:"isEbsOptimized"`
	IsMinion            *bool `pulumi:"isMinion"`
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType *int `pulumi:"keypairType"`
	// The maximum size of the Auto Scaling Group.
	MaxInstanceCount *int `pulumi:"maxInstanceCount"`
	// Maximum price to pay for a spot instance in dollars per unit hour.
	MaxSpotPrice *string `pulumi:"maxSpotPrice"`
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas []AsgProfileMetadata `pulumi:"metadatas"`
	// The minimum size of the Auto Scaling Group.
	MinInstanceCount *int `pulumi:"minInstanceCount"`
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags []AsgProfileMinionTag `pulumi:"minionTags"`
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces []AsgProfileNetworkInterface `pulumi:"networkInterfaces"`
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData *bool           `pulumi:"prependUserData"`
	Tags            []AsgProfileTag `pulumi:"tags"`
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints []AsgProfileTaint `pulumi:"taints"`
	// The GUID of the tenant that the host will be created in.
	TenantId string `pulumi:"tenantId"`
	// Whether or not to use spot instances.
	UseSpotInstances *bool `pulumi:"useSpotInstances"`
	// The name of the tenant that the host will be created in.
	UserAccount *string `pulumi:"userAccount"`
	// Block to specify additional or secondary volume beyond the root device
	Volumes []AsgProfileVolume `pulumi:"volumes"`
	// Whether or not to wait until ASG instances to be healthy, after creation.
	WaitForCapacity *bool `pulumi:"waitForCapacity"`
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	//
	// Deprecated: zone has been deprecated instead use zones
	Zone *int `pulumi:"zone"`
	// The multi availability zone to launch the asg in, expressed as a number and starting at 0 - Automatic 1 - Zone A 2 -
	// Zone B
	Zones []int `pulumi:"zones"`
}

// The set of arguments for constructing a AsgProfile resource.
type AsgProfileArgs struct {
	// The numeric ID of the container agent pool that this host is added to.
	AgentPlatform pulumi.IntPtrInput
	// Whether or not to allocate a public IP.
	AllocatedPublicIp pulumi.BoolPtrInput
	// Base64 encoded EC2 user data to associated with the host.
	Base64UserData pulumi.StringPtrInput
	// Whether or not ASG should leverage duplocloud's scale from 0 feature
	CanScaleFromZero pulumi.BoolPtrInput
	// The AWS EC2 instance type.
	Capacity pulumi.StringInput
	// The numeric ID of the cloud provider to launch the host in.
	Cloud pulumi.IntPtrInput
	// Specify the labels to attach to the nodes.
	CustomNodeLabels pulumi.StringMapInput
	// List of metrics to collect for the ASG Specify one or more of the following
	// metrics.`GroupMinSize`,`GroupMaxSize`,`GroupDesiredCapacity`,`GroupInServiceInstances`,`GroupPendingInstances`,`GroupStandbyInstances`,`GroupTerminatingInstances`,`GroupTotalInstances`,`GroupInServiceCapacity`,`GroupPendingCapacity`,`GroupStandbyCapacity`,`GroupTerminatingCapacity`,`GroupTotalCapacity`,`WarmPoolDesiredCapacity`,`WarmPoolWarmedCapacity`,`WarmPoolPendingCapacity`,`WarmPoolTerminatingCapacity`,`WarmPoolTotalCapacity`,`GroupAndWarmPoolDesiredCapacity`,`GroupAndWarmPoolTotalCapacity`.
	EnabledMetrics pulumi.StringArrayInput
	EncryptDisk    pulumi.BoolPtrInput
	// The short name of the host.
	FriendlyName pulumi.StringInput
	// The AMI ID to use.
	ImageId pulumi.StringInput
	// The number of instances that should be running in the group.
	InstanceCount pulumi.IntPtrInput
	// Whether or not to enable cluster autoscaler.
	IsClusterAutoscaled pulumi.BoolPtrInput
	IsEbsOptimized      pulumi.BoolPtrInput
	IsMinion            pulumi.BoolPtrInput
	// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
	// - some operating systems no longer support it)
	KeypairType pulumi.IntPtrInput
	// The maximum size of the Auto Scaling Group.
	MaxInstanceCount pulumi.IntPtrInput
	// Maximum price to pay for a spot instance in dollars per unit hour.
	MaxSpotPrice pulumi.StringPtrInput
	// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
	// Key and its size as value, size value should be atleast 10*
	Metadatas AsgProfileMetadataArrayInput
	// The minimum size of the Auto Scaling Group.
	MinInstanceCount pulumi.IntPtrInput
	// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
	MinionTags AsgProfileMinionTagArrayInput
	// An optional list of custom network interface configurations to use when creating the host.
	NetworkInterfaces AsgProfileNetworkInterfaceArrayInput
	// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
	PrependUserData pulumi.BoolPtrInput
	Tags            AsgProfileTagArrayInput
	// Specify taints to attach to the nodes, to repel other nodes with different toleration
	Taints AsgProfileTaintArrayInput
	// The GUID of the tenant that the host will be created in.
	TenantId pulumi.StringInput
	// Whether or not to use spot instances.
	UseSpotInstances pulumi.BoolPtrInput
	// The name of the tenant that the host will be created in.
	UserAccount pulumi.StringPtrInput
	// Block to specify additional or secondary volume beyond the root device
	Volumes AsgProfileVolumeArrayInput
	// Whether or not to wait until ASG instances to be healthy, after creation.
	WaitForCapacity pulumi.BoolPtrInput
	// The availability zone to launch the host in, expressed as a number and starting at 0.
	//
	// Deprecated: zone has been deprecated instead use zones
	Zone pulumi.IntPtrInput
	// The multi availability zone to launch the asg in, expressed as a number and starting at 0 - Automatic 1 - Zone A 2 -
	// Zone B
	Zones pulumi.IntArrayInput
}

func (AsgProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*asgProfileArgs)(nil)).Elem()
}

type AsgProfileInput interface {
	pulumi.Input

	ToAsgProfileOutput() AsgProfileOutput
	ToAsgProfileOutputWithContext(ctx context.Context) AsgProfileOutput
}

func (*AsgProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**AsgProfile)(nil)).Elem()
}

func (i *AsgProfile) ToAsgProfileOutput() AsgProfileOutput {
	return i.ToAsgProfileOutputWithContext(context.Background())
}

func (i *AsgProfile) ToAsgProfileOutputWithContext(ctx context.Context) AsgProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsgProfileOutput)
}

// AsgProfileArrayInput is an input type that accepts AsgProfileArray and AsgProfileArrayOutput values.
// You can construct a concrete instance of `AsgProfileArrayInput` via:
//
//	AsgProfileArray{ AsgProfileArgs{...} }
type AsgProfileArrayInput interface {
	pulumi.Input

	ToAsgProfileArrayOutput() AsgProfileArrayOutput
	ToAsgProfileArrayOutputWithContext(context.Context) AsgProfileArrayOutput
}

type AsgProfileArray []AsgProfileInput

func (AsgProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AsgProfile)(nil)).Elem()
}

func (i AsgProfileArray) ToAsgProfileArrayOutput() AsgProfileArrayOutput {
	return i.ToAsgProfileArrayOutputWithContext(context.Background())
}

func (i AsgProfileArray) ToAsgProfileArrayOutputWithContext(ctx context.Context) AsgProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsgProfileArrayOutput)
}

// AsgProfileMapInput is an input type that accepts AsgProfileMap and AsgProfileMapOutput values.
// You can construct a concrete instance of `AsgProfileMapInput` via:
//
//	AsgProfileMap{ "key": AsgProfileArgs{...} }
type AsgProfileMapInput interface {
	pulumi.Input

	ToAsgProfileMapOutput() AsgProfileMapOutput
	ToAsgProfileMapOutputWithContext(context.Context) AsgProfileMapOutput
}

type AsgProfileMap map[string]AsgProfileInput

func (AsgProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AsgProfile)(nil)).Elem()
}

func (i AsgProfileMap) ToAsgProfileMapOutput() AsgProfileMapOutput {
	return i.ToAsgProfileMapOutputWithContext(context.Background())
}

func (i AsgProfileMap) ToAsgProfileMapOutputWithContext(ctx context.Context) AsgProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsgProfileMapOutput)
}

type AsgProfileOutput struct{ *pulumi.OutputState }

func (AsgProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsgProfile)(nil)).Elem()
}

func (o AsgProfileOutput) ToAsgProfileOutput() AsgProfileOutput {
	return o
}

func (o AsgProfileOutput) ToAsgProfileOutputWithContext(ctx context.Context) AsgProfileOutput {
	return o
}

// The numeric ID of the container agent pool that this host is added to.
func (o AsgProfileOutput) AgentPlatform() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.IntPtrOutput { return v.AgentPlatform }).(pulumi.IntPtrOutput)
}

// Whether or not to allocate a public IP.
func (o AsgProfileOutput) AllocatedPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.BoolPtrOutput { return v.AllocatedPublicIp }).(pulumi.BoolPtrOutput)
}

// Base64 encoded EC2 user data to associated with the host.
func (o AsgProfileOutput) Base64UserData() pulumi.StringOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringOutput { return v.Base64UserData }).(pulumi.StringOutput)
}

// Whether or not ASG should leverage duplocloud's scale from 0 feature
func (o AsgProfileOutput) CanScaleFromZero() pulumi.BoolOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.BoolOutput { return v.CanScaleFromZero }).(pulumi.BoolOutput)
}

// The AWS EC2 instance type.
func (o AsgProfileOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringOutput { return v.Capacity }).(pulumi.StringOutput)
}

// The numeric ID of the cloud provider to launch the host in.
func (o AsgProfileOutput) Cloud() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.IntPtrOutput { return v.Cloud }).(pulumi.IntPtrOutput)
}

// Specify the labels to attach to the nodes.
func (o AsgProfileOutput) CustomNodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringMapOutput { return v.CustomNodeLabels }).(pulumi.StringMapOutput)
}

// List of metrics to collect for the ASG Specify one or more of the following
// metrics.`GroupMinSize`,`GroupMaxSize`,`GroupDesiredCapacity`,`GroupInServiceInstances`,`GroupPendingInstances`,`GroupStandbyInstances`,`GroupTerminatingInstances`,`GroupTotalInstances`,`GroupInServiceCapacity`,`GroupPendingCapacity`,`GroupStandbyCapacity`,`GroupTerminatingCapacity`,`GroupTotalCapacity`,`WarmPoolDesiredCapacity`,`WarmPoolWarmedCapacity`,`WarmPoolPendingCapacity`,`WarmPoolTerminatingCapacity`,`WarmPoolTotalCapacity`,`GroupAndWarmPoolDesiredCapacity`,`GroupAndWarmPoolTotalCapacity`.
func (o AsgProfileOutput) EnabledMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringArrayOutput { return v.EnabledMetrics }).(pulumi.StringArrayOutput)
}

func (o AsgProfileOutput) EncryptDisk() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.BoolPtrOutput { return v.EncryptDisk }).(pulumi.BoolPtrOutput)
}

// The short name of the host.
func (o AsgProfileOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringOutput { return v.FriendlyName }).(pulumi.StringOutput)
}

// The full name of the ASG profile.
func (o AsgProfileOutput) Fullname() pulumi.StringOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringOutput { return v.Fullname }).(pulumi.StringOutput)
}

// The AMI ID to use.
func (o AsgProfileOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

func (o AsgProfileOutput) InitialBase64UserData() pulumi.StringOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringOutput { return v.InitialBase64UserData }).(pulumi.StringOutput)
}

// The number of instances that should be running in the group.
func (o AsgProfileOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.IntOutput { return v.InstanceCount }).(pulumi.IntOutput)
}

// Whether or not to enable cluster autoscaler.
func (o AsgProfileOutput) IsClusterAutoscaled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.BoolOutput { return v.IsClusterAutoscaled }).(pulumi.BoolOutput)
}

func (o AsgProfileOutput) IsEbsOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.BoolPtrOutput { return v.IsEbsOptimized }).(pulumi.BoolPtrOutput)
}

func (o AsgProfileOutput) IsMinion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.BoolPtrOutput { return v.IsMinion }).(pulumi.BoolPtrOutput)
}

// The numeric ID of the keypair type being used.Should be one of: - `0` : Default - `1` : ED25519 - `2` : RSA (deprecated
// - some operating systems no longer support it)
func (o AsgProfileOutput) KeypairType() pulumi.IntOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.IntOutput { return v.KeypairType }).(pulumi.IntOutput)
}

// The maximum size of the Auto Scaling Group.
func (o AsgProfileOutput) MaxInstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.IntOutput { return v.MaxInstanceCount }).(pulumi.IntOutput)
}

// Maximum price to pay for a spot instance in dollars per unit hour.
func (o AsgProfileOutput) MaxSpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringPtrOutput { return v.MaxSpotPrice }).(pulumi.StringPtrOutput)
}

// Configuration metadata used when creating the host.<br>*Note: To configure OS disk size OsDiskSize can be specified as
// Key and its size as value, size value should be atleast 10*
func (o AsgProfileOutput) Metadatas() AsgProfileMetadataArrayOutput {
	return o.ApplyT(func(v *AsgProfile) AsgProfileMetadataArrayOutput { return v.Metadatas }).(AsgProfileMetadataArrayOutput)
}

// The minimum size of the Auto Scaling Group.
func (o AsgProfileOutput) MinInstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.IntOutput { return v.MinInstanceCount }).(pulumi.IntOutput)
}

// A map of tags to assign to the resource. Example - `AllocationTags` can be passed as tag key with any value.
func (o AsgProfileOutput) MinionTags() AsgProfileMinionTagArrayOutput {
	return o.ApplyT(func(v *AsgProfile) AsgProfileMinionTagArrayOutput { return v.MinionTags }).(AsgProfileMinionTagArrayOutput)
}

// An optional list of custom network interface configurations to use when creating the host.
func (o AsgProfileOutput) NetworkInterfaces() AsgProfileNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *AsgProfile) AsgProfileNetworkInterfaceArrayOutput { return v.NetworkInterfaces }).(AsgProfileNetworkInterfaceArrayOutput)
}

// Bootstrap an EKS host with Duplo's user data, prepending it to custom user data if also provided.
func (o AsgProfileOutput) PrependUserData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.BoolPtrOutput { return v.PrependUserData }).(pulumi.BoolPtrOutput)
}

// The primary public IP address assigned to the host.
func (o AsgProfileOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringOutput { return v.PublicIpAddress }).(pulumi.StringOutput)
}

func (o AsgProfileOutput) Tags() AsgProfileTagArrayOutput {
	return o.ApplyT(func(v *AsgProfile) AsgProfileTagArrayOutput { return v.Tags }).(AsgProfileTagArrayOutput)
}

// Specify taints to attach to the nodes, to repel other nodes with different toleration
func (o AsgProfileOutput) Taints() AsgProfileTaintArrayOutput {
	return o.ApplyT(func(v *AsgProfile) AsgProfileTaintArrayOutput { return v.Taints }).(AsgProfileTaintArrayOutput)
}

// The GUID of the tenant that the host will be created in.
func (o AsgProfileOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Whether or not to use spot instances.
func (o AsgProfileOutput) UseSpotInstances() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.BoolPtrOutput { return v.UseSpotInstances }).(pulumi.BoolPtrOutput)
}

// The name of the tenant that the host will be created in.
func (o AsgProfileOutput) UserAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.StringOutput { return v.UserAccount }).(pulumi.StringOutput)
}

// Block to specify additional or secondary volume beyond the root device
func (o AsgProfileOutput) Volumes() AsgProfileVolumeArrayOutput {
	return o.ApplyT(func(v *AsgProfile) AsgProfileVolumeArrayOutput { return v.Volumes }).(AsgProfileVolumeArrayOutput)
}

// Whether or not to wait until ASG instances to be healthy, after creation.
func (o AsgProfileOutput) WaitForCapacity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.BoolPtrOutput { return v.WaitForCapacity }).(pulumi.BoolPtrOutput)
}

// The availability zone to launch the host in, expressed as a number and starting at 0.
//
// Deprecated: zone has been deprecated instead use zones
func (o AsgProfileOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.IntPtrOutput { return v.Zone }).(pulumi.IntPtrOutput)
}

// The multi availability zone to launch the asg in, expressed as a number and starting at 0 - Automatic 1 - Zone A 2 -
// Zone B
func (o AsgProfileOutput) Zones() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AsgProfile) pulumi.IntArrayOutput { return v.Zones }).(pulumi.IntArrayOutput)
}

type AsgProfileArrayOutput struct{ *pulumi.OutputState }

func (AsgProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AsgProfile)(nil)).Elem()
}

func (o AsgProfileArrayOutput) ToAsgProfileArrayOutput() AsgProfileArrayOutput {
	return o
}

func (o AsgProfileArrayOutput) ToAsgProfileArrayOutputWithContext(ctx context.Context) AsgProfileArrayOutput {
	return o
}

func (o AsgProfileArrayOutput) Index(i pulumi.IntInput) AsgProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AsgProfile {
		return vs[0].([]*AsgProfile)[vs[1].(int)]
	}).(AsgProfileOutput)
}

type AsgProfileMapOutput struct{ *pulumi.OutputState }

func (AsgProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AsgProfile)(nil)).Elem()
}

func (o AsgProfileMapOutput) ToAsgProfileMapOutput() AsgProfileMapOutput {
	return o
}

func (o AsgProfileMapOutput) ToAsgProfileMapOutputWithContext(ctx context.Context) AsgProfileMapOutput {
	return o
}

func (o AsgProfileMapOutput) MapIndex(k pulumi.StringInput) AsgProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AsgProfile {
		return vs[0].(map[string]*AsgProfile)[vs[1].(string)]
	}).(AsgProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AsgProfileInput)(nil)).Elem(), &AsgProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsgProfileArrayInput)(nil)).Elem(), AsgProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AsgProfileMapInput)(nil)).Elem(), AsgProfileMap{})
	pulumi.RegisterOutputType(AsgProfileOutput{})
	pulumi.RegisterOutputType(AsgProfileArrayOutput{})
	pulumi.RegisterOutputType(AsgProfileMapOutput{})
}
