// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureVaultBackupPolicy` manages a Vault Backup Policy in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := duplocloud.NewAzureVaultBackupPolicy(ctx, "backup_policy", &duplocloud.AzureVaultBackupPolicyArgs{
//				InfraName: pulumi.String("test-infra"),
//				Name:      pulumi.String("rt01"),
//				Timezone:  pulumi.String("UTC"),
//				Backup: &duplocloud.AzureVaultBackupPolicyBackupArgs{
//					Frequency: pulumi.String("Daily"),
//					Time:      pulumi.String("23:00"),
//				},
//				RetentionDaily: &duplocloud.AzureVaultBackupPolicyRetentionDailyArgs{
//					Count: pulumi.Int(10),
//				},
//				RetentionWeekly: &duplocloud.AzureVaultBackupPolicyRetentionWeeklyArgs{
//					Count: pulumi.Int(42),
//					Weekdays: pulumi.StringArray{
//						pulumi.String("Sunday"),
//						pulumi.String("Wednesday"),
//						pulumi.String("Friday"),
//						pulumi.String("Saturday"),
//					},
//				},
//				RetentionMonthly: &duplocloud.AzureVaultBackupPolicyRetentionMonthlyArgs{
//					Count: pulumi.Int(7),
//					Weekdays: pulumi.StringArray{
//						pulumi.String("Sunday"),
//						pulumi.String("Wednesday"),
//					},
//					Weeks: pulumi.StringArray{
//						pulumi.String("First"),
//						pulumi.String("Last"),
//					},
//				},
//				RetentionYearly: &duplocloud.AzureVaultBackupPolicyRetentionYearlyArgs{
//					Count: pulumi.Int(77),
//					Weekdays: pulumi.StringArray{
//						pulumi.String("Sunday"),
//					},
//					Weeks: pulumi.StringArray{
//						pulumi.String("Last"),
//					},
//					Months: pulumi.StringArray{
//						pulumi.String("January"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing Azure Vault Backup Policy
//
//   - *INFRA_NAME* is the Duplo infra name.
//
//   - *NAME* is the name of the Azure Vault Backup Policy
//
// ```sh
// $ pulumi import duplocloud:index/azureVaultBackupPolicy:AzureVaultBackupPolicy backup_policy *INFRA_NAME*/*NAME*
// ```
type AzureVaultBackupPolicy struct {
	pulumi.CustomResourceState

	// Azure id for vault backup policy.
	AzureId pulumi.StringOutput                `pulumi:"azureId"`
	Backup  AzureVaultBackupPolicyBackupOutput `pulumi:"backup"`
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName pulumi.StringOutput `pulumi:"infraName"`
	// Specifies the instant restore retention range in days.
	InstantRestoreRetentionDays pulumi.IntOutput `pulumi:"instantRestoreRetentionDays"`
	// Specifies the name of the vault backup policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// Type of the Backup Policy. Defaults to `V1`.
	PolicyType       pulumi.StringPtrOutput                          `pulumi:"policyType"`
	RetentionDaily   AzureVaultBackupPolicyRetentionDailyPtrOutput   `pulumi:"retentionDaily"`
	RetentionMonthly AzureVaultBackupPolicyRetentionMonthlyPtrOutput `pulumi:"retentionMonthly"`
	RetentionWeekly  AzureVaultBackupPolicyRetentionWeeklyPtrOutput  `pulumi:"retentionWeekly"`
	RetentionYearly  AzureVaultBackupPolicyRetentionYearlyPtrOutput  `pulumi:"retentionYearly"`
	// Specifies the timezone. Defaults to `UTC`.
	Timezone pulumi.StringPtrOutput `pulumi:"timezone"`
}

// NewAzureVaultBackupPolicy registers a new resource with the given unique name, arguments, and options.
func NewAzureVaultBackupPolicy(ctx *pulumi.Context,
	name string, args *AzureVaultBackupPolicyArgs, opts ...pulumi.ResourceOption) (*AzureVaultBackupPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Backup == nil {
		return nil, errors.New("invalid value for required argument 'Backup'")
	}
	if args.InfraName == nil {
		return nil, errors.New("invalid value for required argument 'InfraName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureVaultBackupPolicy
	err := ctx.RegisterResource("duplocloud:index/azureVaultBackupPolicy:AzureVaultBackupPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureVaultBackupPolicy gets an existing AzureVaultBackupPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureVaultBackupPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureVaultBackupPolicyState, opts ...pulumi.ResourceOption) (*AzureVaultBackupPolicy, error) {
	var resource AzureVaultBackupPolicy
	err := ctx.ReadResource("duplocloud:index/azureVaultBackupPolicy:AzureVaultBackupPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureVaultBackupPolicy resources.
type azureVaultBackupPolicyState struct {
	// Azure id for vault backup policy.
	AzureId *string                       `pulumi:"azureId"`
	Backup  *AzureVaultBackupPolicyBackup `pulumi:"backup"`
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName *string `pulumi:"infraName"`
	// Specifies the instant restore retention range in days.
	InstantRestoreRetentionDays *int `pulumi:"instantRestoreRetentionDays"`
	// Specifies the name of the vault backup policy.
	Name *string `pulumi:"name"`
	// Type of the Backup Policy. Defaults to `V1`.
	PolicyType       *string                                 `pulumi:"policyType"`
	RetentionDaily   *AzureVaultBackupPolicyRetentionDaily   `pulumi:"retentionDaily"`
	RetentionMonthly *AzureVaultBackupPolicyRetentionMonthly `pulumi:"retentionMonthly"`
	RetentionWeekly  *AzureVaultBackupPolicyRetentionWeekly  `pulumi:"retentionWeekly"`
	RetentionYearly  *AzureVaultBackupPolicyRetentionYearly  `pulumi:"retentionYearly"`
	// Specifies the timezone. Defaults to `UTC`.
	Timezone *string `pulumi:"timezone"`
}

type AzureVaultBackupPolicyState struct {
	// Azure id for vault backup policy.
	AzureId pulumi.StringPtrInput
	Backup  AzureVaultBackupPolicyBackupPtrInput
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName pulumi.StringPtrInput
	// Specifies the instant restore retention range in days.
	InstantRestoreRetentionDays pulumi.IntPtrInput
	// Specifies the name of the vault backup policy.
	Name pulumi.StringPtrInput
	// Type of the Backup Policy. Defaults to `V1`.
	PolicyType       pulumi.StringPtrInput
	RetentionDaily   AzureVaultBackupPolicyRetentionDailyPtrInput
	RetentionMonthly AzureVaultBackupPolicyRetentionMonthlyPtrInput
	RetentionWeekly  AzureVaultBackupPolicyRetentionWeeklyPtrInput
	RetentionYearly  AzureVaultBackupPolicyRetentionYearlyPtrInput
	// Specifies the timezone. Defaults to `UTC`.
	Timezone pulumi.StringPtrInput
}

func (AzureVaultBackupPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureVaultBackupPolicyState)(nil)).Elem()
}

type azureVaultBackupPolicyArgs struct {
	Backup AzureVaultBackupPolicyBackup `pulumi:"backup"`
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName string `pulumi:"infraName"`
	// Specifies the instant restore retention range in days.
	InstantRestoreRetentionDays *int `pulumi:"instantRestoreRetentionDays"`
	// Specifies the name of the vault backup policy.
	Name *string `pulumi:"name"`
	// Type of the Backup Policy. Defaults to `V1`.
	PolicyType       *string                                 `pulumi:"policyType"`
	RetentionDaily   *AzureVaultBackupPolicyRetentionDaily   `pulumi:"retentionDaily"`
	RetentionMonthly *AzureVaultBackupPolicyRetentionMonthly `pulumi:"retentionMonthly"`
	RetentionWeekly  *AzureVaultBackupPolicyRetentionWeekly  `pulumi:"retentionWeekly"`
	RetentionYearly  *AzureVaultBackupPolicyRetentionYearly  `pulumi:"retentionYearly"`
	// Specifies the timezone. Defaults to `UTC`.
	Timezone *string `pulumi:"timezone"`
}

// The set of arguments for constructing a AzureVaultBackupPolicy resource.
type AzureVaultBackupPolicyArgs struct {
	Backup AzureVaultBackupPolicyBackupInput
	// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
	InfraName pulumi.StringInput
	// Specifies the instant restore retention range in days.
	InstantRestoreRetentionDays pulumi.IntPtrInput
	// Specifies the name of the vault backup policy.
	Name pulumi.StringPtrInput
	// Type of the Backup Policy. Defaults to `V1`.
	PolicyType       pulumi.StringPtrInput
	RetentionDaily   AzureVaultBackupPolicyRetentionDailyPtrInput
	RetentionMonthly AzureVaultBackupPolicyRetentionMonthlyPtrInput
	RetentionWeekly  AzureVaultBackupPolicyRetentionWeeklyPtrInput
	RetentionYearly  AzureVaultBackupPolicyRetentionYearlyPtrInput
	// Specifies the timezone. Defaults to `UTC`.
	Timezone pulumi.StringPtrInput
}

func (AzureVaultBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureVaultBackupPolicyArgs)(nil)).Elem()
}

type AzureVaultBackupPolicyInput interface {
	pulumi.Input

	ToAzureVaultBackupPolicyOutput() AzureVaultBackupPolicyOutput
	ToAzureVaultBackupPolicyOutputWithContext(ctx context.Context) AzureVaultBackupPolicyOutput
}

func (*AzureVaultBackupPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVaultBackupPolicy)(nil)).Elem()
}

func (i *AzureVaultBackupPolicy) ToAzureVaultBackupPolicyOutput() AzureVaultBackupPolicyOutput {
	return i.ToAzureVaultBackupPolicyOutputWithContext(context.Background())
}

func (i *AzureVaultBackupPolicy) ToAzureVaultBackupPolicyOutputWithContext(ctx context.Context) AzureVaultBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVaultBackupPolicyOutput)
}

// AzureVaultBackupPolicyArrayInput is an input type that accepts AzureVaultBackupPolicyArray and AzureVaultBackupPolicyArrayOutput values.
// You can construct a concrete instance of `AzureVaultBackupPolicyArrayInput` via:
//
//	AzureVaultBackupPolicyArray{ AzureVaultBackupPolicyArgs{...} }
type AzureVaultBackupPolicyArrayInput interface {
	pulumi.Input

	ToAzureVaultBackupPolicyArrayOutput() AzureVaultBackupPolicyArrayOutput
	ToAzureVaultBackupPolicyArrayOutputWithContext(context.Context) AzureVaultBackupPolicyArrayOutput
}

type AzureVaultBackupPolicyArray []AzureVaultBackupPolicyInput

func (AzureVaultBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureVaultBackupPolicy)(nil)).Elem()
}

func (i AzureVaultBackupPolicyArray) ToAzureVaultBackupPolicyArrayOutput() AzureVaultBackupPolicyArrayOutput {
	return i.ToAzureVaultBackupPolicyArrayOutputWithContext(context.Background())
}

func (i AzureVaultBackupPolicyArray) ToAzureVaultBackupPolicyArrayOutputWithContext(ctx context.Context) AzureVaultBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVaultBackupPolicyArrayOutput)
}

// AzureVaultBackupPolicyMapInput is an input type that accepts AzureVaultBackupPolicyMap and AzureVaultBackupPolicyMapOutput values.
// You can construct a concrete instance of `AzureVaultBackupPolicyMapInput` via:
//
//	AzureVaultBackupPolicyMap{ "key": AzureVaultBackupPolicyArgs{...} }
type AzureVaultBackupPolicyMapInput interface {
	pulumi.Input

	ToAzureVaultBackupPolicyMapOutput() AzureVaultBackupPolicyMapOutput
	ToAzureVaultBackupPolicyMapOutputWithContext(context.Context) AzureVaultBackupPolicyMapOutput
}

type AzureVaultBackupPolicyMap map[string]AzureVaultBackupPolicyInput

func (AzureVaultBackupPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureVaultBackupPolicy)(nil)).Elem()
}

func (i AzureVaultBackupPolicyMap) ToAzureVaultBackupPolicyMapOutput() AzureVaultBackupPolicyMapOutput {
	return i.ToAzureVaultBackupPolicyMapOutputWithContext(context.Background())
}

func (i AzureVaultBackupPolicyMap) ToAzureVaultBackupPolicyMapOutputWithContext(ctx context.Context) AzureVaultBackupPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVaultBackupPolicyMapOutput)
}

type AzureVaultBackupPolicyOutput struct{ *pulumi.OutputState }

func (AzureVaultBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVaultBackupPolicy)(nil)).Elem()
}

func (o AzureVaultBackupPolicyOutput) ToAzureVaultBackupPolicyOutput() AzureVaultBackupPolicyOutput {
	return o
}

func (o AzureVaultBackupPolicyOutput) ToAzureVaultBackupPolicyOutputWithContext(ctx context.Context) AzureVaultBackupPolicyOutput {
	return o
}

// Azure id for vault backup policy.
func (o AzureVaultBackupPolicyOutput) AzureId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) pulumi.StringOutput { return v.AzureId }).(pulumi.StringOutput)
}

func (o AzureVaultBackupPolicyOutput) Backup() AzureVaultBackupPolicyBackupOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) AzureVaultBackupPolicyBackupOutput { return v.Backup }).(AzureVaultBackupPolicyBackupOutput)
}

// The name of the infrastructure.  Infrastructure names are globally unique and less than 13 characters.
func (o AzureVaultBackupPolicyOutput) InfraName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) pulumi.StringOutput { return v.InfraName }).(pulumi.StringOutput)
}

// Specifies the instant restore retention range in days.
func (o AzureVaultBackupPolicyOutput) InstantRestoreRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) pulumi.IntOutput { return v.InstantRestoreRetentionDays }).(pulumi.IntOutput)
}

// Specifies the name of the vault backup policy.
func (o AzureVaultBackupPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Type of the Backup Policy. Defaults to `V1`.
func (o AzureVaultBackupPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) pulumi.StringPtrOutput { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o AzureVaultBackupPolicyOutput) RetentionDaily() AzureVaultBackupPolicyRetentionDailyPtrOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) AzureVaultBackupPolicyRetentionDailyPtrOutput { return v.RetentionDaily }).(AzureVaultBackupPolicyRetentionDailyPtrOutput)
}

func (o AzureVaultBackupPolicyOutput) RetentionMonthly() AzureVaultBackupPolicyRetentionMonthlyPtrOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) AzureVaultBackupPolicyRetentionMonthlyPtrOutput {
		return v.RetentionMonthly
	}).(AzureVaultBackupPolicyRetentionMonthlyPtrOutput)
}

func (o AzureVaultBackupPolicyOutput) RetentionWeekly() AzureVaultBackupPolicyRetentionWeeklyPtrOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) AzureVaultBackupPolicyRetentionWeeklyPtrOutput {
		return v.RetentionWeekly
	}).(AzureVaultBackupPolicyRetentionWeeklyPtrOutput)
}

func (o AzureVaultBackupPolicyOutput) RetentionYearly() AzureVaultBackupPolicyRetentionYearlyPtrOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) AzureVaultBackupPolicyRetentionYearlyPtrOutput {
		return v.RetentionYearly
	}).(AzureVaultBackupPolicyRetentionYearlyPtrOutput)
}

// Specifies the timezone. Defaults to `UTC`.
func (o AzureVaultBackupPolicyOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVaultBackupPolicy) pulumi.StringPtrOutput { return v.Timezone }).(pulumi.StringPtrOutput)
}

type AzureVaultBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (AzureVaultBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureVaultBackupPolicy)(nil)).Elem()
}

func (o AzureVaultBackupPolicyArrayOutput) ToAzureVaultBackupPolicyArrayOutput() AzureVaultBackupPolicyArrayOutput {
	return o
}

func (o AzureVaultBackupPolicyArrayOutput) ToAzureVaultBackupPolicyArrayOutputWithContext(ctx context.Context) AzureVaultBackupPolicyArrayOutput {
	return o
}

func (o AzureVaultBackupPolicyArrayOutput) Index(i pulumi.IntInput) AzureVaultBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureVaultBackupPolicy {
		return vs[0].([]*AzureVaultBackupPolicy)[vs[1].(int)]
	}).(AzureVaultBackupPolicyOutput)
}

type AzureVaultBackupPolicyMapOutput struct{ *pulumi.OutputState }

func (AzureVaultBackupPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureVaultBackupPolicy)(nil)).Elem()
}

func (o AzureVaultBackupPolicyMapOutput) ToAzureVaultBackupPolicyMapOutput() AzureVaultBackupPolicyMapOutput {
	return o
}

func (o AzureVaultBackupPolicyMapOutput) ToAzureVaultBackupPolicyMapOutputWithContext(ctx context.Context) AzureVaultBackupPolicyMapOutput {
	return o
}

func (o AzureVaultBackupPolicyMapOutput) MapIndex(k pulumi.StringInput) AzureVaultBackupPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureVaultBackupPolicy {
		return vs[0].(map[string]*AzureVaultBackupPolicy)[vs[1].(string)]
	}).(AzureVaultBackupPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureVaultBackupPolicyInput)(nil)).Elem(), &AzureVaultBackupPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureVaultBackupPolicyArrayInput)(nil)).Elem(), AzureVaultBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureVaultBackupPolicyMapInput)(nil)).Elem(), AzureVaultBackupPolicyMap{})
	pulumi.RegisterOutputType(AzureVaultBackupPolicyOutput{})
	pulumi.RegisterOutputType(AzureVaultBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(AzureVaultBackupPolicyMapOutput{})
}
