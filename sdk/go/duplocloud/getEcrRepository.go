// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `getEcrRepository` get ecr repository in a Duplo tenant.
func GetEcrRepository(ctx *pulumi.Context, args *GetEcrRepositoryArgs, opts ...pulumi.InvokeOption) (*GetEcrRepositoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEcrRepositoryResult
	err := ctx.Invoke("duplocloud:index/getEcrRepository:getEcrRepository", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEcrRepository.
type GetEcrRepositoryArgs struct {
	// The name of the ECR Repository.
	Name string `pulumi:"name"`
	// The GUID of the tenant in which to list the hosts.
	TenantId string `pulumi:"tenantId"`
}

// A collection of values returned by getEcrRepository.
type GetEcrRepositoryResult struct {
	Arn                   string `pulumi:"arn"`
	EnableScanImageOnPush bool   `pulumi:"enableScanImageOnPush"`
	EnableTagImmutability bool   `pulumi:"enableTagImmutability"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	KmsEncryptionKey string `pulumi:"kmsEncryptionKey"`
	// The name of the ECR Repository.
	Name          string `pulumi:"name"`
	RegistryId    string `pulumi:"registryId"`
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The GUID of the tenant in which to list the hosts.
	TenantId string `pulumi:"tenantId"`
}

func GetEcrRepositoryOutput(ctx *pulumi.Context, args GetEcrRepositoryOutputArgs, opts ...pulumi.InvokeOption) GetEcrRepositoryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEcrRepositoryResultOutput, error) {
			args := v.(GetEcrRepositoryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getEcrRepository:getEcrRepository", args, GetEcrRepositoryResultOutput{}, options).(GetEcrRepositoryResultOutput), nil
		}).(GetEcrRepositoryResultOutput)
}

// A collection of arguments for invoking getEcrRepository.
type GetEcrRepositoryOutputArgs struct {
	// The name of the ECR Repository.
	Name pulumi.StringInput `pulumi:"name"`
	// The GUID of the tenant in which to list the hosts.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetEcrRepositoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcrRepositoryArgs)(nil)).Elem()
}

// A collection of values returned by getEcrRepository.
type GetEcrRepositoryResultOutput struct{ *pulumi.OutputState }

func (GetEcrRepositoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcrRepositoryResult)(nil)).Elem()
}

func (o GetEcrRepositoryResultOutput) ToGetEcrRepositoryResultOutput() GetEcrRepositoryResultOutput {
	return o
}

func (o GetEcrRepositoryResultOutput) ToGetEcrRepositoryResultOutputWithContext(ctx context.Context) GetEcrRepositoryResultOutput {
	return o
}

func (o GetEcrRepositoryResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcrRepositoryResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o GetEcrRepositoryResultOutput) EnableScanImageOnPush() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEcrRepositoryResult) bool { return v.EnableScanImageOnPush }).(pulumi.BoolOutput)
}

func (o GetEcrRepositoryResultOutput) EnableTagImmutability() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEcrRepositoryResult) bool { return v.EnableTagImmutability }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEcrRepositoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcrRepositoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEcrRepositoryResultOutput) KmsEncryptionKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcrRepositoryResult) string { return v.KmsEncryptionKey }).(pulumi.StringOutput)
}

// The name of the ECR Repository.
func (o GetEcrRepositoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcrRepositoryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEcrRepositoryResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcrRepositoryResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

func (o GetEcrRepositoryResultOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcrRepositoryResult) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The GUID of the tenant in which to list the hosts.
func (o GetEcrRepositoryResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcrRepositoryResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEcrRepositoryResultOutput{})
}
