// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsEfsLifecyclePolicy` Provides an Elastic File System (EFS) File System Lifecycle Policy resource in DuploCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			efs, err := duplocloud.NewAwsEfsFileSystem(ctx, "efs", &duplocloud.AwsEfsFileSystemArgs{
//				TenantId:        myapp.TenantId,
//				Name:            pulumi.String("efs-test"),
//				PerformanceMode: pulumi.String("generalPurpose"),
//				ThroughputMode:  pulumi.String("elastic"),
//				Backup:          pulumi.Bool(true),
//				Encrypted:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsEfsLifecyclePolicy(ctx, "efs_policy", &duplocloud.AwsEfsLifecyclePolicyArgs{
//				TenantId:     myapp.TenantId,
//				FileSystemId: efs.FileSystemId,
//				LifecyclePolicies: duplocloud.AwsEfsLifecyclePolicyLifecyclePolicyArray{
//					&duplocloud.AwsEfsLifecyclePolicyLifecyclePolicyArgs{
//						TransitionToIa: pulumi.String("AFTER_7_DAYS"),
//					},
//					&duplocloud.AwsEfsLifecyclePolicyLifecyclePolicyArgs{
//						TransitionToArchive: pulumi.String("AFTER_14_DAYS"),
//					},
//					&duplocloud.AwsEfsLifecyclePolicyLifecyclePolicyArgs{
//						TransitionToPrimaryStorageClass: pulumi.String("AFTER_1_ACCESS"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS Elastic File System
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *FILE_SYSTEM_ID* is the ID of the AWS Elastic File System
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsEfsLifecyclePolicy:AwsEfsLifecyclePolicy efslifecycle *TENANT_ID*/*FILE_SYSTEM_ID*
// ```
type AwsEfsLifecyclePolicy struct {
	pulumi.CustomResourceState

	FileSystemId      pulumi.StringOutput                             `pulumi:"fileSystemId"`
	LifecyclePolicies AwsEfsLifecyclePolicyLifecyclePolicyArrayOutput `pulumi:"lifecyclePolicies"`
	TenantId          pulumi.StringOutput                             `pulumi:"tenantId"`
}

// NewAwsEfsLifecyclePolicy registers a new resource with the given unique name, arguments, and options.
func NewAwsEfsLifecyclePolicy(ctx *pulumi.Context,
	name string, args *AwsEfsLifecyclePolicyArgs, opts ...pulumi.ResourceOption) (*AwsEfsLifecyclePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FileSystemId == nil {
		return nil, errors.New("invalid value for required argument 'FileSystemId'")
	}
	if args.LifecyclePolicies == nil {
		return nil, errors.New("invalid value for required argument 'LifecyclePolicies'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsEfsLifecyclePolicy
	err := ctx.RegisterResource("duplocloud:index/awsEfsLifecyclePolicy:AwsEfsLifecyclePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsEfsLifecyclePolicy gets an existing AwsEfsLifecyclePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsEfsLifecyclePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsEfsLifecyclePolicyState, opts ...pulumi.ResourceOption) (*AwsEfsLifecyclePolicy, error) {
	var resource AwsEfsLifecyclePolicy
	err := ctx.ReadResource("duplocloud:index/awsEfsLifecyclePolicy:AwsEfsLifecyclePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsEfsLifecyclePolicy resources.
type awsEfsLifecyclePolicyState struct {
	FileSystemId      *string                                `pulumi:"fileSystemId"`
	LifecyclePolicies []AwsEfsLifecyclePolicyLifecyclePolicy `pulumi:"lifecyclePolicies"`
	TenantId          *string                                `pulumi:"tenantId"`
}

type AwsEfsLifecyclePolicyState struct {
	FileSystemId      pulumi.StringPtrInput
	LifecyclePolicies AwsEfsLifecyclePolicyLifecyclePolicyArrayInput
	TenantId          pulumi.StringPtrInput
}

func (AwsEfsLifecyclePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsEfsLifecyclePolicyState)(nil)).Elem()
}

type awsEfsLifecyclePolicyArgs struct {
	FileSystemId      string                                 `pulumi:"fileSystemId"`
	LifecyclePolicies []AwsEfsLifecyclePolicyLifecyclePolicy `pulumi:"lifecyclePolicies"`
	TenantId          string                                 `pulumi:"tenantId"`
}

// The set of arguments for constructing a AwsEfsLifecyclePolicy resource.
type AwsEfsLifecyclePolicyArgs struct {
	FileSystemId      pulumi.StringInput
	LifecyclePolicies AwsEfsLifecyclePolicyLifecyclePolicyArrayInput
	TenantId          pulumi.StringInput
}

func (AwsEfsLifecyclePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsEfsLifecyclePolicyArgs)(nil)).Elem()
}

type AwsEfsLifecyclePolicyInput interface {
	pulumi.Input

	ToAwsEfsLifecyclePolicyOutput() AwsEfsLifecyclePolicyOutput
	ToAwsEfsLifecyclePolicyOutputWithContext(ctx context.Context) AwsEfsLifecyclePolicyOutput
}

func (*AwsEfsLifecyclePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsEfsLifecyclePolicy)(nil)).Elem()
}

func (i *AwsEfsLifecyclePolicy) ToAwsEfsLifecyclePolicyOutput() AwsEfsLifecyclePolicyOutput {
	return i.ToAwsEfsLifecyclePolicyOutputWithContext(context.Background())
}

func (i *AwsEfsLifecyclePolicy) ToAwsEfsLifecyclePolicyOutputWithContext(ctx context.Context) AwsEfsLifecyclePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsEfsLifecyclePolicyOutput)
}

// AwsEfsLifecyclePolicyArrayInput is an input type that accepts AwsEfsLifecyclePolicyArray and AwsEfsLifecyclePolicyArrayOutput values.
// You can construct a concrete instance of `AwsEfsLifecyclePolicyArrayInput` via:
//
//	AwsEfsLifecyclePolicyArray{ AwsEfsLifecyclePolicyArgs{...} }
type AwsEfsLifecyclePolicyArrayInput interface {
	pulumi.Input

	ToAwsEfsLifecyclePolicyArrayOutput() AwsEfsLifecyclePolicyArrayOutput
	ToAwsEfsLifecyclePolicyArrayOutputWithContext(context.Context) AwsEfsLifecyclePolicyArrayOutput
}

type AwsEfsLifecyclePolicyArray []AwsEfsLifecyclePolicyInput

func (AwsEfsLifecyclePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsEfsLifecyclePolicy)(nil)).Elem()
}

func (i AwsEfsLifecyclePolicyArray) ToAwsEfsLifecyclePolicyArrayOutput() AwsEfsLifecyclePolicyArrayOutput {
	return i.ToAwsEfsLifecyclePolicyArrayOutputWithContext(context.Background())
}

func (i AwsEfsLifecyclePolicyArray) ToAwsEfsLifecyclePolicyArrayOutputWithContext(ctx context.Context) AwsEfsLifecyclePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsEfsLifecyclePolicyArrayOutput)
}

// AwsEfsLifecyclePolicyMapInput is an input type that accepts AwsEfsLifecyclePolicyMap and AwsEfsLifecyclePolicyMapOutput values.
// You can construct a concrete instance of `AwsEfsLifecyclePolicyMapInput` via:
//
//	AwsEfsLifecyclePolicyMap{ "key": AwsEfsLifecyclePolicyArgs{...} }
type AwsEfsLifecyclePolicyMapInput interface {
	pulumi.Input

	ToAwsEfsLifecyclePolicyMapOutput() AwsEfsLifecyclePolicyMapOutput
	ToAwsEfsLifecyclePolicyMapOutputWithContext(context.Context) AwsEfsLifecyclePolicyMapOutput
}

type AwsEfsLifecyclePolicyMap map[string]AwsEfsLifecyclePolicyInput

func (AwsEfsLifecyclePolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsEfsLifecyclePolicy)(nil)).Elem()
}

func (i AwsEfsLifecyclePolicyMap) ToAwsEfsLifecyclePolicyMapOutput() AwsEfsLifecyclePolicyMapOutput {
	return i.ToAwsEfsLifecyclePolicyMapOutputWithContext(context.Background())
}

func (i AwsEfsLifecyclePolicyMap) ToAwsEfsLifecyclePolicyMapOutputWithContext(ctx context.Context) AwsEfsLifecyclePolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsEfsLifecyclePolicyMapOutput)
}

type AwsEfsLifecyclePolicyOutput struct{ *pulumi.OutputState }

func (AwsEfsLifecyclePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsEfsLifecyclePolicy)(nil)).Elem()
}

func (o AwsEfsLifecyclePolicyOutput) ToAwsEfsLifecyclePolicyOutput() AwsEfsLifecyclePolicyOutput {
	return o
}

func (o AwsEfsLifecyclePolicyOutput) ToAwsEfsLifecyclePolicyOutputWithContext(ctx context.Context) AwsEfsLifecyclePolicyOutput {
	return o
}

func (o AwsEfsLifecyclePolicyOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsEfsLifecyclePolicy) pulumi.StringOutput { return v.FileSystemId }).(pulumi.StringOutput)
}

func (o AwsEfsLifecyclePolicyOutput) LifecyclePolicies() AwsEfsLifecyclePolicyLifecyclePolicyArrayOutput {
	return o.ApplyT(func(v *AwsEfsLifecyclePolicy) AwsEfsLifecyclePolicyLifecyclePolicyArrayOutput {
		return v.LifecyclePolicies
	}).(AwsEfsLifecyclePolicyLifecyclePolicyArrayOutput)
}

func (o AwsEfsLifecyclePolicyOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsEfsLifecyclePolicy) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AwsEfsLifecyclePolicyArrayOutput struct{ *pulumi.OutputState }

func (AwsEfsLifecyclePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsEfsLifecyclePolicy)(nil)).Elem()
}

func (o AwsEfsLifecyclePolicyArrayOutput) ToAwsEfsLifecyclePolicyArrayOutput() AwsEfsLifecyclePolicyArrayOutput {
	return o
}

func (o AwsEfsLifecyclePolicyArrayOutput) ToAwsEfsLifecyclePolicyArrayOutputWithContext(ctx context.Context) AwsEfsLifecyclePolicyArrayOutput {
	return o
}

func (o AwsEfsLifecyclePolicyArrayOutput) Index(i pulumi.IntInput) AwsEfsLifecyclePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsEfsLifecyclePolicy {
		return vs[0].([]*AwsEfsLifecyclePolicy)[vs[1].(int)]
	}).(AwsEfsLifecyclePolicyOutput)
}

type AwsEfsLifecyclePolicyMapOutput struct{ *pulumi.OutputState }

func (AwsEfsLifecyclePolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsEfsLifecyclePolicy)(nil)).Elem()
}

func (o AwsEfsLifecyclePolicyMapOutput) ToAwsEfsLifecyclePolicyMapOutput() AwsEfsLifecyclePolicyMapOutput {
	return o
}

func (o AwsEfsLifecyclePolicyMapOutput) ToAwsEfsLifecyclePolicyMapOutputWithContext(ctx context.Context) AwsEfsLifecyclePolicyMapOutput {
	return o
}

func (o AwsEfsLifecyclePolicyMapOutput) MapIndex(k pulumi.StringInput) AwsEfsLifecyclePolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsEfsLifecyclePolicy {
		return vs[0].(map[string]*AwsEfsLifecyclePolicy)[vs[1].(string)]
	}).(AwsEfsLifecyclePolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsEfsLifecyclePolicyInput)(nil)).Elem(), &AwsEfsLifecyclePolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsEfsLifecyclePolicyArrayInput)(nil)).Elem(), AwsEfsLifecyclePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsEfsLifecyclePolicyMapInput)(nil)).Elem(), AwsEfsLifecyclePolicyMap{})
	pulumi.RegisterOutputType(AwsEfsLifecyclePolicyOutput{})
	pulumi.RegisterOutputType(AwsEfsLifecyclePolicyArrayOutput{})
	pulumi.RegisterOutputType(AwsEfsLifecyclePolicyMapOutput{})
}
