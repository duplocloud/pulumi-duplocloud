// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `PlanImages` retrieves a list of images for a given plan.
func LookupPlanImages(ctx *pulumi.Context, args *LookupPlanImagesArgs, opts ...pulumi.InvokeOption) (*LookupPlanImagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPlanImagesResult
	err := ctx.Invoke("duplocloud:index/getPlanImages:getPlanImages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlanImages.
type LookupPlanImagesArgs struct {
	// The plan ID
	PlanId string `pulumi:"planId"`
}

// A collection of values returned by getPlanImages.
type LookupPlanImagesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of images for this plan.
	Images []GetPlanImagesImage `pulumi:"images"`
	// The plan ID
	PlanId string `pulumi:"planId"`
}

func LookupPlanImagesOutput(ctx *pulumi.Context, args LookupPlanImagesOutputArgs, opts ...pulumi.InvokeOption) LookupPlanImagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPlanImagesResultOutput, error) {
			args := v.(LookupPlanImagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("duplocloud:index/getPlanImages:getPlanImages", args, LookupPlanImagesResultOutput{}, options).(LookupPlanImagesResultOutput), nil
		}).(LookupPlanImagesResultOutput)
}

// A collection of arguments for invoking getPlanImages.
type LookupPlanImagesOutputArgs struct {
	// The plan ID
	PlanId pulumi.StringInput `pulumi:"planId"`
}

func (LookupPlanImagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanImagesArgs)(nil)).Elem()
}

// A collection of values returned by getPlanImages.
type LookupPlanImagesResultOutput struct{ *pulumi.OutputState }

func (LookupPlanImagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanImagesResult)(nil)).Elem()
}

func (o LookupPlanImagesResultOutput) ToLookupPlanImagesResultOutput() LookupPlanImagesResultOutput {
	return o
}

func (o LookupPlanImagesResultOutput) ToLookupPlanImagesResultOutputWithContext(ctx context.Context) LookupPlanImagesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPlanImagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanImagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of images for this plan.
func (o LookupPlanImagesResultOutput) Images() GetPlanImagesImageArrayOutput {
	return o.ApplyT(func(v LookupPlanImagesResult) []GetPlanImagesImage { return v.Images }).(GetPlanImagesImageArrayOutput)
}

// The plan ID
func (o LookupPlanImagesResultOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanImagesResult) string { return v.PlanId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlanImagesResultOutput{})
}
