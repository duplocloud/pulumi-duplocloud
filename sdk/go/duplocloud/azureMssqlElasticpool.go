// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureMssqlElasticpool` manages an azure mssql elastic pool in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAzureMssqlElasticpool(ctx, "mssql_elasticpool", &duplocloud.AzureMssqlElasticpoolArgs{
//				TenantId:   myapp.TenantId,
//				Name:       pulumi.String("mssql-ep"),
//				ServerName: pulumi.String("mysqlserver"),
//				Sku: &duplocloud.AzureMssqlElasticpoolSkuArgs{
//					Name:     pulumi.String("StandardPool"),
//					Capacity: pulumi.Int(50),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing Azure MS SQL databse
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SERVER_NAME* is the short name of the Azure MS SQL Server
//
//   - *EP_NAME* is the short name of the Azure MS SQL Elastic Pool
//
// ```sh
// $ pulumi import duplocloud:index/azureMssqlElasticpool:AzureMssqlElasticpool myMsSqlEP *TENANT_ID*/*SERVER_NAME*/*EP_NAME*
// ```
type AzureMssqlElasticpool struct {
	pulumi.CustomResourceState

	// The ID of the MS SQL Elastic Pool.
	ElasticPoolId pulumi.StringOutput `pulumi:"elasticPoolId"`
	// The name of the MS SQL elastic pool.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the SQL Server on which to create the elastic pool.
	ServerName pulumi.StringOutput               `pulumi:"serverName"`
	Sku        AzureMssqlElasticpoolSkuPtrOutput `pulumi:"sku"`
	// The GUID of the tenant that the azure mssql elastic pool will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAzureMssqlElasticpool registers a new resource with the given unique name, arguments, and options.
func NewAzureMssqlElasticpool(ctx *pulumi.Context,
	name string, args *AzureMssqlElasticpoolArgs, opts ...pulumi.ResourceOption) (*AzureMssqlElasticpool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServerName == nil {
		return nil, errors.New("invalid value for required argument 'ServerName'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureMssqlElasticpool
	err := ctx.RegisterResource("duplocloud:index/azureMssqlElasticpool:AzureMssqlElasticpool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureMssqlElasticpool gets an existing AzureMssqlElasticpool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureMssqlElasticpool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureMssqlElasticpoolState, opts ...pulumi.ResourceOption) (*AzureMssqlElasticpool, error) {
	var resource AzureMssqlElasticpool
	err := ctx.ReadResource("duplocloud:index/azureMssqlElasticpool:AzureMssqlElasticpool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureMssqlElasticpool resources.
type azureMssqlElasticpoolState struct {
	// The ID of the MS SQL Elastic Pool.
	ElasticPoolId *string `pulumi:"elasticPoolId"`
	// The name of the MS SQL elastic pool.
	Name *string `pulumi:"name"`
	// The name of the SQL Server on which to create the elastic pool.
	ServerName *string                   `pulumi:"serverName"`
	Sku        *AzureMssqlElasticpoolSku `pulumi:"sku"`
	// The GUID of the tenant that the azure mssql elastic pool will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AzureMssqlElasticpoolState struct {
	// The ID of the MS SQL Elastic Pool.
	ElasticPoolId pulumi.StringPtrInput
	// The name of the MS SQL elastic pool.
	Name pulumi.StringPtrInput
	// The name of the SQL Server on which to create the elastic pool.
	ServerName pulumi.StringPtrInput
	Sku        AzureMssqlElasticpoolSkuPtrInput
	// The GUID of the tenant that the azure mssql elastic pool will be created in.
	TenantId pulumi.StringPtrInput
}

func (AzureMssqlElasticpoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureMssqlElasticpoolState)(nil)).Elem()
}

type azureMssqlElasticpoolArgs struct {
	// The name of the MS SQL elastic pool.
	Name *string `pulumi:"name"`
	// The name of the SQL Server on which to create the elastic pool.
	ServerName string                    `pulumi:"serverName"`
	Sku        *AzureMssqlElasticpoolSku `pulumi:"sku"`
	// The GUID of the tenant that the azure mssql elastic pool will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AzureMssqlElasticpool resource.
type AzureMssqlElasticpoolArgs struct {
	// The name of the MS SQL elastic pool.
	Name pulumi.StringPtrInput
	// The name of the SQL Server on which to create the elastic pool.
	ServerName pulumi.StringInput
	Sku        AzureMssqlElasticpoolSkuPtrInput
	// The GUID of the tenant that the azure mssql elastic pool will be created in.
	TenantId pulumi.StringInput
}

func (AzureMssqlElasticpoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureMssqlElasticpoolArgs)(nil)).Elem()
}

type AzureMssqlElasticpoolInput interface {
	pulumi.Input

	ToAzureMssqlElasticpoolOutput() AzureMssqlElasticpoolOutput
	ToAzureMssqlElasticpoolOutputWithContext(ctx context.Context) AzureMssqlElasticpoolOutput
}

func (*AzureMssqlElasticpool) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMssqlElasticpool)(nil)).Elem()
}

func (i *AzureMssqlElasticpool) ToAzureMssqlElasticpoolOutput() AzureMssqlElasticpoolOutput {
	return i.ToAzureMssqlElasticpoolOutputWithContext(context.Background())
}

func (i *AzureMssqlElasticpool) ToAzureMssqlElasticpoolOutputWithContext(ctx context.Context) AzureMssqlElasticpoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMssqlElasticpoolOutput)
}

// AzureMssqlElasticpoolArrayInput is an input type that accepts AzureMssqlElasticpoolArray and AzureMssqlElasticpoolArrayOutput values.
// You can construct a concrete instance of `AzureMssqlElasticpoolArrayInput` via:
//
//	AzureMssqlElasticpoolArray{ AzureMssqlElasticpoolArgs{...} }
type AzureMssqlElasticpoolArrayInput interface {
	pulumi.Input

	ToAzureMssqlElasticpoolArrayOutput() AzureMssqlElasticpoolArrayOutput
	ToAzureMssqlElasticpoolArrayOutputWithContext(context.Context) AzureMssqlElasticpoolArrayOutput
}

type AzureMssqlElasticpoolArray []AzureMssqlElasticpoolInput

func (AzureMssqlElasticpoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureMssqlElasticpool)(nil)).Elem()
}

func (i AzureMssqlElasticpoolArray) ToAzureMssqlElasticpoolArrayOutput() AzureMssqlElasticpoolArrayOutput {
	return i.ToAzureMssqlElasticpoolArrayOutputWithContext(context.Background())
}

func (i AzureMssqlElasticpoolArray) ToAzureMssqlElasticpoolArrayOutputWithContext(ctx context.Context) AzureMssqlElasticpoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMssqlElasticpoolArrayOutput)
}

// AzureMssqlElasticpoolMapInput is an input type that accepts AzureMssqlElasticpoolMap and AzureMssqlElasticpoolMapOutput values.
// You can construct a concrete instance of `AzureMssqlElasticpoolMapInput` via:
//
//	AzureMssqlElasticpoolMap{ "key": AzureMssqlElasticpoolArgs{...} }
type AzureMssqlElasticpoolMapInput interface {
	pulumi.Input

	ToAzureMssqlElasticpoolMapOutput() AzureMssqlElasticpoolMapOutput
	ToAzureMssqlElasticpoolMapOutputWithContext(context.Context) AzureMssqlElasticpoolMapOutput
}

type AzureMssqlElasticpoolMap map[string]AzureMssqlElasticpoolInput

func (AzureMssqlElasticpoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureMssqlElasticpool)(nil)).Elem()
}

func (i AzureMssqlElasticpoolMap) ToAzureMssqlElasticpoolMapOutput() AzureMssqlElasticpoolMapOutput {
	return i.ToAzureMssqlElasticpoolMapOutputWithContext(context.Background())
}

func (i AzureMssqlElasticpoolMap) ToAzureMssqlElasticpoolMapOutputWithContext(ctx context.Context) AzureMssqlElasticpoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMssqlElasticpoolMapOutput)
}

type AzureMssqlElasticpoolOutput struct{ *pulumi.OutputState }

func (AzureMssqlElasticpoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMssqlElasticpool)(nil)).Elem()
}

func (o AzureMssqlElasticpoolOutput) ToAzureMssqlElasticpoolOutput() AzureMssqlElasticpoolOutput {
	return o
}

func (o AzureMssqlElasticpoolOutput) ToAzureMssqlElasticpoolOutputWithContext(ctx context.Context) AzureMssqlElasticpoolOutput {
	return o
}

// The ID of the MS SQL Elastic Pool.
func (o AzureMssqlElasticpoolOutput) ElasticPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMssqlElasticpool) pulumi.StringOutput { return v.ElasticPoolId }).(pulumi.StringOutput)
}

// The name of the MS SQL elastic pool.
func (o AzureMssqlElasticpoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMssqlElasticpool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the SQL Server on which to create the elastic pool.
func (o AzureMssqlElasticpoolOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMssqlElasticpool) pulumi.StringOutput { return v.ServerName }).(pulumi.StringOutput)
}

func (o AzureMssqlElasticpoolOutput) Sku() AzureMssqlElasticpoolSkuPtrOutput {
	return o.ApplyT(func(v *AzureMssqlElasticpool) AzureMssqlElasticpoolSkuPtrOutput { return v.Sku }).(AzureMssqlElasticpoolSkuPtrOutput)
}

// The GUID of the tenant that the azure mssql elastic pool will be created in.
func (o AzureMssqlElasticpoolOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMssqlElasticpool) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AzureMssqlElasticpoolArrayOutput struct{ *pulumi.OutputState }

func (AzureMssqlElasticpoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureMssqlElasticpool)(nil)).Elem()
}

func (o AzureMssqlElasticpoolArrayOutput) ToAzureMssqlElasticpoolArrayOutput() AzureMssqlElasticpoolArrayOutput {
	return o
}

func (o AzureMssqlElasticpoolArrayOutput) ToAzureMssqlElasticpoolArrayOutputWithContext(ctx context.Context) AzureMssqlElasticpoolArrayOutput {
	return o
}

func (o AzureMssqlElasticpoolArrayOutput) Index(i pulumi.IntInput) AzureMssqlElasticpoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureMssqlElasticpool {
		return vs[0].([]*AzureMssqlElasticpool)[vs[1].(int)]
	}).(AzureMssqlElasticpoolOutput)
}

type AzureMssqlElasticpoolMapOutput struct{ *pulumi.OutputState }

func (AzureMssqlElasticpoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureMssqlElasticpool)(nil)).Elem()
}

func (o AzureMssqlElasticpoolMapOutput) ToAzureMssqlElasticpoolMapOutput() AzureMssqlElasticpoolMapOutput {
	return o
}

func (o AzureMssqlElasticpoolMapOutput) ToAzureMssqlElasticpoolMapOutputWithContext(ctx context.Context) AzureMssqlElasticpoolMapOutput {
	return o
}

func (o AzureMssqlElasticpoolMapOutput) MapIndex(k pulumi.StringInput) AzureMssqlElasticpoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureMssqlElasticpool {
		return vs[0].(map[string]*AzureMssqlElasticpool)[vs[1].(string)]
	}).(AzureMssqlElasticpoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureMssqlElasticpoolInput)(nil)).Elem(), &AzureMssqlElasticpool{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureMssqlElasticpoolArrayInput)(nil)).Elem(), AzureMssqlElasticpoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureMssqlElasticpoolMapInput)(nil)).Elem(), AzureMssqlElasticpoolMap{})
	pulumi.RegisterOutputType(AzureMssqlElasticpoolOutput{})
	pulumi.RegisterOutputType(AzureMssqlElasticpoolArrayOutput{})
	pulumi.RegisterOutputType(AzureMssqlElasticpoolMapOutput{})
}
