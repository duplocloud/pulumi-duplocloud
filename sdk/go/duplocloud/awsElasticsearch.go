// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsElasticsearch` manages an AWS ElasticSearch instance in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myapp, err := duplocloud.NewTenant(ctx, "myapp", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("myapp"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			// Minimal example
//			_, err = duplocloud.NewAwsElasticsearch(ctx, "sample", &duplocloud.AwsElasticsearchArgs{
//				TenantId: myapp.TenantId,
//				Name:     pulumi.String("sample"),
//			})
//			if err != nil {
//				return err
//			}
//			// Example with hardened settings
//			_, err = duplocloud.NewAwsElasticsearch(ctx, "es-doc", &duplocloud.AwsElasticsearchArgs{
//				TenantId:                   myapp.TenantId,
//				Name:                       pulumi.String("es-doc"),
//				EnableNodeToNodeEncryption: pulumi.Bool(true),
//				RequireSsl:                 pulumi.Bool(true),
//				UseLatestTlsCipher:         pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS ElasticSearch cluster
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SHORT_NAME* is the short name of the AWS ElasticSearch cluster
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsElasticsearch:AwsElasticsearch mycluster *TENANT_ID*/*SHORT_NAME*
// ```
type AwsElasticsearch struct {
	pulumi.CustomResourceState

	AccessPolicies  pulumi.StringOutput    `pulumi:"accessPolicies"`
	AdvancedOptions pulumi.StringMapOutput `pulumi:"advancedOptions"`
	// The ARN of the ElasticSearch instance.
	Arn           pulumi.StringOutput                 `pulumi:"arn"`
	ClusterConfig AwsElasticsearchClusterConfigOutput `pulumi:"clusterConfig"`
	// The domain ID of the ElasticSearch instance.
	DomainId pulumi.StringOutput `pulumi:"domainId"`
	// The full name of the ElasticSearch instance.
	DomainName pulumi.StringOutput                  `pulumi:"domainName"`
	EbsOptions AwsElasticsearchEbsOptionArrayOutput `pulumi:"ebsOptions"`
	// The version of the ElasticSearch instance. Defaults to `7.9`.
	ElasticsearchVersion pulumi.StringPtrOutput `pulumi:"elasticsearchVersion"`
	// Whether or not to use the enable node-to-node encryption for this ElasticSearch instance.
	EnableNodeToNodeEncryption pulumi.BoolOutput `pulumi:"enableNodeToNodeEncryption"`
	// The storage encryption settings for the ElasticSearch instance.
	EncryptAtRest AwsElasticsearchEncryptAtRestOutput `pulumi:"encryptAtRest"`
	// The endpoints to use when connecting to the ElasticSearch instance.
	Endpoints pulumi.StringMapOutput `pulumi:"endpoints"`
	// The short name of the ElasticSearch instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `domainName` attribute.
	Name pulumi.StringOutput `pulumi:"name"`
	// Whether or not to require SSL for accessing this ElasticSearch instance.
	RequireSsl pulumi.BoolOutput `pulumi:"requireSsl"`
	// The numerical index of the zone to launch this ElasticSearch instance in.
	SelectedZone    pulumi.IntOutput                          `pulumi:"selectedZone"`
	SnapshotOptions AwsElasticsearchSnapshotOptionArrayOutput `pulumi:"snapshotOptions"`
	// The storage volume size, in GB, for the ElasticSearch instance.
	StorageSize pulumi.IntPtrOutput `pulumi:"storageSize"`
	// The GUID of the tenant that the ElasticSearch instance will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Whether or not to use the latest TLS cipher for this ElasticSearch instance. For govcloud environments this should be set to true
	UseLatestTlsCipher pulumi.BoolOutput                    `pulumi:"useLatestTlsCipher"`
	VpcOptions         AwsElasticsearchVpcOptionArrayOutput `pulumi:"vpcOptions"`
}

// NewAwsElasticsearch registers a new resource with the given unique name, arguments, and options.
func NewAwsElasticsearch(ctx *pulumi.Context,
	name string, args *AwsElasticsearchArgs, opts ...pulumi.ResourceOption) (*AwsElasticsearch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsElasticsearch
	err := ctx.RegisterResource("duplocloud:index/awsElasticsearch:AwsElasticsearch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsElasticsearch gets an existing AwsElasticsearch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsElasticsearch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsElasticsearchState, opts ...pulumi.ResourceOption) (*AwsElasticsearch, error) {
	var resource AwsElasticsearch
	err := ctx.ReadResource("duplocloud:index/awsElasticsearch:AwsElasticsearch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsElasticsearch resources.
type awsElasticsearchState struct {
	AccessPolicies  *string           `pulumi:"accessPolicies"`
	AdvancedOptions map[string]string `pulumi:"advancedOptions"`
	// The ARN of the ElasticSearch instance.
	Arn           *string                        `pulumi:"arn"`
	ClusterConfig *AwsElasticsearchClusterConfig `pulumi:"clusterConfig"`
	// The domain ID of the ElasticSearch instance.
	DomainId *string `pulumi:"domainId"`
	// The full name of the ElasticSearch instance.
	DomainName *string                     `pulumi:"domainName"`
	EbsOptions []AwsElasticsearchEbsOption `pulumi:"ebsOptions"`
	// The version of the ElasticSearch instance. Defaults to `7.9`.
	ElasticsearchVersion *string `pulumi:"elasticsearchVersion"`
	// Whether or not to use the enable node-to-node encryption for this ElasticSearch instance.
	EnableNodeToNodeEncryption *bool `pulumi:"enableNodeToNodeEncryption"`
	// The storage encryption settings for the ElasticSearch instance.
	EncryptAtRest *AwsElasticsearchEncryptAtRest `pulumi:"encryptAtRest"`
	// The endpoints to use when connecting to the ElasticSearch instance.
	Endpoints map[string]string `pulumi:"endpoints"`
	// The short name of the ElasticSearch instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `domainName` attribute.
	Name *string `pulumi:"name"`
	// Whether or not to require SSL for accessing this ElasticSearch instance.
	RequireSsl *bool `pulumi:"requireSsl"`
	// The numerical index of the zone to launch this ElasticSearch instance in.
	SelectedZone    *int                             `pulumi:"selectedZone"`
	SnapshotOptions []AwsElasticsearchSnapshotOption `pulumi:"snapshotOptions"`
	// The storage volume size, in GB, for the ElasticSearch instance.
	StorageSize *int `pulumi:"storageSize"`
	// The GUID of the tenant that the ElasticSearch instance will be created in.
	TenantId *string `pulumi:"tenantId"`
	// Whether or not to use the latest TLS cipher for this ElasticSearch instance. For govcloud environments this should be set to true
	UseLatestTlsCipher *bool                       `pulumi:"useLatestTlsCipher"`
	VpcOptions         []AwsElasticsearchVpcOption `pulumi:"vpcOptions"`
}

type AwsElasticsearchState struct {
	AccessPolicies  pulumi.StringPtrInput
	AdvancedOptions pulumi.StringMapInput
	// The ARN of the ElasticSearch instance.
	Arn           pulumi.StringPtrInput
	ClusterConfig AwsElasticsearchClusterConfigPtrInput
	// The domain ID of the ElasticSearch instance.
	DomainId pulumi.StringPtrInput
	// The full name of the ElasticSearch instance.
	DomainName pulumi.StringPtrInput
	EbsOptions AwsElasticsearchEbsOptionArrayInput
	// The version of the ElasticSearch instance. Defaults to `7.9`.
	ElasticsearchVersion pulumi.StringPtrInput
	// Whether or not to use the enable node-to-node encryption for this ElasticSearch instance.
	EnableNodeToNodeEncryption pulumi.BoolPtrInput
	// The storage encryption settings for the ElasticSearch instance.
	EncryptAtRest AwsElasticsearchEncryptAtRestPtrInput
	// The endpoints to use when connecting to the ElasticSearch instance.
	Endpoints pulumi.StringMapInput
	// The short name of the ElasticSearch instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `domainName` attribute.
	Name pulumi.StringPtrInput
	// Whether or not to require SSL for accessing this ElasticSearch instance.
	RequireSsl pulumi.BoolPtrInput
	// The numerical index of the zone to launch this ElasticSearch instance in.
	SelectedZone    pulumi.IntPtrInput
	SnapshotOptions AwsElasticsearchSnapshotOptionArrayInput
	// The storage volume size, in GB, for the ElasticSearch instance.
	StorageSize pulumi.IntPtrInput
	// The GUID of the tenant that the ElasticSearch instance will be created in.
	TenantId pulumi.StringPtrInput
	// Whether or not to use the latest TLS cipher for this ElasticSearch instance. For govcloud environments this should be set to true
	UseLatestTlsCipher pulumi.BoolPtrInput
	VpcOptions         AwsElasticsearchVpcOptionArrayInput
}

func (AwsElasticsearchState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsElasticsearchState)(nil)).Elem()
}

type awsElasticsearchArgs struct {
	ClusterConfig *AwsElasticsearchClusterConfig `pulumi:"clusterConfig"`
	// The version of the ElasticSearch instance. Defaults to `7.9`.
	ElasticsearchVersion *string `pulumi:"elasticsearchVersion"`
	// Whether or not to use the enable node-to-node encryption for this ElasticSearch instance.
	EnableNodeToNodeEncryption *bool `pulumi:"enableNodeToNodeEncryption"`
	// The storage encryption settings for the ElasticSearch instance.
	EncryptAtRest *AwsElasticsearchEncryptAtRest `pulumi:"encryptAtRest"`
	// The short name of the ElasticSearch instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `domainName` attribute.
	Name *string `pulumi:"name"`
	// Whether or not to require SSL for accessing this ElasticSearch instance.
	RequireSsl *bool `pulumi:"requireSsl"`
	// The numerical index of the zone to launch this ElasticSearch instance in.
	SelectedZone *int `pulumi:"selectedZone"`
	// The storage volume size, in GB, for the ElasticSearch instance.
	StorageSize *int `pulumi:"storageSize"`
	// The GUID of the tenant that the ElasticSearch instance will be created in.
	TenantId string `pulumi:"tenantId"`
	// Whether or not to use the latest TLS cipher for this ElasticSearch instance. For govcloud environments this should be set to true
	UseLatestTlsCipher *bool                       `pulumi:"useLatestTlsCipher"`
	VpcOptions         []AwsElasticsearchVpcOption `pulumi:"vpcOptions"`
}

// The set of arguments for constructing a AwsElasticsearch resource.
type AwsElasticsearchArgs struct {
	ClusterConfig AwsElasticsearchClusterConfigPtrInput
	// The version of the ElasticSearch instance. Defaults to `7.9`.
	ElasticsearchVersion pulumi.StringPtrInput
	// Whether or not to use the enable node-to-node encryption for this ElasticSearch instance.
	EnableNodeToNodeEncryption pulumi.BoolPtrInput
	// The storage encryption settings for the ElasticSearch instance.
	EncryptAtRest AwsElasticsearchEncryptAtRestPtrInput
	// The short name of the ElasticSearch instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `domainName` attribute.
	Name pulumi.StringPtrInput
	// Whether or not to require SSL for accessing this ElasticSearch instance.
	RequireSsl pulumi.BoolPtrInput
	// The numerical index of the zone to launch this ElasticSearch instance in.
	SelectedZone pulumi.IntPtrInput
	// The storage volume size, in GB, for the ElasticSearch instance.
	StorageSize pulumi.IntPtrInput
	// The GUID of the tenant that the ElasticSearch instance will be created in.
	TenantId pulumi.StringInput
	// Whether or not to use the latest TLS cipher for this ElasticSearch instance. For govcloud environments this should be set to true
	UseLatestTlsCipher pulumi.BoolPtrInput
	VpcOptions         AwsElasticsearchVpcOptionArrayInput
}

func (AwsElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsElasticsearchArgs)(nil)).Elem()
}

type AwsElasticsearchInput interface {
	pulumi.Input

	ToAwsElasticsearchOutput() AwsElasticsearchOutput
	ToAwsElasticsearchOutputWithContext(ctx context.Context) AwsElasticsearchOutput
}

func (*AwsElasticsearch) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsElasticsearch)(nil)).Elem()
}

func (i *AwsElasticsearch) ToAwsElasticsearchOutput() AwsElasticsearchOutput {
	return i.ToAwsElasticsearchOutputWithContext(context.Background())
}

func (i *AwsElasticsearch) ToAwsElasticsearchOutputWithContext(ctx context.Context) AwsElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsElasticsearchOutput)
}

// AwsElasticsearchArrayInput is an input type that accepts AwsElasticsearchArray and AwsElasticsearchArrayOutput values.
// You can construct a concrete instance of `AwsElasticsearchArrayInput` via:
//
//	AwsElasticsearchArray{ AwsElasticsearchArgs{...} }
type AwsElasticsearchArrayInput interface {
	pulumi.Input

	ToAwsElasticsearchArrayOutput() AwsElasticsearchArrayOutput
	ToAwsElasticsearchArrayOutputWithContext(context.Context) AwsElasticsearchArrayOutput
}

type AwsElasticsearchArray []AwsElasticsearchInput

func (AwsElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsElasticsearch)(nil)).Elem()
}

func (i AwsElasticsearchArray) ToAwsElasticsearchArrayOutput() AwsElasticsearchArrayOutput {
	return i.ToAwsElasticsearchArrayOutputWithContext(context.Background())
}

func (i AwsElasticsearchArray) ToAwsElasticsearchArrayOutputWithContext(ctx context.Context) AwsElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsElasticsearchArrayOutput)
}

// AwsElasticsearchMapInput is an input type that accepts AwsElasticsearchMap and AwsElasticsearchMapOutput values.
// You can construct a concrete instance of `AwsElasticsearchMapInput` via:
//
//	AwsElasticsearchMap{ "key": AwsElasticsearchArgs{...} }
type AwsElasticsearchMapInput interface {
	pulumi.Input

	ToAwsElasticsearchMapOutput() AwsElasticsearchMapOutput
	ToAwsElasticsearchMapOutputWithContext(context.Context) AwsElasticsearchMapOutput
}

type AwsElasticsearchMap map[string]AwsElasticsearchInput

func (AwsElasticsearchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsElasticsearch)(nil)).Elem()
}

func (i AwsElasticsearchMap) ToAwsElasticsearchMapOutput() AwsElasticsearchMapOutput {
	return i.ToAwsElasticsearchMapOutputWithContext(context.Background())
}

func (i AwsElasticsearchMap) ToAwsElasticsearchMapOutputWithContext(ctx context.Context) AwsElasticsearchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsElasticsearchMapOutput)
}

type AwsElasticsearchOutput struct{ *pulumi.OutputState }

func (AwsElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsElasticsearch)(nil)).Elem()
}

func (o AwsElasticsearchOutput) ToAwsElasticsearchOutput() AwsElasticsearchOutput {
	return o
}

func (o AwsElasticsearchOutput) ToAwsElasticsearchOutputWithContext(ctx context.Context) AwsElasticsearchOutput {
	return o
}

func (o AwsElasticsearchOutput) AccessPolicies() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.StringOutput { return v.AccessPolicies }).(pulumi.StringOutput)
}

func (o AwsElasticsearchOutput) AdvancedOptions() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.StringMapOutput { return v.AdvancedOptions }).(pulumi.StringMapOutput)
}

// The ARN of the ElasticSearch instance.
func (o AwsElasticsearchOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o AwsElasticsearchOutput) ClusterConfig() AwsElasticsearchClusterConfigOutput {
	return o.ApplyT(func(v *AwsElasticsearch) AwsElasticsearchClusterConfigOutput { return v.ClusterConfig }).(AwsElasticsearchClusterConfigOutput)
}

// The domain ID of the ElasticSearch instance.
func (o AwsElasticsearchOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

// The full name of the ElasticSearch instance.
func (o AwsElasticsearchOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

func (o AwsElasticsearchOutput) EbsOptions() AwsElasticsearchEbsOptionArrayOutput {
	return o.ApplyT(func(v *AwsElasticsearch) AwsElasticsearchEbsOptionArrayOutput { return v.EbsOptions }).(AwsElasticsearchEbsOptionArrayOutput)
}

// The version of the ElasticSearch instance. Defaults to `7.9`.
func (o AwsElasticsearchOutput) ElasticsearchVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.StringPtrOutput { return v.ElasticsearchVersion }).(pulumi.StringPtrOutput)
}

// Whether or not to use the enable node-to-node encryption for this ElasticSearch instance.
func (o AwsElasticsearchOutput) EnableNodeToNodeEncryption() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.BoolOutput { return v.EnableNodeToNodeEncryption }).(pulumi.BoolOutput)
}

// The storage encryption settings for the ElasticSearch instance.
func (o AwsElasticsearchOutput) EncryptAtRest() AwsElasticsearchEncryptAtRestOutput {
	return o.ApplyT(func(v *AwsElasticsearch) AwsElasticsearchEncryptAtRestOutput { return v.EncryptAtRest }).(AwsElasticsearchEncryptAtRestOutput)
}

// The endpoints to use when connecting to the ElasticSearch instance.
func (o AwsElasticsearchOutput) Endpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.StringMapOutput { return v.Endpoints }).(pulumi.StringMapOutput)
}

// The short name of the ElasticSearch instance.  Duplo will add a prefix to the name.  You can retrieve the full name from the `domainName` attribute.
func (o AwsElasticsearchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Whether or not to require SSL for accessing this ElasticSearch instance.
func (o AwsElasticsearchOutput) RequireSsl() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.BoolOutput { return v.RequireSsl }).(pulumi.BoolOutput)
}

// The numerical index of the zone to launch this ElasticSearch instance in.
func (o AwsElasticsearchOutput) SelectedZone() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.IntOutput { return v.SelectedZone }).(pulumi.IntOutput)
}

func (o AwsElasticsearchOutput) SnapshotOptions() AwsElasticsearchSnapshotOptionArrayOutput {
	return o.ApplyT(func(v *AwsElasticsearch) AwsElasticsearchSnapshotOptionArrayOutput { return v.SnapshotOptions }).(AwsElasticsearchSnapshotOptionArrayOutput)
}

// The storage volume size, in GB, for the ElasticSearch instance.
func (o AwsElasticsearchOutput) StorageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.IntPtrOutput { return v.StorageSize }).(pulumi.IntPtrOutput)
}

// The GUID of the tenant that the ElasticSearch instance will be created in.
func (o AwsElasticsearchOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Whether or not to use the latest TLS cipher for this ElasticSearch instance. For govcloud environments this should be set to true
func (o AwsElasticsearchOutput) UseLatestTlsCipher() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsElasticsearch) pulumi.BoolOutput { return v.UseLatestTlsCipher }).(pulumi.BoolOutput)
}

func (o AwsElasticsearchOutput) VpcOptions() AwsElasticsearchVpcOptionArrayOutput {
	return o.ApplyT(func(v *AwsElasticsearch) AwsElasticsearchVpcOptionArrayOutput { return v.VpcOptions }).(AwsElasticsearchVpcOptionArrayOutput)
}

type AwsElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (AwsElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsElasticsearch)(nil)).Elem()
}

func (o AwsElasticsearchArrayOutput) ToAwsElasticsearchArrayOutput() AwsElasticsearchArrayOutput {
	return o
}

func (o AwsElasticsearchArrayOutput) ToAwsElasticsearchArrayOutputWithContext(ctx context.Context) AwsElasticsearchArrayOutput {
	return o
}

func (o AwsElasticsearchArrayOutput) Index(i pulumi.IntInput) AwsElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsElasticsearch {
		return vs[0].([]*AwsElasticsearch)[vs[1].(int)]
	}).(AwsElasticsearchOutput)
}

type AwsElasticsearchMapOutput struct{ *pulumi.OutputState }

func (AwsElasticsearchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsElasticsearch)(nil)).Elem()
}

func (o AwsElasticsearchMapOutput) ToAwsElasticsearchMapOutput() AwsElasticsearchMapOutput {
	return o
}

func (o AwsElasticsearchMapOutput) ToAwsElasticsearchMapOutputWithContext(ctx context.Context) AwsElasticsearchMapOutput {
	return o
}

func (o AwsElasticsearchMapOutput) MapIndex(k pulumi.StringInput) AwsElasticsearchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsElasticsearch {
		return vs[0].(map[string]*AwsElasticsearch)[vs[1].(string)]
	}).(AwsElasticsearchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsElasticsearchInput)(nil)).Elem(), &AwsElasticsearch{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsElasticsearchArrayInput)(nil)).Elem(), AwsElasticsearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsElasticsearchMapInput)(nil)).Elem(), AwsElasticsearchMap{})
	pulumi.RegisterOutputType(AwsElasticsearchOutput{})
	pulumi.RegisterOutputType(AwsElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(AwsElasticsearchMapOutput{})
}
