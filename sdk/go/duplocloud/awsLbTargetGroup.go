// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsLbTargetGroup` manages a target group in a Duplo tenant.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tenantId := "053a2efa-d03f-4e1d-b3b5-33c121342adae"
//			vpcId := "vpc-0ba0667cfc20111122233"
//			_, err := duplocloud.NewAwsLbTargetGroup(ctx, "tg", &duplocloud.AwsLbTargetGroupArgs{
//				TenantId:   pulumi.String(tenantId),
//				Name:       pulumi.String("tg1"),
//				Port:       pulumi.Int(80),
//				Protocol:   pulumi.String("HTTP"),
//				VpcId:      pulumi.String(vpcId),
//				TargetType: pulumi.String("instance"),
//				HealthCheck: &duplocloud.AwsLbTargetGroupHealthCheckArgs{
//					HealthyThreshold:   pulumi.Int(8),
//					Interval:           pulumi.Int(300),
//					Path:               pulumi.String("/health"),
//					Port:               pulumi.String("9000"),
//					Protocol:           pulumi.String("HTTP"),
//					Timeout:            pulumi.Int(60),
//					UnhealthyThreshold: pulumi.Int(6),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing AWS target group
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *NAME* is the name of the AWS target group
//
// #
//
// ```sh
// $ pulumi import duplocloud:index/awsLbTargetGroup:AwsLbTargetGroup tg *TENANT_ID*/*NAME*
// ```
type AwsLbTargetGroup struct {
	pulumi.CustomResourceState

	// ARN of the Target Group.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Health Check configuration block.
	HealthCheck AwsLbTargetGroupHealthCheckOutput `pulumi:"healthCheck"`
	// The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`
	IpAddressType pulumi.StringOutput `pulumi:"ipAddressType"`
	// Name of the target group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Port to use to connect with the target. Valid values are either ports 1-65535.
	Port pulumi.IntOutput `pulumi:"port"`
	// Protocol to use to connect with the target. Not applicable when `targetType` is `lambda`. Defaults to `HTTP`.
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// Only applicable when protocol is `HTTP` or `HTTPS`. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
	ProtocolVersion pulumi.StringOutput `pulumi:"protocolVersion"`
	// Type of target that you must specify when registering targets with this target group.
	TargetType pulumi.StringOutput `pulumi:"targetType"`
	// The GUID of the tenant that the target group will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Identifier of the VPC in which to create the target group. Required when `targetType` is `instance`, `ip` or `alb`. Does not apply when `targetType` is `lambda`.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewAwsLbTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewAwsLbTargetGroup(ctx *pulumi.Context,
	name string, args *AwsLbTargetGroupArgs, opts ...pulumi.ResourceOption) (*AwsLbTargetGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TargetType == nil {
		return nil, errors.New("invalid value for required argument 'TargetType'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsLbTargetGroup
	err := ctx.RegisterResource("duplocloud:index/awsLbTargetGroup:AwsLbTargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsLbTargetGroup gets an existing AwsLbTargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsLbTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsLbTargetGroupState, opts ...pulumi.ResourceOption) (*AwsLbTargetGroup, error) {
	var resource AwsLbTargetGroup
	err := ctx.ReadResource("duplocloud:index/awsLbTargetGroup:AwsLbTargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsLbTargetGroup resources.
type awsLbTargetGroupState struct {
	// ARN of the Target Group.
	Arn *string `pulumi:"arn"`
	// Health Check configuration block.
	HealthCheck *AwsLbTargetGroupHealthCheck `pulumi:"healthCheck"`
	// The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`
	IpAddressType *string `pulumi:"ipAddressType"`
	// Name of the target group.
	Name *string `pulumi:"name"`
	// Port to use to connect with the target. Valid values are either ports 1-65535.
	Port *int `pulumi:"port"`
	// Protocol to use to connect with the target. Not applicable when `targetType` is `lambda`. Defaults to `HTTP`.
	Protocol *string `pulumi:"protocol"`
	// Only applicable when protocol is `HTTP` or `HTTPS`. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
	ProtocolVersion *string `pulumi:"protocolVersion"`
	// Type of target that you must specify when registering targets with this target group.
	TargetType *string `pulumi:"targetType"`
	// The GUID of the tenant that the target group will be created in.
	TenantId *string `pulumi:"tenantId"`
	// Identifier of the VPC in which to create the target group. Required when `targetType` is `instance`, `ip` or `alb`. Does not apply when `targetType` is `lambda`.
	VpcId *string `pulumi:"vpcId"`
}

type AwsLbTargetGroupState struct {
	// ARN of the Target Group.
	Arn pulumi.StringPtrInput
	// Health Check configuration block.
	HealthCheck AwsLbTargetGroupHealthCheckPtrInput
	// The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`
	IpAddressType pulumi.StringPtrInput
	// Name of the target group.
	Name pulumi.StringPtrInput
	// Port to use to connect with the target. Valid values are either ports 1-65535.
	Port pulumi.IntPtrInput
	// Protocol to use to connect with the target. Not applicable when `targetType` is `lambda`. Defaults to `HTTP`.
	Protocol pulumi.StringPtrInput
	// Only applicable when protocol is `HTTP` or `HTTPS`. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
	ProtocolVersion pulumi.StringPtrInput
	// Type of target that you must specify when registering targets with this target group.
	TargetType pulumi.StringPtrInput
	// The GUID of the tenant that the target group will be created in.
	TenantId pulumi.StringPtrInput
	// Identifier of the VPC in which to create the target group. Required when `targetType` is `instance`, `ip` or `alb`. Does not apply when `targetType` is `lambda`.
	VpcId pulumi.StringPtrInput
}

func (AwsLbTargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLbTargetGroupState)(nil)).Elem()
}

type awsLbTargetGroupArgs struct {
	// Health Check configuration block.
	HealthCheck *AwsLbTargetGroupHealthCheck `pulumi:"healthCheck"`
	// The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`
	IpAddressType *string `pulumi:"ipAddressType"`
	// Name of the target group.
	Name *string `pulumi:"name"`
	// Port to use to connect with the target. Valid values are either ports 1-65535.
	Port *int `pulumi:"port"`
	// Protocol to use to connect with the target. Not applicable when `targetType` is `lambda`. Defaults to `HTTP`.
	Protocol *string `pulumi:"protocol"`
	// Only applicable when protocol is `HTTP` or `HTTPS`. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
	ProtocolVersion *string `pulumi:"protocolVersion"`
	// Type of target that you must specify when registering targets with this target group.
	TargetType string `pulumi:"targetType"`
	// The GUID of the tenant that the target group will be created in.
	TenantId string `pulumi:"tenantId"`
	// Identifier of the VPC in which to create the target group. Required when `targetType` is `instance`, `ip` or `alb`. Does not apply when `targetType` is `lambda`.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a AwsLbTargetGroup resource.
type AwsLbTargetGroupArgs struct {
	// Health Check configuration block.
	HealthCheck AwsLbTargetGroupHealthCheckPtrInput
	// The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`
	IpAddressType pulumi.StringPtrInput
	// Name of the target group.
	Name pulumi.StringPtrInput
	// Port to use to connect with the target. Valid values are either ports 1-65535.
	Port pulumi.IntPtrInput
	// Protocol to use to connect with the target. Not applicable when `targetType` is `lambda`. Defaults to `HTTP`.
	Protocol pulumi.StringPtrInput
	// Only applicable when protocol is `HTTP` or `HTTPS`. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
	ProtocolVersion pulumi.StringPtrInput
	// Type of target that you must specify when registering targets with this target group.
	TargetType pulumi.StringInput
	// The GUID of the tenant that the target group will be created in.
	TenantId pulumi.StringInput
	// Identifier of the VPC in which to create the target group. Required when `targetType` is `instance`, `ip` or `alb`. Does not apply when `targetType` is `lambda`.
	VpcId pulumi.StringPtrInput
}

func (AwsLbTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLbTargetGroupArgs)(nil)).Elem()
}

type AwsLbTargetGroupInput interface {
	pulumi.Input

	ToAwsLbTargetGroupOutput() AwsLbTargetGroupOutput
	ToAwsLbTargetGroupOutputWithContext(ctx context.Context) AwsLbTargetGroupOutput
}

func (*AwsLbTargetGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLbTargetGroup)(nil)).Elem()
}

func (i *AwsLbTargetGroup) ToAwsLbTargetGroupOutput() AwsLbTargetGroupOutput {
	return i.ToAwsLbTargetGroupOutputWithContext(context.Background())
}

func (i *AwsLbTargetGroup) ToAwsLbTargetGroupOutputWithContext(ctx context.Context) AwsLbTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLbTargetGroupOutput)
}

// AwsLbTargetGroupArrayInput is an input type that accepts AwsLbTargetGroupArray and AwsLbTargetGroupArrayOutput values.
// You can construct a concrete instance of `AwsLbTargetGroupArrayInput` via:
//
//	AwsLbTargetGroupArray{ AwsLbTargetGroupArgs{...} }
type AwsLbTargetGroupArrayInput interface {
	pulumi.Input

	ToAwsLbTargetGroupArrayOutput() AwsLbTargetGroupArrayOutput
	ToAwsLbTargetGroupArrayOutputWithContext(context.Context) AwsLbTargetGroupArrayOutput
}

type AwsLbTargetGroupArray []AwsLbTargetGroupInput

func (AwsLbTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLbTargetGroup)(nil)).Elem()
}

func (i AwsLbTargetGroupArray) ToAwsLbTargetGroupArrayOutput() AwsLbTargetGroupArrayOutput {
	return i.ToAwsLbTargetGroupArrayOutputWithContext(context.Background())
}

func (i AwsLbTargetGroupArray) ToAwsLbTargetGroupArrayOutputWithContext(ctx context.Context) AwsLbTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLbTargetGroupArrayOutput)
}

// AwsLbTargetGroupMapInput is an input type that accepts AwsLbTargetGroupMap and AwsLbTargetGroupMapOutput values.
// You can construct a concrete instance of `AwsLbTargetGroupMapInput` via:
//
//	AwsLbTargetGroupMap{ "key": AwsLbTargetGroupArgs{...} }
type AwsLbTargetGroupMapInput interface {
	pulumi.Input

	ToAwsLbTargetGroupMapOutput() AwsLbTargetGroupMapOutput
	ToAwsLbTargetGroupMapOutputWithContext(context.Context) AwsLbTargetGroupMapOutput
}

type AwsLbTargetGroupMap map[string]AwsLbTargetGroupInput

func (AwsLbTargetGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLbTargetGroup)(nil)).Elem()
}

func (i AwsLbTargetGroupMap) ToAwsLbTargetGroupMapOutput() AwsLbTargetGroupMapOutput {
	return i.ToAwsLbTargetGroupMapOutputWithContext(context.Background())
}

func (i AwsLbTargetGroupMap) ToAwsLbTargetGroupMapOutputWithContext(ctx context.Context) AwsLbTargetGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLbTargetGroupMapOutput)
}

type AwsLbTargetGroupOutput struct{ *pulumi.OutputState }

func (AwsLbTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLbTargetGroup)(nil)).Elem()
}

func (o AwsLbTargetGroupOutput) ToAwsLbTargetGroupOutput() AwsLbTargetGroupOutput {
	return o
}

func (o AwsLbTargetGroupOutput) ToAwsLbTargetGroupOutputWithContext(ctx context.Context) AwsLbTargetGroupOutput {
	return o
}

// ARN of the Target Group.
func (o AwsLbTargetGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Health Check configuration block.
func (o AwsLbTargetGroupOutput) HealthCheck() AwsLbTargetGroupHealthCheckOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) AwsLbTargetGroupHealthCheckOutput { return v.HealthCheck }).(AwsLbTargetGroupHealthCheckOutput)
}

// The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`
func (o AwsLbTargetGroupOutput) IpAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) pulumi.StringOutput { return v.IpAddressType }).(pulumi.StringOutput)
}

// Name of the target group.
func (o AwsLbTargetGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Port to use to connect with the target. Valid values are either ports 1-65535.
func (o AwsLbTargetGroupOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Protocol to use to connect with the target. Not applicable when `targetType` is `lambda`. Defaults to `HTTP`.
func (o AwsLbTargetGroupOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Only applicable when protocol is `HTTP` or `HTTPS`. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
func (o AwsLbTargetGroupOutput) ProtocolVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) pulumi.StringOutput { return v.ProtocolVersion }).(pulumi.StringOutput)
}

// Type of target that you must specify when registering targets with this target group.
func (o AwsLbTargetGroupOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) pulumi.StringOutput { return v.TargetType }).(pulumi.StringOutput)
}

// The GUID of the tenant that the target group will be created in.
func (o AwsLbTargetGroupOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Identifier of the VPC in which to create the target group. Required when `targetType` is `instance`, `ip` or `alb`. Does not apply when `targetType` is `lambda`.
func (o AwsLbTargetGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsLbTargetGroup) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type AwsLbTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (AwsLbTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLbTargetGroup)(nil)).Elem()
}

func (o AwsLbTargetGroupArrayOutput) ToAwsLbTargetGroupArrayOutput() AwsLbTargetGroupArrayOutput {
	return o
}

func (o AwsLbTargetGroupArrayOutput) ToAwsLbTargetGroupArrayOutputWithContext(ctx context.Context) AwsLbTargetGroupArrayOutput {
	return o
}

func (o AwsLbTargetGroupArrayOutput) Index(i pulumi.IntInput) AwsLbTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsLbTargetGroup {
		return vs[0].([]*AwsLbTargetGroup)[vs[1].(int)]
	}).(AwsLbTargetGroupOutput)
}

type AwsLbTargetGroupMapOutput struct{ *pulumi.OutputState }

func (AwsLbTargetGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLbTargetGroup)(nil)).Elem()
}

func (o AwsLbTargetGroupMapOutput) ToAwsLbTargetGroupMapOutput() AwsLbTargetGroupMapOutput {
	return o
}

func (o AwsLbTargetGroupMapOutput) ToAwsLbTargetGroupMapOutputWithContext(ctx context.Context) AwsLbTargetGroupMapOutput {
	return o
}

func (o AwsLbTargetGroupMapOutput) MapIndex(k pulumi.StringInput) AwsLbTargetGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsLbTargetGroup {
		return vs[0].(map[string]*AwsLbTargetGroup)[vs[1].(string)]
	}).(AwsLbTargetGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLbTargetGroupInput)(nil)).Elem(), &AwsLbTargetGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLbTargetGroupArrayInput)(nil)).Elem(), AwsLbTargetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLbTargetGroupMapInput)(nil)).Elem(), AwsLbTargetGroupMap{})
	pulumi.RegisterOutputType(AwsLbTargetGroupOutput{})
	pulumi.RegisterOutputType(AwsLbTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(AwsLbTargetGroupMapOutput{})
}
