// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureStorageclassTable` manages an Azure storage class table in Duplo.
type AzureStorageclassTable struct {
	pulumi.CustomResourceState

	// The name of the Table. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the storage class in which to create the table. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringOutput `pulumi:"storageAccountName"`
	// The GUID of the tenant that the azure storage class table will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The URL of the Table.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewAzureStorageclassTable registers a new resource with the given unique name, arguments, and options.
func NewAzureStorageclassTable(ctx *pulumi.Context,
	name string, args *AzureStorageclassTableArgs, opts ...pulumi.ResourceOption) (*AzureStorageclassTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageAccountName == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountName'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureStorageclassTable
	err := ctx.RegisterResource("duplocloud:index/azureStorageclassTable:AzureStorageclassTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureStorageclassTable gets an existing AzureStorageclassTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureStorageclassTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureStorageclassTableState, opts ...pulumi.ResourceOption) (*AzureStorageclassTable, error) {
	var resource AzureStorageclassTable
	err := ctx.ReadResource("duplocloud:index/azureStorageclassTable:AzureStorageclassTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureStorageclassTable resources.
type azureStorageclassTableState struct {
	// The name of the Table. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the storage class in which to create the table. Changing this forces a new resource to be created.
	StorageAccountName *string `pulumi:"storageAccountName"`
	// The GUID of the tenant that the azure storage class table will be created in.
	TenantId *string `pulumi:"tenantId"`
	// The URL of the Table.
	Url *string `pulumi:"url"`
}

type AzureStorageclassTableState struct {
	// The name of the Table. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the storage class in which to create the table. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringPtrInput
	// The GUID of the tenant that the azure storage class table will be created in.
	TenantId pulumi.StringPtrInput
	// The URL of the Table.
	Url pulumi.StringPtrInput
}

func (AzureStorageclassTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureStorageclassTableState)(nil)).Elem()
}

type azureStorageclassTableArgs struct {
	// The name of the Table. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the storage class in which to create the table. Changing this forces a new resource to be created.
	StorageAccountName string `pulumi:"storageAccountName"`
	// The GUID of the tenant that the azure storage class table will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AzureStorageclassTable resource.
type AzureStorageclassTableArgs struct {
	// The name of the Table. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the storage class in which to create the table. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringInput
	// The GUID of the tenant that the azure storage class table will be created in.
	TenantId pulumi.StringInput
}

func (AzureStorageclassTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureStorageclassTableArgs)(nil)).Elem()
}

type AzureStorageclassTableInput interface {
	pulumi.Input

	ToAzureStorageclassTableOutput() AzureStorageclassTableOutput
	ToAzureStorageclassTableOutputWithContext(ctx context.Context) AzureStorageclassTableOutput
}

func (*AzureStorageclassTable) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageclassTable)(nil)).Elem()
}

func (i *AzureStorageclassTable) ToAzureStorageclassTableOutput() AzureStorageclassTableOutput {
	return i.ToAzureStorageclassTableOutputWithContext(context.Background())
}

func (i *AzureStorageclassTable) ToAzureStorageclassTableOutputWithContext(ctx context.Context) AzureStorageclassTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageclassTableOutput)
}

// AzureStorageclassTableArrayInput is an input type that accepts AzureStorageclassTableArray and AzureStorageclassTableArrayOutput values.
// You can construct a concrete instance of `AzureStorageclassTableArrayInput` via:
//
//	AzureStorageclassTableArray{ AzureStorageclassTableArgs{...} }
type AzureStorageclassTableArrayInput interface {
	pulumi.Input

	ToAzureStorageclassTableArrayOutput() AzureStorageclassTableArrayOutput
	ToAzureStorageclassTableArrayOutputWithContext(context.Context) AzureStorageclassTableArrayOutput
}

type AzureStorageclassTableArray []AzureStorageclassTableInput

func (AzureStorageclassTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureStorageclassTable)(nil)).Elem()
}

func (i AzureStorageclassTableArray) ToAzureStorageclassTableArrayOutput() AzureStorageclassTableArrayOutput {
	return i.ToAzureStorageclassTableArrayOutputWithContext(context.Background())
}

func (i AzureStorageclassTableArray) ToAzureStorageclassTableArrayOutputWithContext(ctx context.Context) AzureStorageclassTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageclassTableArrayOutput)
}

// AzureStorageclassTableMapInput is an input type that accepts AzureStorageclassTableMap and AzureStorageclassTableMapOutput values.
// You can construct a concrete instance of `AzureStorageclassTableMapInput` via:
//
//	AzureStorageclassTableMap{ "key": AzureStorageclassTableArgs{...} }
type AzureStorageclassTableMapInput interface {
	pulumi.Input

	ToAzureStorageclassTableMapOutput() AzureStorageclassTableMapOutput
	ToAzureStorageclassTableMapOutputWithContext(context.Context) AzureStorageclassTableMapOutput
}

type AzureStorageclassTableMap map[string]AzureStorageclassTableInput

func (AzureStorageclassTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureStorageclassTable)(nil)).Elem()
}

func (i AzureStorageclassTableMap) ToAzureStorageclassTableMapOutput() AzureStorageclassTableMapOutput {
	return i.ToAzureStorageclassTableMapOutputWithContext(context.Background())
}

func (i AzureStorageclassTableMap) ToAzureStorageclassTableMapOutputWithContext(ctx context.Context) AzureStorageclassTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageclassTableMapOutput)
}

type AzureStorageclassTableOutput struct{ *pulumi.OutputState }

func (AzureStorageclassTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageclassTable)(nil)).Elem()
}

func (o AzureStorageclassTableOutput) ToAzureStorageclassTableOutput() AzureStorageclassTableOutput {
	return o
}

func (o AzureStorageclassTableOutput) ToAzureStorageclassTableOutputWithContext(ctx context.Context) AzureStorageclassTableOutput {
	return o
}

// The name of the Table. Changing this forces a new resource to be created.
func (o AzureStorageclassTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageclassTable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the storage class in which to create the table. Changing this forces a new resource to be created.
func (o AzureStorageclassTableOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageclassTable) pulumi.StringOutput { return v.StorageAccountName }).(pulumi.StringOutput)
}

// The GUID of the tenant that the azure storage class table will be created in.
func (o AzureStorageclassTableOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageclassTable) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The URL of the Table.
func (o AzureStorageclassTableOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureStorageclassTable) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type AzureStorageclassTableArrayOutput struct{ *pulumi.OutputState }

func (AzureStorageclassTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureStorageclassTable)(nil)).Elem()
}

func (o AzureStorageclassTableArrayOutput) ToAzureStorageclassTableArrayOutput() AzureStorageclassTableArrayOutput {
	return o
}

func (o AzureStorageclassTableArrayOutput) ToAzureStorageclassTableArrayOutputWithContext(ctx context.Context) AzureStorageclassTableArrayOutput {
	return o
}

func (o AzureStorageclassTableArrayOutput) Index(i pulumi.IntInput) AzureStorageclassTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureStorageclassTable {
		return vs[0].([]*AzureStorageclassTable)[vs[1].(int)]
	}).(AzureStorageclassTableOutput)
}

type AzureStorageclassTableMapOutput struct{ *pulumi.OutputState }

func (AzureStorageclassTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureStorageclassTable)(nil)).Elem()
}

func (o AzureStorageclassTableMapOutput) ToAzureStorageclassTableMapOutput() AzureStorageclassTableMapOutput {
	return o
}

func (o AzureStorageclassTableMapOutput) ToAzureStorageclassTableMapOutputWithContext(ctx context.Context) AzureStorageclassTableMapOutput {
	return o
}

func (o AzureStorageclassTableMapOutput) MapIndex(k pulumi.StringInput) AzureStorageclassTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureStorageclassTable {
		return vs[0].(map[string]*AzureStorageclassTable)[vs[1].(string)]
	}).(AzureStorageclassTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureStorageclassTableInput)(nil)).Elem(), &AzureStorageclassTable{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureStorageclassTableArrayInput)(nil)).Elem(), AzureStorageclassTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureStorageclassTableMapInput)(nil)).Elem(), AzureStorageclassTableMap{})
	pulumi.RegisterOutputType(AzureStorageclassTableOutput{})
	pulumi.RegisterOutputType(AzureStorageclassTableArrayOutput{})
	pulumi.RegisterOutputType(AzureStorageclassTableMapOutput{})
}
