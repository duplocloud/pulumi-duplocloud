// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package duplocloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AwsAppautoscalingPolicy` manages an aws autoscaling policy in Duplo.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/duplocloud/pulumi-duplocloud/sdk/go/duplocloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := duplocloud.NewTenant(ctx, "duplo-app", &duplocloud.TenantArgs{
//				AccountName: pulumi.String("duplo-app"),
//				PlanId:      pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			// ECS Service Autoscaling
//			_, err = duplocloud.NewAwsAppautoscalingTarget(ctx, "asg-target", &duplocloud.AwsAppautoscalingTargetArgs{
//				TenantId:          duplo_app.TenantId,
//				MaxCapacity:       pulumi.Int(4),
//				MinCapacity:       pulumi.Int(2),
//				ResourceId:        pulumi.String("duploservices-duplo-app-ecs-service"),
//				ScalableDimension: pulumi.String("ecs:service:DesiredCount"),
//				ServiceNamespace:  pulumi.String("ecs"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = duplocloud.NewAwsAppautoscalingPolicy(ctx, "asg-app-policy", &duplocloud.AwsAppautoscalingPolicyArgs{
//				TenantId:          duplo_app.TenantId,
//				Name:              pulumi.String("avg-cpu-utilization"),
//				PolicyType:        pulumi.String("TargetTrackingScaling"),
//				ResourceId:        asg_target.ResourceId,
//				ScalableDimension: asg_target.ScalableDimension,
//				ServiceNamespace:  asg_target.ServiceNamespace,
//				TargetTrackingScalingPolicyConfiguration: &duplocloud.AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfigurationArgs{
//					PredefinedMetricSpecification: &duplocloud.AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs{
//						PredefinedMetricType: pulumi.String("ECSServiceAverageCPUUtilization"),
//					},
//					TargetValue: pulumi.Float64(40),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Example: Importing an existing Autoscaling Policy
//
//   - *TENANT_ID* is the tenant GUID
//
//   - *SERVICE_NAMESPACE* The AWS service namespace of the scalable target
//
//   - *SCALABLE_DIMENSION*  The scalable dimension of the scalable target.
//
//   - *RESOURCE_ID* is the duploservices-<account_name>-<resource_name>
//
//   - *POLICY_NAME* is the name of policy
//
// ```sh
// $ pulumi import duplocloud:index/awsAppautoscalingPolicy:AwsAppautoscalingPolicy asgAppPolicy *TENANT_ID*/*SERVICE_NAMESPACE*/*SCALABLE_DIMENSION*/*RESOURCE_ID*/*POLICY_NAME*
// ```
type AwsAppautoscalingPolicy struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// The resource type and unique identifier string for the resource associated with the scaling policy.
	FullResourceId pulumi.StringOutput `pulumi:"fullResourceId"`
	// The name of the policy. Must be between 1 and 255 characters in length.
	Name pulumi.StringOutput `pulumi:"name"`
	// The policy type. Valid values are `StepScaling` and `TargetTrackingScaling`. Defaults to `StepScaling`.
	PolicyType pulumi.StringPtrOutput `pulumi:"policyType"`
	// The resource type and unique identifier string for the resource associated with the scaling policy.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// The scalable dimension of the scalable target.
	ScalableDimension pulumi.StringOutput `pulumi:"scalableDimension"`
	// The AWS service namespace of the scalable target.
	ServiceNamespace pulumi.StringOutput `pulumi:"serviceNamespace"`
	// Step scaling policy configuration, requires `policyType = "StepScaling"`
	StepScalingPolicyConfiguration AwsAppautoscalingPolicyStepScalingPolicyConfigurationPtrOutput `pulumi:"stepScalingPolicyConfiguration"`
	// A target tracking policy, requires `policyType = "TargetTrackingScaling"`
	TargetTrackingScalingPolicyConfiguration AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput `pulumi:"targetTrackingScalingPolicyConfiguration"`
	// The GUID of the tenant that the aws autoscaling policy will be created in.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewAwsAppautoscalingPolicy registers a new resource with the given unique name, arguments, and options.
func NewAwsAppautoscalingPolicy(ctx *pulumi.Context,
	name string, args *AwsAppautoscalingPolicyArgs, opts ...pulumi.ResourceOption) (*AwsAppautoscalingPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.ScalableDimension == nil {
		return nil, errors.New("invalid value for required argument 'ScalableDimension'")
	}
	if args.ServiceNamespace == nil {
		return nil, errors.New("invalid value for required argument 'ServiceNamespace'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsAppautoscalingPolicy
	err := ctx.RegisterResource("duplocloud:index/awsAppautoscalingPolicy:AwsAppautoscalingPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsAppautoscalingPolicy gets an existing AwsAppautoscalingPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsAppautoscalingPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsAppautoscalingPolicyState, opts ...pulumi.ResourceOption) (*AwsAppautoscalingPolicy, error) {
	var resource AwsAppautoscalingPolicy
	err := ctx.ReadResource("duplocloud:index/awsAppautoscalingPolicy:AwsAppautoscalingPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsAppautoscalingPolicy resources.
type awsAppautoscalingPolicyState struct {
	Arn *string `pulumi:"arn"`
	// The resource type and unique identifier string for the resource associated with the scaling policy.
	FullResourceId *string `pulumi:"fullResourceId"`
	// The name of the policy. Must be between 1 and 255 characters in length.
	Name *string `pulumi:"name"`
	// The policy type. Valid values are `StepScaling` and `TargetTrackingScaling`. Defaults to `StepScaling`.
	PolicyType *string `pulumi:"policyType"`
	// The resource type and unique identifier string for the resource associated with the scaling policy.
	ResourceId *string `pulumi:"resourceId"`
	// The scalable dimension of the scalable target.
	ScalableDimension *string `pulumi:"scalableDimension"`
	// The AWS service namespace of the scalable target.
	ServiceNamespace *string `pulumi:"serviceNamespace"`
	// Step scaling policy configuration, requires `policyType = "StepScaling"`
	StepScalingPolicyConfiguration *AwsAppautoscalingPolicyStepScalingPolicyConfiguration `pulumi:"stepScalingPolicyConfiguration"`
	// A target tracking policy, requires `policyType = "TargetTrackingScaling"`
	TargetTrackingScalingPolicyConfiguration *AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfiguration `pulumi:"targetTrackingScalingPolicyConfiguration"`
	// The GUID of the tenant that the aws autoscaling policy will be created in.
	TenantId *string `pulumi:"tenantId"`
}

type AwsAppautoscalingPolicyState struct {
	Arn pulumi.StringPtrInput
	// The resource type and unique identifier string for the resource associated with the scaling policy.
	FullResourceId pulumi.StringPtrInput
	// The name of the policy. Must be between 1 and 255 characters in length.
	Name pulumi.StringPtrInput
	// The policy type. Valid values are `StepScaling` and `TargetTrackingScaling`. Defaults to `StepScaling`.
	PolicyType pulumi.StringPtrInput
	// The resource type and unique identifier string for the resource associated with the scaling policy.
	ResourceId pulumi.StringPtrInput
	// The scalable dimension of the scalable target.
	ScalableDimension pulumi.StringPtrInput
	// The AWS service namespace of the scalable target.
	ServiceNamespace pulumi.StringPtrInput
	// Step scaling policy configuration, requires `policyType = "StepScaling"`
	StepScalingPolicyConfiguration AwsAppautoscalingPolicyStepScalingPolicyConfigurationPtrInput
	// A target tracking policy, requires `policyType = "TargetTrackingScaling"`
	TargetTrackingScalingPolicyConfiguration AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput
	// The GUID of the tenant that the aws autoscaling policy will be created in.
	TenantId pulumi.StringPtrInput
}

func (AwsAppautoscalingPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsAppautoscalingPolicyState)(nil)).Elem()
}

type awsAppautoscalingPolicyArgs struct {
	// The name of the policy. Must be between 1 and 255 characters in length.
	Name *string `pulumi:"name"`
	// The policy type. Valid values are `StepScaling` and `TargetTrackingScaling`. Defaults to `StepScaling`.
	PolicyType *string `pulumi:"policyType"`
	// The resource type and unique identifier string for the resource associated with the scaling policy.
	ResourceId string `pulumi:"resourceId"`
	// The scalable dimension of the scalable target.
	ScalableDimension string `pulumi:"scalableDimension"`
	// The AWS service namespace of the scalable target.
	ServiceNamespace string `pulumi:"serviceNamespace"`
	// Step scaling policy configuration, requires `policyType = "StepScaling"`
	StepScalingPolicyConfiguration *AwsAppautoscalingPolicyStepScalingPolicyConfiguration `pulumi:"stepScalingPolicyConfiguration"`
	// A target tracking policy, requires `policyType = "TargetTrackingScaling"`
	TargetTrackingScalingPolicyConfiguration *AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfiguration `pulumi:"targetTrackingScalingPolicyConfiguration"`
	// The GUID of the tenant that the aws autoscaling policy will be created in.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AwsAppautoscalingPolicy resource.
type AwsAppautoscalingPolicyArgs struct {
	// The name of the policy. Must be between 1 and 255 characters in length.
	Name pulumi.StringPtrInput
	// The policy type. Valid values are `StepScaling` and `TargetTrackingScaling`. Defaults to `StepScaling`.
	PolicyType pulumi.StringPtrInput
	// The resource type and unique identifier string for the resource associated with the scaling policy.
	ResourceId pulumi.StringInput
	// The scalable dimension of the scalable target.
	ScalableDimension pulumi.StringInput
	// The AWS service namespace of the scalable target.
	ServiceNamespace pulumi.StringInput
	// Step scaling policy configuration, requires `policyType = "StepScaling"`
	StepScalingPolicyConfiguration AwsAppautoscalingPolicyStepScalingPolicyConfigurationPtrInput
	// A target tracking policy, requires `policyType = "TargetTrackingScaling"`
	TargetTrackingScalingPolicyConfiguration AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput
	// The GUID of the tenant that the aws autoscaling policy will be created in.
	TenantId pulumi.StringInput
}

func (AwsAppautoscalingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsAppautoscalingPolicyArgs)(nil)).Elem()
}

type AwsAppautoscalingPolicyInput interface {
	pulumi.Input

	ToAwsAppautoscalingPolicyOutput() AwsAppautoscalingPolicyOutput
	ToAwsAppautoscalingPolicyOutputWithContext(ctx context.Context) AwsAppautoscalingPolicyOutput
}

func (*AwsAppautoscalingPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAppautoscalingPolicy)(nil)).Elem()
}

func (i *AwsAppautoscalingPolicy) ToAwsAppautoscalingPolicyOutput() AwsAppautoscalingPolicyOutput {
	return i.ToAwsAppautoscalingPolicyOutputWithContext(context.Background())
}

func (i *AwsAppautoscalingPolicy) ToAwsAppautoscalingPolicyOutputWithContext(ctx context.Context) AwsAppautoscalingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAppautoscalingPolicyOutput)
}

// AwsAppautoscalingPolicyArrayInput is an input type that accepts AwsAppautoscalingPolicyArray and AwsAppautoscalingPolicyArrayOutput values.
// You can construct a concrete instance of `AwsAppautoscalingPolicyArrayInput` via:
//
//	AwsAppautoscalingPolicyArray{ AwsAppautoscalingPolicyArgs{...} }
type AwsAppautoscalingPolicyArrayInput interface {
	pulumi.Input

	ToAwsAppautoscalingPolicyArrayOutput() AwsAppautoscalingPolicyArrayOutput
	ToAwsAppautoscalingPolicyArrayOutputWithContext(context.Context) AwsAppautoscalingPolicyArrayOutput
}

type AwsAppautoscalingPolicyArray []AwsAppautoscalingPolicyInput

func (AwsAppautoscalingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsAppautoscalingPolicy)(nil)).Elem()
}

func (i AwsAppautoscalingPolicyArray) ToAwsAppautoscalingPolicyArrayOutput() AwsAppautoscalingPolicyArrayOutput {
	return i.ToAwsAppautoscalingPolicyArrayOutputWithContext(context.Background())
}

func (i AwsAppautoscalingPolicyArray) ToAwsAppautoscalingPolicyArrayOutputWithContext(ctx context.Context) AwsAppautoscalingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAppautoscalingPolicyArrayOutput)
}

// AwsAppautoscalingPolicyMapInput is an input type that accepts AwsAppautoscalingPolicyMap and AwsAppautoscalingPolicyMapOutput values.
// You can construct a concrete instance of `AwsAppautoscalingPolicyMapInput` via:
//
//	AwsAppautoscalingPolicyMap{ "key": AwsAppautoscalingPolicyArgs{...} }
type AwsAppautoscalingPolicyMapInput interface {
	pulumi.Input

	ToAwsAppautoscalingPolicyMapOutput() AwsAppautoscalingPolicyMapOutput
	ToAwsAppautoscalingPolicyMapOutputWithContext(context.Context) AwsAppautoscalingPolicyMapOutput
}

type AwsAppautoscalingPolicyMap map[string]AwsAppautoscalingPolicyInput

func (AwsAppautoscalingPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsAppautoscalingPolicy)(nil)).Elem()
}

func (i AwsAppautoscalingPolicyMap) ToAwsAppautoscalingPolicyMapOutput() AwsAppautoscalingPolicyMapOutput {
	return i.ToAwsAppautoscalingPolicyMapOutputWithContext(context.Background())
}

func (i AwsAppautoscalingPolicyMap) ToAwsAppautoscalingPolicyMapOutputWithContext(ctx context.Context) AwsAppautoscalingPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAppautoscalingPolicyMapOutput)
}

type AwsAppautoscalingPolicyOutput struct{ *pulumi.OutputState }

func (AwsAppautoscalingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAppautoscalingPolicy)(nil)).Elem()
}

func (o AwsAppautoscalingPolicyOutput) ToAwsAppautoscalingPolicyOutput() AwsAppautoscalingPolicyOutput {
	return o
}

func (o AwsAppautoscalingPolicyOutput) ToAwsAppautoscalingPolicyOutputWithContext(ctx context.Context) AwsAppautoscalingPolicyOutput {
	return o
}

func (o AwsAppautoscalingPolicyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The resource type and unique identifier string for the resource associated with the scaling policy.
func (o AwsAppautoscalingPolicyOutput) FullResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) pulumi.StringOutput { return v.FullResourceId }).(pulumi.StringOutput)
}

// The name of the policy. Must be between 1 and 255 characters in length.
func (o AwsAppautoscalingPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The policy type. Valid values are `StepScaling` and `TargetTrackingScaling`. Defaults to `StepScaling`.
func (o AwsAppautoscalingPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) pulumi.StringPtrOutput { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// The resource type and unique identifier string for the resource associated with the scaling policy.
func (o AwsAppautoscalingPolicyOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// The scalable dimension of the scalable target.
func (o AwsAppautoscalingPolicyOutput) ScalableDimension() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) pulumi.StringOutput { return v.ScalableDimension }).(pulumi.StringOutput)
}

// The AWS service namespace of the scalable target.
func (o AwsAppautoscalingPolicyOutput) ServiceNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) pulumi.StringOutput { return v.ServiceNamespace }).(pulumi.StringOutput)
}

// Step scaling policy configuration, requires `policyType = "StepScaling"`
func (o AwsAppautoscalingPolicyOutput) StepScalingPolicyConfiguration() AwsAppautoscalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) AwsAppautoscalingPolicyStepScalingPolicyConfigurationPtrOutput {
		return v.StepScalingPolicyConfiguration
	}).(AwsAppautoscalingPolicyStepScalingPolicyConfigurationPtrOutput)
}

// A target tracking policy, requires `policyType = "TargetTrackingScaling"`
func (o AwsAppautoscalingPolicyOutput) TargetTrackingScalingPolicyConfiguration() AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
		return v.TargetTrackingScalingPolicyConfiguration
	}).(AwsAppautoscalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput)
}

// The GUID of the tenant that the aws autoscaling policy will be created in.
func (o AwsAppautoscalingPolicyOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAppautoscalingPolicy) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type AwsAppautoscalingPolicyArrayOutput struct{ *pulumi.OutputState }

func (AwsAppautoscalingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsAppautoscalingPolicy)(nil)).Elem()
}

func (o AwsAppautoscalingPolicyArrayOutput) ToAwsAppautoscalingPolicyArrayOutput() AwsAppautoscalingPolicyArrayOutput {
	return o
}

func (o AwsAppautoscalingPolicyArrayOutput) ToAwsAppautoscalingPolicyArrayOutputWithContext(ctx context.Context) AwsAppautoscalingPolicyArrayOutput {
	return o
}

func (o AwsAppautoscalingPolicyArrayOutput) Index(i pulumi.IntInput) AwsAppautoscalingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsAppautoscalingPolicy {
		return vs[0].([]*AwsAppautoscalingPolicy)[vs[1].(int)]
	}).(AwsAppautoscalingPolicyOutput)
}

type AwsAppautoscalingPolicyMapOutput struct{ *pulumi.OutputState }

func (AwsAppautoscalingPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsAppautoscalingPolicy)(nil)).Elem()
}

func (o AwsAppautoscalingPolicyMapOutput) ToAwsAppautoscalingPolicyMapOutput() AwsAppautoscalingPolicyMapOutput {
	return o
}

func (o AwsAppautoscalingPolicyMapOutput) ToAwsAppautoscalingPolicyMapOutputWithContext(ctx context.Context) AwsAppautoscalingPolicyMapOutput {
	return o
}

func (o AwsAppautoscalingPolicyMapOutput) MapIndex(k pulumi.StringInput) AwsAppautoscalingPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsAppautoscalingPolicy {
		return vs[0].(map[string]*AwsAppautoscalingPolicy)[vs[1].(string)]
	}).(AwsAppautoscalingPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAppautoscalingPolicyInput)(nil)).Elem(), &AwsAppautoscalingPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAppautoscalingPolicyArrayInput)(nil)).Elem(), AwsAppautoscalingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAppautoscalingPolicyMapInput)(nil)).Elem(), AwsAppautoscalingPolicyMap{})
	pulumi.RegisterOutputType(AwsAppautoscalingPolicyOutput{})
	pulumi.RegisterOutputType(AwsAppautoscalingPolicyArrayOutput{})
	pulumi.RegisterOutputType(AwsAppautoscalingPolicyMapOutput{})
}
